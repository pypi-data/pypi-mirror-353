Metadata-Version: 2.4
Name: postgkyl
Version: 1.7.6
Summary: Python library and command-line tool for postprocessing (not only) Gkeyll data
Author-email: Ammar Hakim <a.hakim@pppl.gov>, Petr Cagas <p.cagas@hzdr.de>
Maintainer-email: Petr Cagas <p.cagas@hzdr.de>
License: MIT License
        
        Copyright (c) 2016-2024 Ammar Hakim and the Gkeyll Team
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Documentation, https://gkeyll.readthedocs.io/
Project-URL: Repository, https://github.com/ammarhakim/postgkyl
Project-URL: Bug Tracker, https://github.com/ammarhakim/postgkyl/issues
Keywords: plasma,Gkeyll
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: AUTHORS.md
Requires-Dist: click>=8.1.7
Requires-Dist: matplotlib>=3.7.0
Requires-Dist: msgpack>=1.0.3
Requires-Dist: numpy<2,>=1.24.4
Requires-Dist: scipy>=1.10.1
Requires-Dist: sympy>=1.12
Requires-Dist: tables>=3.8.0
Provides-Extra: adios
Requires-Dist: adios2<2.10.0,>=2.9.0; extra == "adios"
Provides-Extra: test
Requires-Dist: pytest>=7.4.0; extra == "test"
Dynamic: license-file

# Postgkyl

![pytest](https://github.com/ammarhakim/postgkyl/actions/workflows/test.yml/badge.svg)

This is the Postgkyl project. It is both Python library and command-line tool
designed to provide unified access to Gkeyll data together with a broad variety
of analytical and visualization tools.

## Documentation

Full documentation of the Gkeyll project is available at
[ReadTheDocs](http://gkeyll.rtfd.io).

## Dependencies and Installation

Postgkyl requires the following packages:

* [click](https://pypi.org/project/click/)
* [matplotlib](https://pypi.org/project/matplotlib/)
* [msgpack](https://pypi.org/project/msgpack/)
* [numpy](https://pypi.org/project/numpy/)
* [scipy](https://pypi.org/project/scipy/)
* [sympy](https://pypi.org/project/sympy/)
* [tables](https://pypi.org/project/tables/)

Note that Posgkyl currently does not work with NumPy >= 2.0; the update is in
the works. In addition, there are two optional dependencies:

* [adios2](https://pypi.org/project/adios2/)
* [pytest](https://pypi.org/project/pytest/)

ADIOS 2 is required for reading Gkeyll 2 `bp` output files and it is not needed
when working only with `gkylzero`. [pytest](https://docs.pytest.org/en/stable/)
is required only for developers.

### Setting up virtual environment (recommended)

We strongly recommend creating a virtual Python environment for everybody
working with more than one Python project (this includes even using both
Postgkyl and Sphinx). The two recommended options are
[venv](https://docs.python.org/3/library/venv.html) and
[mamba](https://mamba.readthedocs.io/en/latest/).

With `venv`, one can create the virtual environment with:

```bash
python -m venv /path/to/new/virtual/environments/pgkyl
```

then activate it with:

| bash/zsh | `source <venv>/bin/activate`      |
| fish     | `source <venv>/bin/activate.fish` |
| csh/tcsh | `source <venv>/bin/activate.csh`  |

and deactivate with:

```bash
deactivate
```

With `mamba`, one can create the virtual environment with:

```bash
mamba create -n pgkyl
```

then activate with:

```bash
mamba activate pgkyl
```

and deactivate with:

```bash
mamba deactivate
```

Note that with `mamba`, one can also use the provided `environment.yml` file,
which also includes dependency specifications:

```bash
mamba env create -f environment.yml
```

### Installing Postgkyl

The Postgkyl itself is installed with `pip`.[^1] Developers and uses who want to
have the most up-to-date version should install Postgkyl from the source code:

```bash
git clone git@github.com:ammarhakim/postgkyl.git
cd postgkyl
pip install -e .[adios,test]
```

Alternatively, Postgkyl can be installed directly from [PyPI](https://pypi.org/project/postgkyl/):

```bash
pip install -e postgkyl[adios,test]
```

Note that ADIOS2 is not available on PyPI for Mac OSX; therefore, Mac users who
want to use it need to install the dependency from elsewhere, for example, using
the above-mentioned `mamba` and then do *not* use the `adios` tag with `pip`.

## Testing

Postgkyl utilizes [pytest](https://docs.pytest.org/) for testing. The tests can
be called manually from the root Postgkyl directory simply by using:

```bash
pytest [-v]
```

## Authors

The full list of authors can be found [here](AUTHORS.md).

## License

See [Gkyl License](http://gkyl.readthedocs.io/en/latest/license.html)
for usage conditions.

[^1]: This does *not* require any additional modifications of `PYTHONPATH`. If
    Postgkyl was used previously through `PYTHONPATH`, we strongly recommend
    removing the path to the Postgkyl repository from the variable.
