[project]
name = "crudites"
version = "0.0.4"
description = "A modern Python package for building robust web applications with FastAPI and SQLAlchemy. It focuses on providing the missing glue required to build standard CRUD applications with an opinionated view on best practices."
readme = "README.md"
authors = [
    { name = "Joel Beach", email = "12853460+jtbeach@users.noreply.github.com" }
]
license = { text = "MIT" }
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: FastAPI",
    "Typing :: Typed",
]
keywords = ["fastapi", "sqlalchemy", "crud", "web", "api", "async"]
dependencies = [
    "click>=8.1.8",
    "json-log-formatter>=1.1.1",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "pyjwt[crypto]>=2.10.1",
    "sentry-sdk[fastapi,httpx]>=2.29.1",
    "sqlalchemy[asyncio,postgresql-psycopg]>=2.0.41",
]

[project.urls]
Homepage = "https://github.com/jtbeach/crudites"
Documentation = "https://github.com/jtbeach/crudites#readme"
Repository = "https://github.com/jtbeach/crudites.git"
Issues = "https://github.com/jtbeach/crudites/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.sdist]
packages = ["src/crudites"]

[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "mypy>=1.15.0",
    "poethepoet>=0.34.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-timeout>=2.4.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.11.10",
]

[tool.bandit]
skips = ["B101"]

[tool.coverage.run]
disable_warnings = ["no-data-collected", "module-not-measured", "couldnt-parse"]

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.12"
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.poe.tasks]
# Define your aliases here
all = ["lint", "test"]
bandit_check = "bandit -c pyproject.toml -r src/crudites"
_format = "ruff format"
debug_test = "pytest -vv --pdb --capture=no"
fix = "ruff check --fix"
format = ["sort_imports", "_format"]
format_check = "ruff format --check"
lint_check = "ruff check"
lint = ["format_check", "lint_check", "type_check", "bandit_check"]
sort_imports = "ruff check --select I --fix"
test = "pytest"
type_check = "mypy --show-error-codes -p crudites -p tests"

[tool.pytest.ini_options]
addopts = "-vv -n auto --cov=crudites --cov-report=term-missing"
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"
log_cli_level = "CRITICAL"
log_cli = "true"
log_level = "DEBUG"
timeout = 60

[tool.ruff.format]
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = ["A", "B", "C901", "D1", "E", "F", "FA", "LOG", "N", "T10", "T20", "UP", "W"]
ignore = ["E111", "E114", "E117", "E266", "E501", "F821", "W191"]

[tool.ruff.lint.isort]
combine-as-imports = true
known-third-party = []
no-lines-before = ["local-folder"]


