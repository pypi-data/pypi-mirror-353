# coding: utf-8

"""
    MCPCat API

    API for MCPCat application

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from mcpcat_api.models.publish_event_request import PublishEventRequest

class TestPublishEventRequest(unittest.TestCase):
    """PublishEventRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublishEventRequest:
        """Test PublishEventRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublishEventRequest`
        """
        model = PublishEventRequest()
        if include_optional:
            return PublishEventRequest(
                id = '',
                project_id = '',
                session_id = '',
                actor_id = '',
                event_id = '',
                event_type = 'mcp:ping',
                is_error = True,
                error = None,
                resource_name = '',
                duration = 56,
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_intent = '',
                parameters = None,
                response = None,
                identify_actor_given_id = '',
                identify_actor_name = '',
                identify_data = None
            )
        else:
            return PublishEventRequest(
                session_id = '',
        )
        """

    def testPublishEventRequest(self):
        """Test PublishEventRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
