"""RSA public keys for signature verification."""

import tempfile

import rsa

from igelfs.utils import run_process

# OS 12 First Party Apps
OS12_APP_PUBLIC_KEY = rsa.PublicKey(
    n=0x
    e=0x010001,
)

# OS 12 Third Party Apps
OS12_THIRD_PARTY_PUBLIC_KEY = rsa.PublicKey(
    n=0x8416BC0FB1F0DB9CBC95BBA805646581B1383336044D24668406C46BE2457FFE06D5BA7F1D3C529DF05B446504E304A826076C8AAC3610D12599EE33683EC0D301309737B166AF73A628E3FCCAFBB49E4B9CCCC99770434C14CB66BB37302A3CFBD2C4C511AC06B69769F445DD18427BF075D501E39F14D82E6E309033AE68BE9A64016EC1B5C9DFBB7EB4D2B88DBAB7B5CBF2D68C1E5B1227A493BE871BEB1F77596252D699B7A905A0926771545E5413388AC30FE358EE84A48F578D7B0B1C4B30328EF44BA4C5C25F895AC9194AD86ADAFEBA5E8ADCEF4D1BD2F34B142816DEB147ECC258591238233FB43BB881D30E9FBA20A4CD6DCEE25B4E71FDE93B1200E4DEB0B42BB1643C698F4C22AD79A5413B202C68107D3E8A887D617CDFB551817F5B60D362A3BD01AF1B12E372D85379823B76BAA5EDBDF76A896765242BBAEA9584B54FC62ED3109EE3669131045BC998AE72E38008ADC94758FA277A127BD9AAC6AB851785D2F1CE0800FAA9A2CB6D3866CFAD47BD796354561DA01C38AD18607A1558072B756A52BBEC735FE7D1DCE22925BDD7EEF28B4A6C43E9B5938A641111A6BA5FEFDA4DC5E1D457AFCAC6B44054C3F0C626ECBA2DD3A0579875A92954F22F7D486921485D77647E685CB7D6A0F0540513C5ECF8A2E15F69610680EAE2DD7D2487F202AF9B726F06DC3599E9BD22511BA2E172AEE43BE1EF4557AD,
    e=0x010001,
)

# OS 12 Base System
OS12_BASE_PUBLIC_KEY = rsa.PublicKey(
    n=0x
    e=0x010001,
)

# OS 12 SDK Partner Apps
OS12_SDK_PUBLIC_KEY = rsa.PublicKey(
    n=0xE3562E61F278DBF27B76434AA6632C119D02261191D0A082F223CB23A529073555CE9602AD327ABA6EF93E46B7BC78B884C6F466C7EC35B141EDAC2EAE4E06967816F3CF1CE53E7DB69E3F932770F028B8B14870A74AF0127F9E1CA20F8FA952CFC1DF8DA8A396A6346554F9C8DE76CF44A1173377A93366CD0E11915B4BC2197CA8A31C40AD112BF93CB4E3853B7A240A0A50A61D1F807C1EBA2B34EFD126127D129D32BC41EE0F0621EF7392AF0226A91BD381A53990BFB49E7BDBBDE7E37CE77DD450A86FDEA1316D6903016C15D4161590DFC9354C04208076C5EF0702D717245BEFC7C0A43FDD894319BC57D20C29BC19ECB820310378848B43E16307CD7B75630F9629EF47140FE4ACEA4A2236EC3FE106CB485EE0521F90D883CB5187F1B132E1E2EC8B63D4E9B944F94A0064D9787852A9AE0B001AF3F51A5B7C6B5BBB6769300C59B83A3636F7104129AB279C3CDECD92FA5EA487BAAA911D7FDAD8D0C9870E3D2B0147F58152147851AED7C46D19AEE8C42C5F8D214002166ED717E1C14EB716962A844F567CD35116F4CFDA869D3C2F509D411CEE9B3D040160A0F8A8A9DFAEA21166C4266265C092C71D85D08E0A8EF8EDF857B17D79CA82D1C09D0441BC061FBD6EF5237FF49A5CBAB401D5F1C6AB50CEB0180E6482B0B0758AEF2E03A458081D552F87C33E15339040CD552A04FB94C3F6CFCFFB504F910715,
    e=0x010001,
)

# OS 11
HSM_PUBLIC_KEY = rsa.PublicKey(
    n=0xC297056539F4E2D0D0BA205965D5C9F49F836E8E83E560A6D43ED45720FAB2D0BA383B3BBEFD9EACA76ADFC7B5948D884DAB29333C5D0665098DC1F82BE50D5B874F3B664D895C7DF5ECAC7C099A76B9CB635928E4CD94D8052E95EDADAF7E5484ADB16465A661B4C0CBA79FFDC343C92A536A4940FE39EDEEF4A87C3E37D8E26227FDD031783698E8B996759E31A5B87E9DB9A7AEDFEAE24FDCD5C91E0799544859DBDEC3252B5C574A581A0BBFA950BF89FBED14C53318C0C962192C7B37C3CCC39C5E26F811BEE69B5A29A5A58D0D2636F1ADF8AEB4F3DA57278DE0FE62AAE39393DCFD3AA3B638AE0DB82E279F93A5A2D47CBEA6ED0D76918A82C2116535,
    e=0x010001,
)

# Test Key
TEST_PUBLIC_KEY = rsa.PublicKey(
    n=0xDEF3B906C78355F5E643AE4BA9C9BB51BFC4BCB7F7B2F392EDCBF20169EDFC659B3EB16F10902920D7BA67CAE90C90AE334031319EA8F5BCCBE28577CBA7C67DA14F9AF9C4310F50AE9F38A9C8EF0B3149EE6196FA69D46B208674EE7A3A0AD6D3F57C38F620F0808D7D91C13013A25B429FEE9111965527A36926953E9687ED84E57125A51525AE40DDEC4F7CCF0FDAAC144227CD4D7399E913F8875963141AA6134E9F704E7A846586284FCAF8CFD6097D4E4B153C04E55332508A5B7E01C3DF5AE1EE1C7B30F3375C86027BF7FC4F0B25E215B1C5890C0106D6A675E74CCF88740227D7F1E9FCCF2492AA955661F7C609F3429AF440DBD8264ADCBECAB013,
    e=0x010001,
)

IGEL_PUBLIC_KEYS = [
    OS12_APP_PUBLIC_KEY,
    OS12_THIRD_PARTY_PUBLIC_KEY,
    OS12_BASE_PUBLIC_KEY,
    OS12_SDK_PUBLIC_KEY,
    HSM_PUBLIC_KEY,
    TEST_PUBLIC_KEY,
]


def get_modulus_from_key(data: bytes | list[int]) -> int:
    """Get modulus for public RSA key from bytes."""
    if isinstance(data, list):
        data = bytes(data)
    with tempfile.NamedTemporaryFile(delete_on_close=False) as fd:
        fd.write(data)
        fd.close()
        return int(
            run_process(
                ["openssl", "rsa", "-in", fd.name, "-pubin", "-modulus", "-noout"]
            ).split("=")[1],
            16,
        )
