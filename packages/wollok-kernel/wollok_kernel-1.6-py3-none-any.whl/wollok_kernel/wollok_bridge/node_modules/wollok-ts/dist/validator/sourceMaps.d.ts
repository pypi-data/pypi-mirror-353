import { List } from '../extensions';
import { CodeContainer, Expression, If, Method, Node, Send, Sentence, SourceMap, Test } from '../model';
export declare const buildSourceMap: (node: Node, initialOffset: number, finalOffset: number) => SourceMap | undefined;
export declare const sourceMapForNodeName: (node: Node & {
    name?: string;
}) => SourceMap | undefined;
export declare const sourceMapForNodeNameOrFullNode: (node: Node & {
    name?: string;
}) => SourceMap | undefined;
export declare const sourceMapForOnlyTest: (node: Test) => SourceMap | undefined;
export declare const sourceMapForOverrideMethod: (node: Method) => SourceMap | undefined;
export declare const sourceMapForConditionInIf: (node: If) => SourceMap | undefined;
export declare const sourceMapForSentence: (sentence: Sentence) => SourceMap | undefined;
export declare const sourceMapForSentences: (sentences: List<Sentence>) => SourceMap;
export declare const sourceMapForReturnValue: (node: Method) => SourceMap | undefined;
export declare const sourceMapForBody: (node: CodeContainer) => SourceMap | undefined;
export declare const sourceMapForUnreachableCode: (node: If | Send) => SourceMap;
export declare const sourceMapForValue: (node: Node & {
    value?: Expression;
}) => SourceMap | undefined;
