import { Package } from '../model';
import { Interpreter } from './interpreter';
export interface DynamicDiagramElement {
    id: string;
    elementType: 'node' | 'reference';
    label: string;
}
export declare enum DynamicNodeType {
    OBJECT = "object",
    LITERAL = "literal",
    NULL = "null",
    REPL = "REPL"
}
export interface DynamicDiagramNode extends DynamicDiagramElement {
    type: DynamicNodeType;
    module: string;
}
export interface DynamicDiagramReference extends DynamicDiagramElement {
    sourceId: string;
    targetId: string;
    constant: boolean;
    sourceModule: string | undefined;
    targetModule: string | undefined;
}
export declare const getDynamicDiagramData: (interpreter: Interpreter, rootPackage?: Package) => DynamicDiagramElement[];
