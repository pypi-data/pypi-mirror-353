# -*- coding: utf-8 -*-
from setuptools import setup

modules = \
['desec_dyndns']
install_requires = \
['click>=8.1.8,<9.0.0',
 'desec-dns==1.2.0',
 'dnspython>=2.7.0',
 'ifaddr>=0.2.0,<0.3.0',
 'netifaces2>=0.0.22']

entry_points = \
{'console_scripts': ['desec-dyndns = desec_dyndns:update']}

setup_kwargs = {
    'name': 'desec-dnsupdater',
    'version': '0.1.1',
    'description': 'A simple DynDNS client for deSEC.io',
    'long_description': "# deSEC DNS Updater\n\nA dynamic DNS client for [deSEC.io](https://desec.io) domains that updates A and AAAA records based on your current public IP addresses.\n\n## Features\n\n- Updates both A (IPv4) and AAAA (IPv6) records\n- Supports multiple subdomains in a single run\n- Dry run mode to preview changes without modifying DNS\n- Customizable verbosity levels\n- Can run as a one-time update (e.g. via cron) or in continuous mode (e.g. via a systemd unit)\n- Respects API rate limits\n- Configurable via command line or environment variables\n- IPv6 detection from specific network interfaces\n- Robust error handling and logging\n\n## Installation\n\n### Using pip\n\n```bash\npip install desec-dnsupdater\n```\n\n### From source\n\n```bash\ngit clone https://github.com/yourusername/desec-dnsupdater.git\ncd desec-dnsupdater\npip install .\n# OR using Poetry\npoetry install\n```\n\n## Usage\n\n### Basic usage\n\n```bash\ndesec-dyndns --domain example.com --subdomain www --token YOUR_DESEC_TOKEN\n```\n\n### Updating multiple subdomains\n\n```bash\ndesec-dyndns --domain example.com --subdomain www --subdomain api --token YOUR_DESEC_TOKEN\n```\n\n### Specifying a network interface for IPv6 detection\n\n```bash\ndesec-dyndns --domain example.com --subdomain www --token YOUR_DESEC_TOKEN --interface eth0\n```\n\n### Dry run (preview changes without applying)\n\n```bash\ndesec-dyndns --domain example.com --subdomain www --token YOUR_DESEC_TOKEN --dry-run\n```\n\n### Continuous mode (run as a daemon)\n\n```bash\ndesec-dyndns --domain example.com --subdomain www --token YOUR_DESEC_TOKEN --continuous\n```\n\n### Increase verbosity\n\n```bash\n# Show warnings and errors\ndesec-dyndns --domain example.com --subdomain www --token YOUR_DESEC_TOKEN -v\n\n# Show info, warnings, and errors\ndesec-dyndns --domain example.com --subdomain www --token YOUR_DESEC_TOKEN -vv\n\n# Show debug messages, info, warnings, and errors\ndesec-dyndns --domain example.com --subdomain www --token YOUR_DESEC_TOKEN -vvv\n```\n\n## Command Reference\n\n```\nUsage: desec-dyndns [OPTIONS]\n\n  Update DNS settings for a deSEC domain.\n\nOptions:\n  -d, --domain TEXT               The domain to update in.  [required]\n  -s, --subdomain TEXT            The subdomain(s) to update.  [required]\n  -t, --token TEXT                The token to use for authentication.\n                                  [required]\n  -i, --interface TEXT            The network interface to use for determining\n                                  the IPv6 address. If not set, IPv6 is not\n                                  updated.\n  -l, --log-file FILENAME         The file to write logs to. Defaults to\n                                  stdout.  [default: -]\n  -v, --verbose                   Increase verbosity of output (can be used\n                                  multiple times for more verbosity, e.g.\n                                  `-vvv`). Default is errors only. Once for\n                                  warnings, twice for info, three times for\n                                  debug.\n  --dry-run                       Don't actually update the DNS records, just\n                                  print what would be done.  [default: False]\n  -c, --continuous                Run the update in a loop, waiting for the\n                                  specified wait time between updates.\n                                  [default: False]\n  --wait-time-between-checks INTEGER\n                                  The wait time between checks for updates in\n                                  seconds (for continuous updates, see\n                                  --continuous/-c).  [default: 60]\n  --wait-time-between-api-calls INTEGER\n                                  The wait time between domain update API calls\n                                  in seconds (for respecting rate limits).\n                                  [default: 5]\n  -h, --help                      Show this message and exit.\n```\n\n## Environment Variables\n\nAll command-line options can also be specified via environment variables with the prefix `DESEC_DYNDNS_`:\n\n- `DESEC_DYNDNS_DOMAIN` - The domain to update\n- `DESEC_DYNDNS_SUBDOMAIN` - The subdomain(s) to update\n- `DESEC_DYNDNS_TOKEN` - Your deSEC API token\n- `DESEC_DYNDNS_INTERFACE` - Network interface for IPv6\n- `DESEC_DYNDNS_LOG_FILE` - Log file path\n- `DESEC_DYNDNS_VERBOSE` - Verbosity level (set to number 1-3)\n- `DESEC_DYNDNS_DRY_RUN` - Set to any value to enable\n- `DESEC_DYNDNS_CONTINUOUS` - Set to any value to enable\n- `DESEC_DYNDNS_WAIT_TIME_BETWEEN_CHECKS` - Time between checks in continuous mode\n- `DESEC_DYNDNS_WAIT_TIME_BETWEEN_API_CALLS` - Time between API calls\n\nExample:\n```bash\nexport DESEC_DYNDNS_DOMAIN=example.com\nexport DESEC_DYNDNS_SUBDOMAIN=www\nexport DESEC_DYNDNS_TOKEN=your_token_here\ndesec-dyndns  # Uses values from environment\n```\n\n## How It Works\n\n1. The tool retrieves your current public IPv4 address from ipify.org\n2. If specified, it detects your public IPv6 address from the given network interface\n3. It compares these with the current DNS records for your domain\n4. If different, it updates the records using the deSEC API\n\n### Assumptions\n\n- You have created an API token with permission to modify your domain's DNS records\n- For IPv6 updates, you need a globally routable IPv6 address on the specified interface which is derived from your MAC address (no privacy extensions)\n- You have properly set up your domain with deSEC.io\n\n## Running as a Service\n\n### Systemd\n\nCreate a file at `/etc/systemd/system/desec-dyndns.service`:\n\n```ini\n[Unit]\nDescription=deSEC Dynamic DNS Updater\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nType=simple\nExecStart=/path/to/desec-dyndns --domain example.com --subdomain www --token YOUR_TOKEN --interface eth0 --continuous\nRestart=on-failure\nRestartSec=60s\n\n[Install]\nWantedBy=multi-user.target\n```\n\nThen enable and start the service:\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl enable desec-dyndns\nsudo systemctl start desec-dyndns\n```\n\n## Troubleshooting\n\n- If you get authentication errors, check your token\n- For IPv6 issues, make sure your interface has a public IPv6 address\n- Increase verbosity up to `-vvv` to see detailed debug information\n- Use `--dry-run` to test without making changes\n\n## License\n\nMIT\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.",
    'author': 'Ole Langbehn',
    'author_email': 'ole@langbehn.family',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'None',
    'py_modules': modules,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.11,<3.14',
}


setup(**setup_kwargs)
