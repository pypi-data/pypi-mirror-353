from io import BytesIO, TextIOWrapper
from pathlib import Path
from unittest.mock import patch

from _pytest.logging import LogCaptureFixture
from bs4 import BeautifulSoup
from pydantic import ValidationError
from pydantic_core import InitErrorDetails

from labels.model.file import Coordinates, DependencyType, Location, LocationReadCloser, Scope
from labels.model.package import Language, Package, PackageType
from labels.parsers.cataloger.dotnet.parse_csproj import (
    _format_csproj_reference_deps,
    format_package,
    parse_csproj,
)
from labels.testing.utils.helpers import get_test_data_path
from labels.utils.file import new_location


def test_parse_csproj() -> None:
    test_data_path = get_test_data_path("dependencies/dotnet/project.csproj")
    expected_packages = [
        Package(
            name="EntityFramework",
            version="6.4.0",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=13,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/EntityFramework@6.4.0",
        ),
        Package(
            name="Microsoft.Azure.WebJobs.Extensions",
            version="3.0.5",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=14,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.WebJobs.Extensions@3.0.5",
        ),
        Package(
            name="Microsoft.Azure.WebJobs.Extensions.Http",
            version="3.0.2",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=18,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.WebJobs.Extensions.Http@3.0.2",
        ),
        Package(
            name="Microsoft.Azure.WebJobs.Host.Storage",
            version="3.0.14",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=22,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.WebJobs.Host.Storage@3.0.14",
        ),
        Package(
            name="Wire",
            version="1.0.0",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=26,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Wire@1.0.0",
        ),
        Package(
            name="Microsoft.Azure.WebJobs.Logging",
            version="3.0.14",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=27,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.WebJobs.Logging@3.0.14",
        ),
        Package(
            name="Microsoft.Azure.WebJobs.Logging.ApplicationInsights",
            version="3.0.14",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=31,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.WebJobs.Logging.ApplicationInsights@3.0.14",
        ),
        Package(
            name="Microsoft.CrmSdk.CoreAssemblies",
            version="9.0.2.21",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=35,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.CrmSdk.CoreAssemblies@9.0.2.21",
        ),
        Package(
            name="Microsoft.Extensions.Configuration",
            version="3.1.0",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=39,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Extensions.Configuration@3.1.0",
        ),
        Package(
            name="Microsoft.Extensions.Logging",
            version="3.1.0",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=43,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Extensions.Logging@3.1.0",
        ),
        Package(
            name="Microsoft.Extensions.Logging.Console",
            version="3.1.0",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=44,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Extensions.Logging.Console@3.1.0",
        ),
        Package(
            name="Newtonsoft.Json",
            version="12.0.3",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=48,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Newtonsoft.Json@12.0.3",
        ),
        Package(
            name="System.ComponentModel.Annotations",
            version="4.7.0",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=49,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/System.ComponentModel.Annotations@4.7.0",
        ),
        Package(
            name="System.Spatial",
            version="5.8.4",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=53,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/System.Spatial@5.8.4",
        ),
        Package(
            name="Microsoft.Data.Edm",
            version="5.8.4",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=54,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Data.Edm@5.8.4",
        ),
        Package(
            name="Microsoft.Data.OData",
            version="5.8.3",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=55,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Data.OData@5.8.3",
        ),
        Package(
            name="Microsoft.Data.Services.Client",
            version="5.8.4",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=56,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Data.Services.Client@5.8.4",
        ),
        Package(
            name="Microsoft.WindowsAzure.ConfigurationManager",
            version="3.2.3",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=60,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.WindowsAzure.ConfigurationManager@3.2.3",
        ),
        Package(
            name="WindowsAzure.Storage",
            version="9.3.3",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=64,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/WindowsAzure.Storage@9.3.3",
        ),
        Package(
            name="Microsoft.Azure.WebJobs.Core",
            version="3.0.14",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=65,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.WebJobs.Core@3.0.14",
        ),
        Package(
            name="Microsoft.Azure.WebJobs",
            version="3.0.14",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=66,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.WebJobs@3.0.14",
        ),
        Package(
            name="Microsoft.Azure.KeyVault.Core",
            version="3.0.4",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=67,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Microsoft.Azure.KeyVault.Core@3.0.4",
        ),
        Package(
            name="Newtonsoft.Json",
            version="11.0.0",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=72,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/Newtonsoft.Json@11.0.0",
        ),
        Package(
            name="system.net.http",
            version="4.3.4",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=79,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/system.net.http@4.3.4",
        ),
        Package(
            name="system.security.cryptography.x509certificates",
            version="4.1.1",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=88,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/system.security.cryptography.x509certificates@4.1.1",
        ),
        Package(
            name="itextsharp-lgpl",
            version="4.1.6",
            language=Language.DOTNET,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=95,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                ),
            ],
            type=PackageType.DotnetPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:nuget/itextsharp-lgpl@4.1.6",
        ),
    ]

    with Path(test_data_path).open(encoding="utf-8") as reader:
        pkgs, _ = parse_csproj(
            None,
            None,
            LocationReadCloser(location=new_location(test_data_path), read_closer=reader),
        )
        for pkg in pkgs:
            pkg.health_metadata = None
            pkg.licenses = []
        assert pkgs == expected_packages


def test_format_package_without_coordinates() -> None:
    location = Location(
        scope=Scope.PROD,
        coordinates=None,
        access_path="./",
        annotations={},
        dependency_type=DependencyType.UNKNOWN,
    )

    content = (
        b'<?xml version="1.0" encoding="utf-8"?>\n<Project Sdk="Microsoft.NET.Sdk">\n</Project>'
    )
    reader = LocationReadCloser(
        location=location,
        read_closer=TextIOWrapper(BytesIO(content), encoding="utf-8"),
    )

    result = format_package("test-package", "1.0.0", 1, reader)

    assert result is not None
    assert result.locations[0].coordinates is None
    assert result.locations[0].dependency_type == DependencyType.UNKNOWN


def test_format_package_validation_error(caplog: LogCaptureFixture) -> None:
    location = Location(
        scope=Scope.PROD,
        coordinates=None,
        access_path="./",
        annotations={},
        dependency_type=DependencyType.UNKNOWN,
    )

    content = (
        b'<?xml version="1.0" encoding="utf-8"?>\n<Project Sdk="Microsoft.NET.Sdk">\n</Project>'
    )
    reader = LocationReadCloser(
        location=location,
        read_closer=TextIOWrapper(BytesIO(content), encoding="utf-8"),
    )

    with patch("labels.model.package.Package.__init__") as mock_init:
        mock_init.side_effect = ValidationError.from_exception_data(
            title="",
            line_errors=[
                InitErrorDetails(
                    type="missing",
                    loc=("name",),
                    input=None,
                    ctx={},
                ),
            ],
        )

        result = format_package("test-package", "1.0.0", 1, reader)

        assert result is None
        assert (
            "Malformed package. Required fields are missing or data types are incorrect."
            in caplog.text
        )


def test_format_csproj_reference_deps_empty() -> None:
    location = Location(
        scope=Scope.PROD,
        coordinates=None,
        access_path="./",
        annotations={},
        dependency_type=DependencyType.UNKNOWN,
    )

    content = b"""<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <ItemGroup>
        <Reference>
            <Private>True</Private>
        </Reference>
    </ItemGroup>
</Project>"""

    reader = LocationReadCloser(
        location=location,
        read_closer=TextIOWrapper(BytesIO(content), encoding="utf-8"),
    )

    root = BeautifulSoup(content, features="html.parser")

    result = _format_csproj_reference_deps(root, reader)

    assert result == []
