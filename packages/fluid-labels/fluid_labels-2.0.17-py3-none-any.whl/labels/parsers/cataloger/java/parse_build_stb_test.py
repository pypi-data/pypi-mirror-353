from io import BytesIO, TextIOWrapper
from pathlib import Path

from labels.model.file import Coordinates, DependencyType, Location, LocationReadCloser, Scope
from labels.model.package import Language, Package, PackageType
from labels.parsers.cataloger.java import parse_build_stb
from labels.testing.utils.helpers import get_test_data_path
from labels.utils.file import new_location


def test_parse_build_stb() -> None:
    test_data_path = get_test_data_path("dependencies/java/build.sbt")
    expected_packages = [
        Package(
            name="com.typesafe.slick:slick",
            version="unknown",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=2,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.typesafe.slick/slick@unknown",
        ),
        Package(
            name="com.typesafe.slick:slick-hikaricp",
            version="unknown",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=3,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.typesafe.slick/slick-hikaricp@unknown",
        ),
        Package(
            name="org.apache.logging.log4j:log4j-api",
            version="2.17.0",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=4,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.logging.log4j/log4j-api@2.17.0",
        ),
        Package(
            name="org.apache.logging.log4j:log4j-core",
            version="2.2",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=5,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.logging.log4j/log4j-core@2.2",
        ),
        Package(
            name="org.apache.logging.log4j:log4j-web",
            version="2.2",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=6,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.logging.log4j/log4j-web@2.2",
        ),
        Package(
            name="com.lmax:disruptor",
            version="3.3.2",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=7,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.lmax/disruptor@3.3.2",
        ),
        Package(
            name="org.glassfish.jersey.core:jersey-client",
            version="2.17",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=8,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.glassfish.jersey.core/jersey-client@2.17",
        ),
        Package(
            name="org.apache.kylin:kylin",
            version="2.5.0",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=11,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.kylin/kylin@2.5.0",
        ),
        Package(
            name="org.mockito:mockito-all",
            version="1.9.5",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=15,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.mockito/mockito-all@1.9.5",
        ),
        Package(
            name="com.novocode:junit-interface",
            version="0.7",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=16,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.novocode/junit-interface@0.7",
        ),
        Package(
            name="org.pegdown:pegdown",
            version="1.6.0",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=17,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.pegdown/pegdown@1.6.0",
        ),
        Package(
            name="com.h2database:h2",
            version="1.4.200",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=18,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.h2database/h2@1.4.200",
        ),
        Package(
            name="org.scala-lang:scala-compiler",
            version="unknown",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=19,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.scala-lang/scala-compiler@unknown",
        ),
        Package(
            name="org.scala-lang:scala-reflect",
            version="unknown",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=20,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.scala-lang/scala-reflect@unknown",
        ),
        Package(
            name="org.apache.nifi.registry:nifi-registry-web-api",
            version="0.4.1",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=21,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.nifi.registry/nifi-registry-web-api@0.4.1",
        ),
        Package(
            name="org.apache.nutch:nutch",
            version="2.0.0",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=22,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.nutch/nutch@2.0.0",
        ),
        Package(
            name="org.apache.ode:ode",
            version="unknown",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=23,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.ode/ode@unknown",
        ),
        Package(
            name="org.apache.openjpa:openjpa",
            version="2.2.0",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=24,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.apache.openjpa/openjpa@2.2.0",
        ),
        Package(
            name="com.typesafe.akka:akka-testkit",
            version="2.5.25",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=33,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.typesafe.akka/akka-testkit@2.5.25",
        ),
        Package(
            name="com.typesafe.akka:akka-http-testkit",
            version="10.1.10",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=34,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.typesafe.akka/akka-http-testkit@10.1.10",
        ),
        Package(
            name="com.novocode:junit-interface",
            version="0.7",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=37,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/com.novocode/junit-interface@0.7",
        ),
        Package(
            name="org.mockito:mockito-all",
            version="1.9.5",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=38,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.mockito/mockito-all@1.9.5",
        ),
        Package(
            name="org.pegdown:pegdown",
            version="1.6.0",
            language=Language.JAVA,
            licenses=[],
            locations=[
                Location(
                    scope=Scope.PROD,
                    coordinates=Coordinates(
                        real_path=test_data_path,
                        file_system_id=None,
                        line=39,
                    ),
                    access_path=test_data_path,
                    annotations={},
                    dependency_type=DependencyType.DIRECT,
                    reachable_cves=[],
                ),
            ],
            type=PackageType.JavaPkg,
            advisories=None,
            dependencies=None,
            found_by=None,
            health_metadata=None,
            is_dev=False,
            metadata=None,
            p_url="pkg:maven/org.pegdown/pegdown@1.6.0",
        ),
    ]

    with Path(test_data_path).open(encoding="utf-8") as reader:
        pkgs, relations = parse_build_stb.build_stb(
            None,
            None,
            LocationReadCloser(location=new_location(test_data_path), read_closer=reader),
        )
        for pkg in pkgs:
            pkg.health_metadata = None
            pkg.licenses = []
        for rel in relations:
            rel.from_.health_metadata = None
            rel.from_.licenses = []
            rel.to_.health_metadata = None
            rel.to_.licenses = []
        assert pkgs == expected_packages


def test_parse_build_stb_without_coordinates() -> None:
    test_data = '"org.apache.logging.log4j" % "log4j-api" % "2.17.0"'
    location = new_location("test.sbt")
    location.coordinates = None

    reader = TextIOWrapper(BytesIO(test_data.encode("utf-8")))

    pkgs, relations = parse_build_stb.build_stb(
        None,
        None,
        LocationReadCloser(location=location, read_closer=reader),
    )

    assert len(pkgs) == 1
    pkg = pkgs[0]
    assert pkg.name == "org.apache.logging.log4j:log4j-api"
    assert pkg.version == "2.17.0"
    assert pkg.locations[0].coordinates is None
    assert pkg.locations[0].dependency_type == DependencyType.UNKNOWN
    assert len(relations) == 0
