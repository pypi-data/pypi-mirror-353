[project]
name = 'StabiliserSuite'
version = "v1.1.10"
description = 'Toolbox for Quantum Computer testing.'
authors = [
    { name = 'Anton Perepelenko', email = 'anton.perepelenko@achaad.eu' },
]
maintainers = [
    { name = 'Anton Perepelenko', email = 'anton.perepelenko@achaad.eu' },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Quantum Computing",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Console",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
readme = 'README.md'
license = { text = 'MIT' }
keywords = [
    "quantum computing",
    "nisq",
    "clifford circuits",
    "stabiliser",
    "stabilizer formalism",
    "gate transformation",
    "tableau simulation",
    "quantum benchmarking",
    "qiskit",
    "gate decomposition",
    "python toolbox"
]
requires-python = '>=3.12'
dependencies = [
    'numpy>=2.2.0',
    'termtables>=0.2.0',
    'build>=1.2.0',
    'qiskit>=1.3.0',
    'numba>=0.61.0',
    'tqdm>=4.67.0'
]

[project.optional-dependencies]
test = [
    'pytest>=8.3.0',
]

[project.urls]
repository = 'https://github.com/Achaad/StabiliserSuite/'
'Bug Tracker' = 'https://github.com/Achaad/StabiliserSuite/issues'


[build-system]
requires = ['setuptools']
build-backend = 'setuptools.build_meta'

[tool.semantic_release]
version_source = "master"
branch = "master"
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version:tf"]
upload_to_pypi = true
changelog_file = "CHANGELOG.md"
commit_message = "chore(release): {version}"
token = { env = "GITHUB_TOKEN" }
major_on_zero = true
allow_zero_version = true

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[stool.emantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false
