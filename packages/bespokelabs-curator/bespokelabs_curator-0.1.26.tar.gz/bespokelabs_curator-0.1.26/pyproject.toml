[tool.poetry]
name = "bespokelabs-curator"
version = "0.1.26"
description = "Bespoke Labs Curator"
authors = ["Bespoke Labs <company@bespokelabs.ai>"]
readme = "README.md"
packages = [
    {include = "bespokelabs", from = "src"},
]
include = [
    "src/bespokelabs/curator/viewer/static/**/*"
]
exclude = [
    "src/bespokelabs/curator/viewer/static/.next/cache/**/*"
]
license = "Apache-2.0"
homepage = "https://github.com/bespokelabsai/curator"
repository = "https://github.com/bespokelabsai/curator"
keywords = ["ai", "curator", "bespoke"]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = ">=2.9.2"
datasets = "^3.0.2"
instructor = "^1.6.3"
pandas = "2.2.2"
xxhash = "^3.5.0"
tqdm = "^4.67.0"
matplotlib = "^3.9.2"
nest-asyncio = "^1.6.0"
rich = "^13.7.0"
litellm = "1.61.3"
tiktoken = ">=0.7.0"
aiofiles = ">=22.0,<24.0"
anthropic = "^0.47.2"
vertexai= "1.71.1"
vllm = { version = "^0.6.3", optional = true }
aiodocker = { version = "^0.24.0", optional = true }
ray = { version = "^2.41.0", optional = true }
e2b-code-interpreter = { version = "1.0.3", optional = true }

posthog = "^3.11.0"
mistralai = "^1.5.1"

[tool.poetry.extras]
vllm = ["vllm"]
code_execution = ["ray", "aiodocker", "e2b-code-interpreter"]

[tool.poetry.group.dev.dependencies]
twine = "^5.0.0"
ruff = "^0.8.6"
vcrpy = "^7.0.0"
isort = "^5.13.2"
pre-commit = "^4.0.1"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-dependency = "^0.6.0"
pytest-timeout = "^2.3.1"
pytest-cov = "^6.0.0"
psutil = "^6.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
curator-viewer = "bespokelabs.curator.viewer.__main__:main"

[tool.ruff]
line-length = 160

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D"  # pydocstyle
]
ignore = [
    "D100",  # Remove this eventually
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401",  # imperative mood
    "N806",  # uppercase variable names, for example, "API_KEY"
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["D"]  # ignore tests for now
"**/prompt_templates.py" = ["E501"]  # ignore line-too-long for prompt template files
"**/claude_reasoning_online.py" = ["E501", "W291"]  # ignore line-too-long and trailing whitespace for API examples

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
omit = [
    "src/bespokelabs/curator/install_ui.py",
    "src/bespokelabs/curator/status_tracker/offline_status_tracker.py",
    "src/bespokelabs/curator/code_executor/*",
]
