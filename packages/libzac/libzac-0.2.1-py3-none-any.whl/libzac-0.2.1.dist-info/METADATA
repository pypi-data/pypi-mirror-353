Metadata-Version: 2.1
Name: libzac
Version: 0.2.1
Summary: A private use library
Author-email: ZinGer_KyoN <zinger.kyon@gmail.com>
License: MIT License
        
        Copyright (c) 2022 YiChip Inc.
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: matplotlib
Requires-Dist: pandas
Requires-Dist: packaging
Requires-Dist: xlrd
Requires-Dist: openpyxl
Requires-Dist: classutilities
Requires-Dist: mplcursors
Requires-Dist: scipy
Requires-Dist: soundfile

# libzac - a helper function library for my daily work

## libzac.e

- `eread/ewrite/ewrite_block/...`
python wrapper of `e.exe` command line tool.

## libzac.io

- `c2np/np2c/...`
helper function for converting between numpy array and C array. Convenient for move static data between python and C.

## libzac.math

- `u2i/i2u`
converting bewteen signed/unsigned integer with arbitrary bit width.

`i4_to_i3u1/i3u1_to_i4`
converting between numpy array with dtype=i4 but contain only 24 bit data and array with 3x length and dtype=u1 that contain same data.

## libzac.dsp

- `rolling_windown/sig2frames`
function that convert a signal to frames with overlap(moving window).

## libzac.bitfield

- `class bitfield`
a C bitfield like class that can be used in python, like ctypes.Structure but with more features.

## libzac.reg

- `read_yc_reg/table2tree/...`
function that read yichip excel register table and format into pandas' Dataframe.

## libzac.plt

- `shift_factory/zoom_factory`
function that create a shift/zoom function that can be used in matplotlib.pyplot.
