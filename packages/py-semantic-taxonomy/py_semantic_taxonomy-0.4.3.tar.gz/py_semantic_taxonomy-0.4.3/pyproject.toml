[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "py_semantic_taxonomy"
authors = [
  { name="Chris Mutel", email="chris@cauldron.ch" }
]
maintainers = [
  { name="Chris Mutel", email="chris@cauldron.ch" }
]
description = "Python webapp and API for SKOS semantic taxonomies"
readme = "README.md"
dynamic = ["version"]
# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering"
]
requires-python = ">=3.12"
dependencies = [
    "asyncpg",
    "fastapi",
    "fastapi_pagination",
    "jinja2",
    "langcodes",
    "language-data",
    "orjson",
    "pydantic>=2",
    "pydantic_settings",
    "rdflib",
    "rfc3987",
    "sqlalchemy>=2.0",
    "structlog",
    # Fork of typesense client with async support
    "pyst_typesense_async",
    "uvicorn",
]

[project.urls]
source = "https://github.com/cauldron/py-semantic-taxonomy"
homepage = "https://github.com/cauldron/py-semantic-taxonomy"
tracker = "https://github.com/cauldron/py-semantic-taxonomy/issues"

[project.optional-dependencies]
# Getting recursive dependencies to work is a pain, this
# seems to work, at least for now
testing = [
    "aiosqlite",
    "faker",
    "httpx",
    "py_semantic_taxonomy",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-randomly",
    "pytest-antilru",
    "python-coveralls",
    "testcontainers[postgres]",
]
dev = [
    "build",
    "pre-commit",
    "aiosqlite",
    "httpx",
    "mkdocs",
    "mkdocs-material",
    "pylint",
    "pytest",
    "pytest-antilru",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-randomly",
    "setuptools",
    "testcontainers[postgres]",
]

[tool.setuptools]
include-package-data = true
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "py_semantic_taxonomy.__version__"}

[tool.pytest.ini_options]
addopts = "--cov py_semantic_taxonomy --cov-report term-missing --verbose -m \"not postgres and not typesense\""
norecursedirs = [
    "dist",
    "build",
    ".tox"
]
testpaths = ["tests/**/*.py"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    # Mark tests with `@pytest.mark.postgres` (deselect with `pytest -m "postgres or not postgres"`)
    "postgres",
    "typesense"
]
lru_cache_disabled = '''
    py_semantic_taxonomy.dependencies
    py_semantic_taxonomy.cfg
    '''

[tool.flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 100
extend_ignore = ["E203", "W503"]
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude = [
    ".tox",
    "build",
    "dist",
    ".eggs",
    "docs/conf.py",
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
