[project]
dependencies = [
    "instructor>=1.7.2",
    "langchain>=0.3.19",
    "langchain-openai>=0.3.11",
    "pillow>=11.1.0",
    "regex>=2024.11.6",
    "rich>=13.9.4",
    "colorama>=0.4.6",
    "spargear>=0.2.0",
]
name = "chatterer"
version = "0.1.23"
description = "The highest-level interface for various LLM APIs."
readme = "README.md"
requires-python = ">=3.12"

[tool.setuptools.packages.find]
where = ["."]
include = ["chatterer", "chatterer.*"]

[project.optional-dependencies]
dev = ["neo4j-extension>=0.1.14", "ipykernel>=6.29.5"]

# Tool
conversion = [
    "youtube-transcript-api>=1.0.3",
    "chatterer[browser]",
    "chatterer[pdf]",
    "chatterer[markdown]",
    "chatterer[video]",
]
browser = ["playwright>=1.50.0"]
pdf = ["pymupdf>=1.25.4", "pypdf>=5.4.0"]
markdown = [
    "markitdown[all]>=0.1.1",
    "markdownify>=1.1.0",
    "commonmark>=0.9.1",
    "mistune>=3.1.3",
]
video = ["pydub>=0.25.1"]

# Langchain
langchain = ["chatterer[langchain-providers]", "langchain-experimental>=0.3.4"]
langchain-providers = [
    "langchain-anthropic>=0.3.10",
    "langchain-google-genai>=2.1.1",
    "langchain-ollama>=0.3.0",
]

# Optional dependencies for different functionalities
all = ["chatterer[dev]", "chatterer[langchain]", "chatterer[conversion]"]

[project.scripts]
pdf-to-markdown = "chatterer.examples.pdf_to_markdown:main"
webpage-to-markdown = "chatterer.examples.webpage_to_markdown:main"
upstage-parser = "chatterer.examples.upstage_parser:main"
transcription-api = "chatterer.examples.transcription_api:main"
pdf-to-text = "chatterer.examples.pdf_to_text:main"
make-ppt = "chatterer.examples.make_ppt:main"
login-with-playwright = "chatterer.examples.login_with_playwright:main"
get-code-snippets = "chatterer.examples.get_code_snippets:main"
anything-to-markdown = "chatterer.examples.anything_to_markdown:main"

[tool.uv]
package = true
