name: Doctest

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  doctest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Run doctests
      run: |
        # Run doctests for all Python files in src/
        uv run python -m doctest -v src/agents_sdk_models/*.py
        
        # Run doctests for minimal example
        uv run python -m doctest -v examples/minimal/minimal_example.py
        
        # Run doctests using pytest (if any exist in tests/)
        uv run pytest --doctest-modules src/agents_sdk_models/
    
    - name: Test minimal example execution
      run: |
        # Test that the minimal example can be imported without errors
        uv run python -c "import examples.minimal.minimal_example"
        
        # Test basic functionality (without API key)
        uv run python -c "
        import sys
        sys.path.insert(0, 'examples')
        from minimal.minimal_example import create_basic_llm
        llm = create_basic_llm()
        print('✓ Basic LLM creation works')
        "
    
    - name: Generate AI tool definitions
      run: |
        uv run python scripts/generate_ai_tools.py
        
        # Verify files were generated
        test -f openai_tools.json && echo "✓ openai_tools.json generated"
        test -f .aidef && echo "✓ .aidef generated" 