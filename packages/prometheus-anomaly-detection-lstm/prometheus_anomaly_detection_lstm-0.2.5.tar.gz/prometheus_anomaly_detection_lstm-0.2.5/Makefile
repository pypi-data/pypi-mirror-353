# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Python –ø—Ä–æ–µ–∫—Ç–æ–º —Å –ø–æ–º–æ—â—å—é uv

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
# –ò—Å–ø–æ–ª—å–∑—É–µ–º uv –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º –∏ –ø–∞–∫–µ—Ç–∞–º–∏
UV = uv
PYTHON_IN_VENV = .venv/bin/python

# –¶–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
.DEFAULT_GOAL := help

# `.PHONY` –æ–±—ä—è–≤–ª—è–µ—Ç —Ü–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Ñ–∞–π–ª–∞–º–∏.
.PHONY: help setup-uv install sync lock update collect preprocess train detect build clean

# --- –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ---

help:
	@echo "Makefile –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ prometheus-anomaly-detection-lstm"
	@echo "--------------------------------------------------------"
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "\n  make setup-uv      - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç uv, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."
	@echo "  make install       - (–ü–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞) –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç uv, —Å–æ–∑–¥–∞–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —Å—Ç–∞–≤–∏—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."
	@echo "  make sync          - (–ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ) –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å lock-—Ñ–∞–π–ª–æ–º."
	@echo "  make lock          - –û–±–Ω–æ–≤–ª—è–µ—Ç lock-—Ñ–∞–π–ª (requirements.lock.txt) –Ω–∞ –æ—Å–Ω–æ–≤–µ pyproject.toml."
	@echo "  make update        - –û–±–Ω–æ–≤–ª—è–µ—Ç lock-—Ñ–∞–π–ª –∏ —Å—Ä–∞–∑—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ."
	@echo "\n--- –ö–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ ---"
	@echo "  make collect       - –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ Prometheus."
	@echo "  make preprocess    - –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."
	@echo "  make train         - –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏."
	@echo "  make detect        - –ó–∞–ø—É—Å–∫–∞–µ—Ç real-time –¥–µ—Ç–µ–∫—Ç–æ—Ä –∞–Ω–æ–º–∞–ª–∏–π."
	@echo "\n--- –°–±–æ—Ä–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ ---"
	@echo "  make build         - –°–æ–±–∏—Ä–∞–µ—Ç –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã –ø–∞–∫–µ—Ç–∞ (wheel –∏ sdist)."
	@echo "  make clean         - –£–¥–∞–ª—è–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å–±–æ—Ä–∫–∏, –∫—ç—à–∏ –∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ uv
setup-uv:
	@echo "‚¨áÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ uv..."
	@if ! command -v uv &> /dev/null; then \
		echo "uv –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞..."; \
		curl -LsSf https://astral.sh/uv/install.sh | sh; \
		echo "‚ÄºÔ∏è  –í–∞–∂–Ω–æ: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤–∞—à —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ 'source $$HOME/.cargo/env', —á—Ç–æ–±—ã –∫–æ–º–∞–Ω–¥–∞ uv —Å—Ç–∞–ª–∞ –¥–æ—Å—Ç—É–ø–Ω–∞."; \
	else \
		echo "‚úÖ uv —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."; \
	fi

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install: setup-uv .venv/pyvenv.cfg requirements.lock.txt
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
	$(UV) pip sync requirements.lock.txt
	@echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ: source .venv/bin/activate"

# –Ø–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –≠—Ç–∞ —Ü–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –¥–ª—è `install`
.venv/pyvenv.cfg:
	@echo "üêç –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è .venv..."
	$(UV) venv

# –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å lock-—Ñ–∞–π–ª–æ–º
sync:
	@echo "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å requirements.lock.txt..."
	$(UV) pip sync requirements.lock.txt
	@echo "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞."

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ lock-—Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è pyproject.toml
lock:
	@echo "üîí –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ requirements.lock.txt –∏–∑ pyproject.toml..."
	$(UV) pip compile pyproject.toml --extra dev -o requirements.lock.txt
	@echo "‚úÖ Lock-—Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω."

# –ö–æ–º–±–∏–Ω–∞—Ü–∏—è `lock` –∏ `sync` –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
update: lock sync

# --- –ö–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–∏—Å–ø–æ–ª—å–∑—É—é—Ç cli.py) ---

collect:
	@echo "üìä –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö..."
	$(UV) run python cli.py collect

preprocess:
	@echo "üõ†Ô∏è  –ó–∞–ø—É—Å–∫ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö..."
	$(UV) run python cli.py preprocess

train:
	@echo "üéì –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏..."
	$(UV) run python cli.py train

detect:
	@echo "üì° –ó–∞–ø—É—Å–∫ real-time –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞..."
	$(UV) run python cli.py detect

# --- –°–±–æ—Ä–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ ---

# –°–±–æ—Ä–∫–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤
build:
	@echo "üì¶ –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞..."
	$(UV) run python -m build

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	rm -rf .venv
	rm -rf dist
	rm -rf build
	rm -rf .pytest_cache
	rm -rf *.egg-info
	find . -type d -name "__pycache__" -exec rm -r {} +
	echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."

