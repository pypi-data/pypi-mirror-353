# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from ondewo.nlu import aiservices_pb2 as ondewo_dot_nlu_dot_aiservices__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in ondewo/nlu/aiservices_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AiServicesStub(object):
    """The Central class defining the ondewo ai services
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExtractEntities = channel.unary_unary(
                '/ondewo.nlu.AiServices/ExtractEntities',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesResponse.FromString,
                _registered_method=True)
        self.GenerateUserSays = channel.unary_unary(
                '/ondewo.nlu.AiServices/GenerateUserSays',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateUserSaysRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateUserSaysResponse.FromString,
                _registered_method=True)
        self.GenerateResponses = channel.unary_unary(
                '/ondewo.nlu.AiServices/GenerateResponses',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateResponsesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateResponsesResponse.FromString,
                _registered_method=True)
        self.GetAlternativeSentences = channel.unary_unary(
                '/ondewo.nlu.AiServices/GetAlternativeSentences',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeSentencesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeSentencesResponse.FromString,
                _registered_method=True)
        self.GetAlternativeTrainingPhrases = channel.unary_unary(
                '/ondewo.nlu.AiServices/GetAlternativeTrainingPhrases',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeTrainingPhrasesRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeTrainingPhrasesResponse.FromString,
                _registered_method=True)
        self.GetSynonyms = channel.unary_unary(
                '/ondewo.nlu.AiServices/GetSynonyms',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GetSynonymsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GetSynonymsResponse.FromString,
                _registered_method=True)
        self.ClassifyIntents = channel.unary_unary(
                '/ondewo.nlu.AiServices/ClassifyIntents',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ClassifyIntentsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ClassifyIntentsResponse.FromString,
                _registered_method=True)
        self.ExtractEntitiesFuzzy = channel.unary_unary(
                '/ondewo.nlu.AiServices/ExtractEntitiesFuzzy',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesFuzzyRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesResponse.FromString,
                _registered_method=True)
        self.LlmGenerate = channel.unary_unary(
                '/ondewo.nlu.AiServices/LlmGenerate',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateResponse.FromString,
                _registered_method=True)
        self.StreamingLlmGenerate = channel.unary_stream(
                '/ondewo.nlu.AiServices/StreamingLlmGenerate',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.StreamingLlmGenerateResponse.FromString,
                _registered_method=True)
        self.ListLlmModels = channel.unary_unary(
                '/ondewo.nlu.AiServices/ListLlmModels',
                request_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ListLlmModelsRequest.SerializeToString,
                response_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ListLlmModelsResponse.FromString,
                _registered_method=True)


class AiServicesServicer(object):
    """The Central class defining the ondewo ai services
    """

    def ExtractEntities(self, request, context):
        """Processes a natural language query and returns detected entities
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateUserSays(self, request, context):
        """Generates a list of training phrases
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateResponses(self, request, context):
        """Generate responses from all intents using synonyms
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlternativeSentences(self, request, context):
        """Generates alternative phrase based on original phrase
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlternativeTrainingPhrases(self, request, context):
        """Generates alternative training phrase based on original training phrase
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSynonyms(self, request, context):
        """Generates synonyms for a certain word
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClassifyIntents(self, request, context):
        """Preprocess text and detects intents in a sentence
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtractEntitiesFuzzy(self, request, context):
        """Processes a natural language query and returns detected entities
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LlmGenerate(self, request, context):
        """Generates a single response from a Large Language Model (LLM).
        This RPC method allows a client to make a request to the LLM and receive
        a single complete response based on the input parameters provided.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamingLlmGenerate(self, request, context):
        """Generates a response from the LLM in a streaming format.
        This RPC allows continuous streaming of responses from the model,
        which is useful for real-time applications or large outputs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLlmModels(self, request, context):
        """Lists available Large Language Models (LLMs) for a specified CCAI service.
        This RPC method allows clients to retrieve metadata about all LLM models associated
        with a particular service within a project, including model names, descriptions, and providers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AiServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExtractEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractEntities,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesResponse.SerializeToString,
            ),
            'GenerateUserSays': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateUserSays,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateUserSaysRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateUserSaysResponse.SerializeToString,
            ),
            'GenerateResponses': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateResponses,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateResponsesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GenerateResponsesResponse.SerializeToString,
            ),
            'GetAlternativeSentences': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlternativeSentences,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeSentencesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeSentencesResponse.SerializeToString,
            ),
            'GetAlternativeTrainingPhrases': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlternativeTrainingPhrases,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeTrainingPhrasesRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeTrainingPhrasesResponse.SerializeToString,
            ),
            'GetSynonyms': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSynonyms,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.GetSynonymsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.GetSynonymsResponse.SerializeToString,
            ),
            'ClassifyIntents': grpc.unary_unary_rpc_method_handler(
                    servicer.ClassifyIntents,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ClassifyIntentsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ClassifyIntentsResponse.SerializeToString,
            ),
            'ExtractEntitiesFuzzy': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractEntitiesFuzzy,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesFuzzyRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesResponse.SerializeToString,
            ),
            'LlmGenerate': grpc.unary_unary_rpc_method_handler(
                    servicer.LlmGenerate,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateResponse.SerializeToString,
            ),
            'StreamingLlmGenerate': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamingLlmGenerate,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.StreamingLlmGenerateResponse.SerializeToString,
            ),
            'ListLlmModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLlmModels,
                    request_deserializer=ondewo_dot_nlu_dot_aiservices__pb2.ListLlmModelsRequest.FromString,
                    response_serializer=ondewo_dot_nlu_dot_aiservices__pb2.ListLlmModelsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ondewo.nlu.AiServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ondewo.nlu.AiServices', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AiServices(object):
    """The Central class defining the ondewo ai services
    """

    @staticmethod
    def ExtractEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/ExtractEntities',
            ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateUserSays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/GenerateUserSays',
            ondewo_dot_nlu_dot_aiservices__pb2.GenerateUserSaysRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.GenerateUserSaysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateResponses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/GenerateResponses',
            ondewo_dot_nlu_dot_aiservices__pb2.GenerateResponsesRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.GenerateResponsesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAlternativeSentences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/GetAlternativeSentences',
            ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeSentencesRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeSentencesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAlternativeTrainingPhrases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/GetAlternativeTrainingPhrases',
            ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeTrainingPhrasesRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.GetAlternativeTrainingPhrasesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSynonyms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/GetSynonyms',
            ondewo_dot_nlu_dot_aiservices__pb2.GetSynonymsRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.GetSynonymsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClassifyIntents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/ClassifyIntents',
            ondewo_dot_nlu_dot_aiservices__pb2.ClassifyIntentsRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.ClassifyIntentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExtractEntitiesFuzzy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/ExtractEntitiesFuzzy',
            ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesFuzzyRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.ExtractEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LlmGenerate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/LlmGenerate',
            ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamingLlmGenerate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ondewo.nlu.AiServices/StreamingLlmGenerate',
            ondewo_dot_nlu_dot_aiservices__pb2.LlmGenerateRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.StreamingLlmGenerateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListLlmModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ondewo.nlu.AiServices/ListLlmModels',
            ondewo_dot_nlu_dot_aiservices__pb2.ListLlmModelsRequest.SerializeToString,
            ondewo_dot_nlu_dot_aiservices__pb2.ListLlmModelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
