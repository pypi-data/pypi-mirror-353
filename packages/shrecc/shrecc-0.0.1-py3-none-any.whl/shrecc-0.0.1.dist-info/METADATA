Metadata-Version: 2.4
Name: shrecc
Version: 0.0.1
Summary: SHRECC: Smooth Hourly Resolution Electricity Consumption Calculation
Author-email: Sabina Bednářová <sabina.bednarova@list.lu>
Maintainer-email: Sabina Bednářová <sabina.bednarova@list.lu>
Project-URL: source, https://git.list.lu/sabina.bednarova/SHRECC
Project-URL: homepage, https://git.list.lu/sabina.bednarova/SHRECC
Project-URL: tracker, https://git.list.lu/sabina.bednarova/SHRECC/issues
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bw2data
Requires-Dist: pandas>=2
Requires-Dist: numpy<2,>=1.24
Requires-Dist: requests>=2.32
Requires-Dist: fs
Requires-Dist: scipy>=1.14
Requires-Dist: appdirs
Provides-Extra: testing
Requires-Dist: shrecc; extra == "testing"
Requires-Dist: pytest; extra == "testing"
Requires-Dist: pytest-cov; extra == "testing"
Requires-Dist: python-coveralls; extra == "testing"
Provides-Extra: dev
Requires-Dist: build; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pylint; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-randomly; extra == "dev"
Requires-Dist: setuptools; extra == "dev"
Dynamic: license-file

# SHRECC: Simple Hourly Resolution Electricity Consumption Calculation

## Description

SHRECC package is a python package directly compatible with Brightway2 or Brightway2.5 to create time-aware electricity databases. For any given year and countries (check availability on https://api.energy-charts.info/), download and prepare data for low-voltage electricity consumption.

## Features

- **High-resolution electricity mixes** – Generates electricity life cycle inventories (LCIs) with **hourly** resolution, enhancing accuracy for life cycle assessment (LCA).
- **Brightway2/2.5 compatibility** – Seamlessly integrates with Brightway, allowing direct use in existing LCA models.
- **Dynamic temporal representation** – Users can select electricity mixes by **hour, month, or season**, addressing fluctuations in renewable energy generation and consumption.
- **Automated data retrieval** – Pulls electricity production, trade, and consumption data from the **Energy Charts API**, ensuring up-to-date datasets.
- **Ecoinvent matching** – Aligns with **ecoinvent classifications**, converting from ENTSO-E datasets.
- **User-controlled updates** – Enables **one-time or recurring** updates, allowing continuous tracking of electricity mix evolution over time.
- **Optimized impact assessments** – Helps reduce uncertainty and improve **decision-making for electricity-intensive technologies** by considering real-time electricity mix variations.

## Installation

### Clone the repository

For the code: git clone [https://git.list.lu/shrecc_project/shrecc](https://git.list.lu/shrecc_project/shrecc)
For the data: [https://git.list.lu/shrecc_project/shrecc_data](https://git.list.lu/shrecc_project/shrecc_data)

### Install dependencies

#### Using pip

If you are using a standard Python environment, install dependencies with:
` pip install -r requirements.txt`

#### Using Conda environment

If you prefer to use Conda, create an environment from the provided environment.yml file:
`conda env create -f environment.yml`
Then activate the environment: `conda activate shrecc`
Alternatively, if the environment already exists and you want to update it: `conda env update --file environment.yml --prune`

#### Using Conda environment (avoid Anaconda)

If you prefer to use Conda and meanwhile avoid using Anaconda, create an environment from the provided environment_clean.yml file:
`conda env create -f environment_clean.yml`

Or, if you have Mamba installed (a faster Conda alternative):

`mamba env create -f environment_clean.yml`
Then activate the environment: `conda activate shrecc_clean`
Alternatively, if the environment already exists and you want to update it: `conda env update --file environment_clean.yml --prune`

Or, with Mamba:

`mamba env update -n shrecc_clean -f environment.yml  `

## Usage

You can find usage examples in the Jupyter notebook: [notebooks/example.ipynb](notebooks/example.ipynb).

## License

Copyright © 2024 Luxembourg Institute of Science and Technology
Licensed under the MIT License.

## Authors

* Sabina Bednářová (<sabina.bednarova@list.lu>)
* Thomas Gibon (<thomas.gibon@list.lu>)
