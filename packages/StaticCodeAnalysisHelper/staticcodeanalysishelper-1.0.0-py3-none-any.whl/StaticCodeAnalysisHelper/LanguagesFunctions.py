import os,sys

# To continue developing the application StaticCodeAnalysisHelper/LanguagesFunctions.py you can add new functions to the file according to the following syntaxes.

# {"function": "function()","description": "description"}
# {"function": "function[]","description": "description"}
# {"function": "function","description": "description"}

def PythonProgramming():

    return [
        
    {"function": "pickle.load()","description": "The data serialization process is being performed.there may be a risk of remote code execution."},
    {"function": "save()","description": "The data is being saved to a database or a saving operation is being performed"},
    {"function": "threading.Thread()","description": "Thread function has been detected. May be race condition."},
    {"function": "os.system()","description": "The terminal command execution function has been detected."},
    {"function": "request.form.get()","description": "Data processing is performing with the GET method."},
    {"function": "send_from_directory()","description": "File sending operations are being performed."},
    {"function": "subprocess.run()","description": "The command execution function has been detected."},
    {"function": "render_template()","description": "Inputs are being Processed in the Template."},
    {"function": "response.set_cookie()","description": "Cookie operations are being performed."},
    {"function": "request.query_params.get()","description": "Retrieving Data with GET Method."},
    {"function": "get_query_argument()","description": "Data is received with the GET Method."},
    {"function": "yaml.load()","description": "Data Loading. Insecure data may be uploaded."},
    {"function": "template()","description": "Redirection to a template is being performed."},
    {"function": "eval()","description": "The command execution function has been detected."},
    {"function": "send_file()","description": "File sending operations are being performed."},
    {"function": "response.write()","description": "Data is received with the GET Method."},
    {"function": "HttpResponse()","description": "Entries are being returned as content."},    
    {"function": "session.execute()","description": "SQL Operations are being performed."},
    {"function": "request.params.get()","description": "Retrieving Data with GET Method."},
    {"function": "get_argument()","description": "Data is received with the GET Method."},
    {"function": "render()","description": "Inputs are being Processed in the Template."},
    {"function": "request.forms.get()","description": "Retrieving Data with GET Method."},
    {"function": "request.query.get()","description": "Retrieving Data with GET Method."},
    {"function": "request.POST.get()","description": "Retrieving Data with POST Method."},
    {"function": "session.commit()","description": "SQL Operations are being performed."},
    {"function": "session.delete()","description": "SQL Operations are being performed."},
    {"function": "request.args.get()","description": "Retrieving Data with GET Method."},
    {"function": "request.FILES.get()","description": "Uploading a File to the System."},
    {"function": "session.query()","description": "SQL Operations are being performed."},
    {"function": "set_cookie()","description": "Cookie operations are being performed."},
    {"function": "request.GET.get()","description": "Retrieving Data with GET Method."},
    {"function": "RedirectResponse()","description": "Redirecting to a page."},
    {"function": "request.json()","description": "JSON Datas are proccesing."},
    {"function": "make_response()","description": "Data is being processed."},
    {"function": "objects.raw()","description": "SQL Query is running."},
    {"function": "redirect()","description": "Redirecting to a page."}
    
    ]

def JavaProgramming():

    return [
    
    {"function": "SecurityUtils.getSubject()","description": "Events related to the user account have been detected. If used incorrectly, a vulnerability may occur."},
    {"function": "UI.getCurrent().getPage().executeJs()","description": "Dynamic JavaScript executed with user input can lead to XSS or any other situation."},
    {"function": "SecurityContextHolder.getContext().getAuthentication()","description": "Incorrect verification or authorization control."},
    {"function": "csrf().disable()","description": "Turning off CSRF (Cross-Site Request Forgery) protection, risk of attack."},
    {"function": "@RequestMapping()","description": "URL and HTTP operations belonging to methods or classes are performed."},
    {"function": "hasRole()","description": "Incorrectly configured role controls may cause unauthorized operations."},
    {"function": "DriverManager.getConnection()","description": "Database connection operations are being performed."},
    {"function": "ProcessBuilder()","description": "A function has been detected that may be able to run the code."},
    {"function": "exec()","description": "A function has been detected that may be able to run the code."},
    {"function": "setRequestProperty()","description": "The header insertion process has been detected."},
    {"function": "Thread()","description": "Thread function has been detected. May be race condition."},
    {"function": "execute()","description": "Verification or execution can be performed for anything."},
    {"function": "ObjectOutputStream()","description": "Serializations procedures may be performed."},
    {"function": "ObjectInputStream()","description": "Serializations procedures may be performed."},
    {"function": "Class.forName()","description": "Loading dynamic class. May need to be checked."},
    {"function": "HttpRequest.getUri()","description": "The URL rotation process is performing."},
    {"function": "HttpRequest.getParameters()","description": "Retrieving Data with GET Method."},
    {"function": "MessageDigest.getInstance()","description": "Hash operations are performing."},
    {"function": "ModelAndView()","description": "Data and front-end operations are performed."},
    {"function": "@PreAuthorize()","description": "A role is provided for the user's access."},
    {"function": "session.createQuery()","description": "HQL Operations are being performed."},
    {"function": "printStackTrace()","description": "Stacktrace process is being performed. "},
    {"function": "newDocumentBuilder()","description": "XML Operations are being performed."},
    {"function": "prepareStatement()","description": "SQL Operations are being performed."},
    {"function": "request.getParameter()","description": "Retrieving Data with GET Method."},
    {"function": "hasAnyRole()","description": "The user needs to have a role for access."},
    {"function": "HttpResponse.ok()","description": "An HTTP response is being returned."},
    {"function": "addObject()","description": "Additional data is being added to a model."},
    {"function": "FileOutputStream()","description": "File operations may be performed."},
    {"function": "@Secured()","description": "A role is provided for the user's access."},
    {"function": "equals()","description": "Authorization procedures may be performed."},
    {"function": "executeQuery()","description": "SQL Operations are being performed."},
    {"function": "session.update()","description": "Database operations are performed."},
    {"function": "session.delete()","description": "Database operations are performed."},
    {"function": "FileInputStream()","description": "File operations may be performed."},
    {"function": "anonymous()","description": "Allows anonymous access to an endpoint."},
    {"function": "session.save()","description": "Database operations are performed."},
    {"function": "NamedQuery()","description": "HQL Operations are being performed."},
    {"function": "addBatch()","description": "SQL Operations are being performed."},
    {"function": "FileReader()","description": "File operations may be performed."},
    {"function": "FileWriter()","description": "File operations may be performed."},
    {"function": "System.out.println()","description": "A data is being printed."},
    {"function": "readUTF()","description": "File operations may be performed."},
    {"function": "Response.ok()","description": "A response is being returned."},
    {"function": "permitAll()","description": "It can create public endpoints."},
    {"function": "response.getWriter()","description": "A data is being sent."},
    {"function": "File()","description": "File operations may be performed."},
    {"function": "openStream()","description": "A link URL is being opened."},
    {"function": "getWriter()","description": "A data is being sent."},
    {"function": "getParameter()","description": "Retrieving Data"},
    {"function": "logger.debug()","description": "Log4j event."},
    {"function": "logger.error()","description": "Log4j event."},
    {"function": "logger.info()","description": "Log4j event."}

    ]


def GoProgramming():
    
    return [

    {"function": "c.SetCookie()","description": "It has been determined that the cookie process has been performed."},
    {"function": "template.Execute()","description": "User input operations have been detected in the Template."},
    {"function": "c.File()","description": "File operations are being performed. It may be being sent."},
    {"function": "this.Ctx.Input.Query()","description": "Parameter operations are being performed."},
    {"function": "this.Ctx.Input.Param()","description": "Parameter operations are being performed."},
    {"function": "c.Attachment()","description": "The process of adding a file is being performed."},
    {"function": "URL.Query().Get()","description": "Parameter values are taken from the URL."},
    {"function": "c.Params.Query.Get()","description": "The data is taken with the parameter."},
    {"function": "Header.Set()","description": "HTTP Header operations are being performed."},
    {"function": "Header.Get()","description": "HTTP Header operations are being performed."},
    {"function": "this.Redirect()","description": "Redirect operations are being performed."},
    {"function": "http.SetCookie()","description": "Cookie operations are being performed."},
    {"function": "c.QueryParam()","description": "Parameter values are taken from the URL."},
    {"function": "http.ListenAndServe()","description": "Server startup process detected."},
    {"function": "http.Redirect()","description": "Redirect operation is being performed."},
    {"function": "Ctx.SetCookie()","description": "Cookie operations are being performed."},
    {"function": "r.Header.Get()","description": "Header operations are being performed."},
    {"function": "http.ServeFile()","description": "File operations are being performed."},
    {"function": "fmt.Sprintf()","description": "Typing operations are being performed."},
    {"function": "exec.Command()","description": "Command execution function detected."},
    {"function": "ioutil.ReadFile()","description": "File affairs has been on process."},
    {"function": "c.Redirect()","description": "Redirect operation has been detected."},
    {"function": "c.Cookie()","description": "Cookie operations are being performed."},
    {"function": "r.FormValue()","description": "Form operation are being performed."},
    {"function": "c.SendFile()","description": "File operations have been detected."},
    {"function": "c.FormFile()","description": "File operations have been detected."},
    {"function": "os.Create()","description": "File operations are being performed."},
    {"function": "os.Remove()","description": "File operations are being performed."},
    {"function": "c.Query()","description": "The parameters are taken from the url."},
    {"function": "http.Redirect()","description": "The redirect has been detected."},
    {"function": "db.Create()","description": "Database operations are performed."},
    {"function": "db.Update()","description": "Database operations are performed."},
    {"function": "db.Delete()","description": "Database operations are performed."},
    {"function": "c.Inline()","description": "File operations have been detected."},
    {"function": "os.Open()","description": "File operations are being performed."},
    {"function": "c.RenderFile()","description": "File operations are performed."},
    {"function": "db.Where()","description": "Database operations are performed."},
    {"function": "db.Raw()","description": "Database operations are performed."},
    {"function": "db.Exec()","description": "Database operations are performed."},
    {"function": "c.PostForm()","description": "Form data is being retrieved."},
    {"function": "c.FormValue()","description": "Form data is being received."},
    {"function": "c.Redirect()","description": "Redirect has been determined."},
    {"function": "make_response()","description": "Data is being processed."},
    {"function": "c.Param()","description": "Getting parameters from a URL."},
    {"function": "c.Params()","description": "Dynamic parameters are taken."},
    {"function": "Ctx.Output.Body()","description": "Raw data is printing."},
    {"function": "c.Params.Form.Get()","description": "Saving form data"},
    {"function": "FormValue()","description": "Retrieving form data."}

    ]

def RubyProgramming():

    return [

    {"function": "YAML.load()","description": "Deserialization of insecure YAML data, risk of remote code execution."},
    {"function": "Kernel.load()","description": "Dynamically uploading files can lead to security vulnerabilities."}, 
    {"function": "ActiveStorage::Blob.create_and_upload!","description": "File operations are being performed."}, 
    {"function": "ActiveRecord::Base.connection.execute()","description": "SQL operations have been detected."}, 
    {"function": "Marshal.load()","description": "The risk of remote code execution during deserialization."},
    {"function": "ActiveRecord::Base.sanitize_sql()","description": "SQL operations have been detected."},
    {"function": "User.find_by_sql()","description": "The SQL query execution status has been detected."}, 
    {"function": "IO.popen()","description": "There is a risk of the command being executed."},
    {"function": "request.raw_post","description": "POST Data operation has been detected."},
    {"function": "redirect_to()","description": "Redirect operations have been detected."},
    {"function": "File.open()","description": "File operations are being performed."}, 
    {"function": "send_data()","description": "File operations are being performed."}, 
    {"function": "send_file()","description": "File operations are being performed."}, 
    {"function": "send_file()","description": "File operations are being performed."}, 
    {"function": "User.where()","description": "SQL operations have been detected."}, 
    {"function": "mail()","description": "An email process has been detected."}, 
    {"function": "eval()","description": "Used to execute dangerous code."}, 
    {"function": "exec()","description": "Used to execute dangerous code."}

    ]
    

def PhpPrograming():

    return [

    {"function": "Yii::$app->mailer->compose()","description": "The risk of Header Injection if email headers are not trusted"}, 
    {"function": "highlight_file()","description": "The contents of a file are being opened. Information disclosure risk."}, 
    {"function": "show_source()","description": "The contents of a file are being opened. Information disclosure risk."}, 
    {"function": "curl_setopt()","description": "File downloading, extraction, sending operations have been detected."}, 
    {"function": "Process::fromShellCommandline()","description": "The command execution process has been detected."},
    {"function": "chmod()","description": "File permissions operation has been detected. Unauthorized access risk."}, 
    {"function": "$this->getRequest()->getCookie('foo')","description": "Cookie processing is being performed."}, 
    {"function": "call_user_func_array()","description": "The command execution function has been detected."}, 
    {"function": "$this->getRequest()->getPost()","description": "POST method operation has been detected."}, 
    {"function": "Yii::$app->view->renderFile()","description": "A page render process has been detected."}, 
    {"function": "Yii::$app->response->headers->set()","description": "Header operation has been deted."}, 
    {"function": "$this->_redirect()","description": "Redirect to a page processing is being performed."}, 
    {"function": "mysqli_real_escape_string()","description": "SQL query operations are being performed."}, 
    {"function": "$this->request->getData()","description": "POST method operation has been detected."}, 
    {"function": "create_function()","description": "The command execution function has been detected."}, 
    {"function": "readlink()","description": "This function may cause path traversal vulnerabilities."}, 
    {"function": "call_user_func()","description": "The command execution function has been detected."}, 
    {"function": "unserialize()","description": "The data unserialization process has been determined."}, 
    {"function": "$this->request->getQuery()","description": "Parameter operation has been detected."}, 
    {"function": "$this->response->withHeader()","description": "Header operation has been detected."}, 
    {"function": "$request->query->get()","description": "Data is retrieved with the GET parameter."}, 
    {"function": "Yii::$app->request->post()","description": "POST data operation has been detected"}, 
    {"function": "$this->request->getQuery()","description": "A parameter value is being retrieved."}, 
    {"function": "Artisan::call()","description": "The command execution process has been detected."},
    {"function": "$this->Auth->redirectUrl()","description": "Redirect to a page has been detected."}, 
    {"function": "json_decode()","description": "Json operation related to data has been detected."},
    {"function": "serialize()","description": "The data serialization process has been determined."}, 
    {"function": "json_encode()","description": "Json operation related to data has been detected."}, 
    {"function": "$this->input->post()","description": "Data is retrieved with the POST parameter."}, 
    {"function": "shell_exec()","description": "The command execution function has been detected."}, 
    {"function": "http_response_code()","description": "A response status code has been detected."}, 
    {"function": "Yii::app->db->createCommand()","description": "SQL operation has been detected."}, 
    {"function": "$this->response->setHeader()","description": "Header operations are performing."},
    {"function": "$this->Flash->set()","description": "A data printing process has been detected."},
    {"function": "unserialize()","description": "Data deserialization process has been detected."}, 
    {"function": "move_uploaded_file()","description": "File upload operation has been detected."},
    {"function": "proc_open()","description": "The command execution function has been detected."},
    {"function": "$this->input->get()","description": "Data is retrieved with the GET parameter."}, 
    {"function": "$this->redirect()","description": "A page redirect process has been detected."}, 
    {"function": "$this->redirect()","description": "A page redirect process has been detected."}, 
    {"function": "$this->load->view()","description": "A view file is uploading within project."}, 
    {"function": "passthru()","description": "The command execution function has been detected."},
    {"function": "session_regenerate_id()","description": "Session operation has been detected."}, 
    {"function": "$this->view->render()","description": "Data render operation are performing."},
    {"function": "is_uploaded_file()","description": "File upload operation has been detected."}, 
    {"function": "$response->headers->set()","description": "HTTP Header processing detected."}, 
    {"function": "popen()","description": "The command execution function has been detected."},
    {"function": "$this->db->insert()","description": "The SQL operation is being performed."}, 
    {"function": "$this->db->update()","description": "The SQL operation is being performed."}, 
    {"function": "sha1()","description": "SHA1 hashing operation detected. Hash may be weak."}, 
    {"function": "$this->db->delete()","description": "The SQL operation is being performed."}, 
    {"function": "$form->handleRequest()","description": "Form operation has been detected."}, 
    {"function": "mysqli_query()","description": "SQL query operations are being performed."}, 
    {"function": "file_get_contents()","description": "File operations are being performed."}, 
    {"function": "file_put_contents()","description": "File operations are being performed."}, 
    {"function": "parse_url()","description": "An external URL operation has been detected."}, 
    {"function": "$this->db->query()","description": "The SQL operation is being performed."}, 
    {"function": "PDO::prepare()","description": "SQL query operations are being performed."},
    {"function": "eval()","description": "The command execution function has been detected."}, 
    {"function": "$this->session->get()","description": "Session process has been detected."},
    {"function": "exec()","description": "The command execution function has been detected."}, 
    {"function": "$request->post()","description": "POST data operation has been detected."}, 
    {"function": "mysql_query()","description": "SQL query operations are being performed."},
    {"function": "var_export()","description": "Data printing operation has been detected."}, 
    {"function": "md5()","description": "MD5 hashing operation detected. Hash may be weak."}, 
    {"function": "realpath()","description": "File path read operation has been detected."}, 
    {"function": "PDO::query()","description": "SQL query operations are being performed."},
    {"function": "session_destroy()","description": "Session operation has been detected."}, 
    {"function": "pg_execute()","description": "SQL query operations are being performed."}, 
    {"function": "finfo_file()","description": "File upload operation has been detected."}, 
    {"function": "finfo_open()","description": "File upload operation has been detected."}, 
    {"function": "$this->db->execute()","description": "SQL operation has been detected."},
    {"function": "PDO::exec()","description": "SQL query operations are being performed."}, 
    {"function": "DB::statement()","description": "The SQL operation is being performed."},
    {"function": "pg_query()","description": "SQL query operations are being performed."}, 
    {"function": "chown()","description": "File ownership operation has been detected. "},
    {"function": "session_start()","description": "Session operation has been detected."}, 
    {"function": "curl_exec()","description": "Risky function detected for SSRF and LFI"},
    {"function": "print_r()","description": "Data printing operation has been detected."}, 
    {"function": "socket_connect()","description": "Socket operation has been detected."},
    {"function": "$this->cookies->get()","description": "Cookie process is performing."}, 
    {"function": "socket_create()","description": "Socket operation has been detected."}, 
    {"function": "setrawcookie()","description": "Cookie operation has been detected."}, 
    {"function": "get_headers()","description": "Header processing has been detected."},
    {"function": "DB::update()","description": "The SQL operation is being performed."},
    {"function": "DB::delete()","description": "The SQL operation is being performed."},
    {"function": "redirect()","description": "Redirect operation has been detected."}, 
    {"function": "setcookie()","description": "Cookie operation has been detected."}, 
    {"function": "fsockopen()","description": "Socket operation has been detected."}, 
    {"function": "setcookie()","description": "Cookie operation has been detected."},
    {"function": "readfile()","description": "File operations are being performed."}, 
    {"function": "opendir()","description": "File operations are being performed."},
    {"function": "scandir()","description": "File operations are being performed."}, 
    {"function": "header()","description": "Header processing has been detected."},
    {"function": "DB::select()","description": "SQL operation has been detected."},
    {"function": "DB::insert()","description": "SQL operation has been detected."}, 
    {"function": "unlink()","description": "File operations are being performed."}, 
    {"function": "fread()","description": "File operations are being performed."}, 
    {"function": "fopen()","description": "File operations are being performed."}, 
    {"function": "rmdir()","description": "File operations are being performed."}, 
    {"function": "glob()","description": "File operations are being performed."}, 
    {"function": "Storage::put()","description": "File operation has detected."},
    {"function": "include()","description": "The file is included in the code."}, 
    {"function": "require()","description": "The file is included in the code."},
    {"function": "copy()","description": "File operations are being performed."}, 
    {"function": "require()","description": "Risky function for Path Traversal"}, 
    {"function": "symlink()","description": "Link binding function detected."}, 
    {"function": "Response::json()","description": "Data is being returned."},
    {"function": "error_log()","description": "Errors are being recorded."},  
    {"function": "include_once()","description": "Risky function for RFI."}, 
    {"function": "require_once()","description": "Risky function for RFI."}, 
    {"function": "File::put()","description": "File operation is doing."},
    {"function": "system()","description": "A controllable function."}, 
    {"function": "include()","description": "Risky function for RFI."}, 
    {"function": "$form->submit()","description": "Data is sending."}

    ]

def JavaScriptProgramming():

    return [

    {"function": "ServiceWorker.register()","description": "a ServiceWorker is running. Possibly malicious code. It's may use wrong."},
    {"function": "addEventListener()","description": "Clicking and keyboard operations are being performed with a function."}, 
    {"function": "navigator.geolocation.getCurrentPosition()","description": "Geolocation operation is being performed."},
    {"function": "executeQuery()","description": "SQL query execute has been detected but its may not server side."}, 
    {"function": "Function()","description": "Dynamic function create has been detected. - May be False-Positive"}, 
    {"function": "crypto.subtle.digest()","description": "Cryptographic hash processing has been detected."},
    {"function": "executeBatch()","description": "Multiple SQL query execute function has been detected."}, 
    {"function": "JSON.stringify()","description": "There may be a risk of Sensitive Data Leakage."},
    {"function": "XMLHttpRequest()","description": "Browser based HTTP Request has been detected."}, 
    {"function": "Buffer.from()","description": "There may be a risk of DoS - High Data may send."},
    {"function": "child_process.exec()","description": "Command Injection risk has been detected."},
    {"function": "setRequestHeader()","description": "Header add processing has been detected."},
    {"function": "fs.createWriteStream()","description": "File operations are being performed."}, 
    {"function": "setRequestHeader()","description": "Header add processing has been detected."}, 
    {"function": "crypto.subtle.digest()","description": "Hash operations are being performed."},
    {"function": "fs.createReadStream()","description": "File operations are being performed."}, 
    {"function": "DOMParser()","description": "HTML structures are converting into an object."},
    {"function": "crypto.randomBytes()","description": "Hash operations are being performed."},
    {"function": "mysql.createConnection()","description": "SQL operation has been detected."}, 
    {"function": "JSON.parse()","description": "There may be a risk of Prototype pollution."},
    {"function": "crypto.createHash()","description": "Hash operations are being performed."},
    {"function": "DOMParser()","description": "XXE and XSS malicious codes can be injected."},
    {"function": "console.error()","description": "Stacktrace operation has been detected."},
    {"function": "URLSearchParams.get()","description": "Taking a parameter from the URL."},
    {"function": "document.createElement()","description": "New DOM element is creating."}, 
    {"function": "prepareStatement()","description": "Preparing to execute a SQL query."},
    {"function": "connection.query()","description": "SQL operation has been detected."},
    {"function": "fs.writeFile()","description": "File operations are being performed."}, 
    {"function": "spawn()","description": "a System command is running on application"}, 
    {"function": "exec()","description": "a System command is running on application."}, 
    {"function": "bcrypt.hash()","description": "Hash operations are being performed."},
    {"function": "fs.readFile()","description": "File operations are being performed."}, 
    {"function": "fs.readdir()","description": "File operations are being performed."}, 
    {"function": "WebSocket()","description": "Connecting a network with WebSocket."}, 
    {"function": "eval()","description": "Command Injection risk has been detected."},
    {"function": "removeEventListener()","description": "Malicious code may be run."}, 
    {"function": "fs.unlink()","description": "File operations are being performed."}, 
    {"function": "element.appendChild()","description": "Adding a element on DOM"}, 
    {"function": "pg.Client()","description": "SQL operation has been detected."}, 
    {"function": "XMLHttpRequest()","description": "a Request is being created."}, 
    {"function": "FileReader()","description": "File operations are performing."},
    {"function": "FileWriter()","description": "File operations are performing."},
    {"function": "readAsText()","description": "File operations are performing."},
    {"function": "knex.raw()","description": "SQL operation has been detected."}, 
    {"function": "axios.post()","description": "A POST request is being made."},
    {"function": "EventSource()","description": "a Connect has been detected."}, 
    {"function": "axios.get()","description": "A GET request is being made."},
    {"function": "URL()","description": "URL operation is being performed."}, 
    {"function": "fetch()","description": "HTTP Request has been detected."},
    {"function": "console.log()","description": "Somethings are printing."}, 
    {"function": "File()","description": "File operations are performing."}, 
    {"function": "document.write()","description": "Data is printing."}, 
    {"function": "document.write()","description": "Printing output "}

    ]

def ASPDotNetCoreProgrammingLanguage():

    return [
    
    {"function": "Configuration.GetSection()","description": "Function is reading on part of configuration file. Information disclosure risk."}, 
    {"function": "Environment.GetEnvironmentVariable()","description": "Information disclosure risk. Reading a environment value."},
    {"function": "BinaryFormatter.Deserialize()","description": "Serialization and Deserialization operations have been detected."}, 
    {"function": "IFormFile.OpenReadStream()","description": "The operation of reading the contents of a file is performed."},
    {"function": "RNGCryptoServiceProvider.GetBytes()","description": "A predictable random number may be generated."}, 
    {"function": "DataContractSerializer.ReadObject()","description": "Desarialization operation has been detected."}, 
    {"function": "System.Diagnostics.Process.Start()","description": "An application or URL might be executing."}, 
    {"function": "Type.GetType()","description": "Dynamically loading the class name is a vulnerability risk."}, 
    {"function": "JsonResult()","description": "If it contains user input, it may contain vulnerabilities."}, 
    {"function": "System.IO.File.WriteAllText()","description": "File operations are being been performed."}, 
    {"function": "System.IO.File.ReadAllText()","description": "File operations are being been performed."}, 
    {"function": "Thread()","description": "Thread function has been detected. May be race condition."},
    {"function": "System.IO.File.Delete()","description": "File operations are being been performed."}, 
    {"function": "Partial()","description": "Improper use may create a security vulnerability."}, 
    {"function": "HttpClient.SendAsync()","description": "A web application is being accessed."}, 
    {"function": "HttpClient.GetAsync()","description": "This function want to access a URL."},
    {"function": "Session.SetString()","description": "Data is being placed into a session."}, 
    {"function": "HttpContext.Session","description": "Session operation has been detected."},
    {"function": "WebRequest.Create()","description": "This function want to access a URL."},
    {"function": "User.Identity.Name","description": "Identity process has been detected. "},
    {"function": "FileStreamResult()","description": "File operations are being performed."}, 
    {"function": "ProcessStartInfo()","description": "An application could be executing."},
    {"function": "Activator.CreateInstance()","description": "Loading a dynamic library."}, 
    {"function": "ExecuteNonQuery()","description": "SQL operations are being performed."}, 
    {"function": "ClaimsPrincipal","description": "Identity operation has been detected."},
    {"function": "CookieOptions()","description": "Cookie operation has been detected."}, 
    {"function": "PhysicalFile()","description": "File operations are being performed."}, 
    {"function": "ExecuteReader()","description": "SQL operations are being performed."}, 
    {"function": "ExecuteScalar()","description": "SQL operations are being performed."}, 
    {"function": "SqlCommand()","description": "SQL operations are being performed."}, 
    {"function": "FromSqlRaw()","description": "SQL operations are being performed."}, 
    {"function": "Reflection.Assembly.LoadFile()","description": "Uploading a file."}, 
    {"function": "XmlSerializer()","description": "XML data processing is performed."}, 
    {"function": "MD5.Create()","description": "Hash operation has being performed."}, 
    {"function": "SHA1.Create()","description": "Hash operation is being performed."}, 
    {"function": "Request.Query()","description": "A parameter value is retrieved."}, 
    {"function": "Response.Redirect()","description": "Redirecting to a URL."}, 
    {"function": "File()","description": "File operations are being performed."}, 
    {"function": "Html.Partial()","description": "Rendering data in HTML."},
    {"function": "Html.Raw()","description": "HTML code is rendering."},

    ]

def RustProgrammingLanguage():

    return [

    {"function": "actix_files::NamedFile::open()","description": "File operation has been performed."},   
    {"function": "warp::reply::json()","description": "a JSON - Data Operation are being performed."}, 
    {"function": "warp::reply::with_header()","description": "Header add process has been detected."}, 
    {"function": "warp::filters::query::raw()","description": "Raw query parameters are receiving."}, 
    {"function": "Command::new()","description": "There is of Command injection in this function."},
    {"function": "actix_web::HttpResponseBuilder::header()","description": "Header operations."}, 
    {"function": "rocket::Response::set_raw_body()","description": "Response data operations."}, 
    {"function": "actix_web::HttpRequest::headers()","description": "Form data operations."},
    {"function": "rocket::Request::form_value()","description": "Form data operations."},
    {"function": "fs::File::open()","description": "File operation has been detected."},
    {"function": "actix_web::HttpRequest::query()","description": "query operations."}, 
    {"function": "rocket::http::CookieJar::get()","description": "Cookie operations."}, 
    {"function": "actix_web::HttpResponse::body()","description": "Cookie operations."}, 
    {"function": "rocket::Request::query_value()","description": "Query operations."},
    {"function": "rocket::fs::NamedFile::open()","description": "File operations."},
    {"function": "warp::fs::file()","description": "File process has been detected."}, 
    {"function": "actix_web::web::block()","description": "Command operations."}, 
    {"function": "rocket::Request::remote()","description": "IP operations."}

    ]

def PerlProgrammingLanguage():
    
    return [

    {"function": "session->param()","description": "If the session is receiving data from the user, it may create a security vulnerability."}, 
    {"function": "Crypt::Random::makerandom()","description": "Random number generator may be occur vulnerability"},
    {"function": "threads->create()","description": "Thread function has been detected. May be race condition."},
    {"function": "Storable::thaw()","description": "The data deserialization process is being performed."}, 
    {"function": "Storable::freeze()","description": "The data serialization process is being performed"},
    {"function": "request->user()","description": "An authentication vulnerability may occur."},
    {"function": "ua->get()","description": "If create with user input. There is a SSRF risk."},
    {"function": "Digest::SHA1::sha1()","description": "Hash processing are being performed."}, 
    {"function": "Digest::MD5::md5()","description": "Hashing operations has been detected."}, 
    {"function": "session->cookie()","description": "Session operation has been detected."}, 
    {"function": "write_file()","description": "File writing operation has been detected."},
    {"function": "param()","description": "Malicious code can be obtained from the user."}, 
    {"function": "read_file()","description": "File reading operation has been detected."}, 
    {"function": "session->get()","description": "Session operation has been detected."}, 
    {"function": "session->set()","description": "Session operation has been detected."},
    {"function": "header()","description": "HTTP Header operation has been detected."}, 
    {"function": "prepare()","description": "SQL query operations has been detected."},
    {"function": "redirect()","description": "Redirect operation has been detected."}, 
    {"function": "write_file()","description": "File operation are being performed."},   
    {"function": "read_file()","description": "File operation are being performed."}, 
    {"function": "eval()","description": "Dynamic code execution vulnerabilities."}, 
    {"function": "cookie()","description": "Cookie processing is being performed"}, 
    {"function": "render()","description": "It may be rendering a page process."}, 
    {"function": "do()","description": "SQL query operations has been detected."},
    {"function": "template()","description": "Dynamic contents are processing."}, 
    {"function": "retrieve()","description": "Serialization datas are reading."},
    {"function": "upload()","description": "It may be a file upload process."},
    {"function": "require()","description": "A file is being included."}, 
    {"function": "system()","description": "Command injection risk."}, 
    {"function": "exec()","description": "Command injection risk."}, 
    {"function": "qx()","description": "Command injection risk."}, 
    {"function": "open()","description": "Any file is opening."},
    {"function": "get()","description": "It may be a GET request."},
    {"function": "post()","description": "It may be a POST request."}

    ]

def SwiftProgrammingLanguage():

    return [
    
    {"function": "FileManager.default.contentsOfDirectory(atPath:)","description": "Folder listening operation has been detected."}, 
    {"function": "FileManager.default.removeItem()","description": "If the input is taken from the user, there is a risk."}, 
    {"function": "SecRandomCopyBytes()","description": "There may be deficiencies in the random data production."}, 
    {"function": "URLSession.dataTask(with:)","description": "SSRF risk if the URL is created with user input."}, 
    {"function": "FileManager.default.contentsOfDirector()","description": "File operation is being performed."},
    {"function": "FileManager.default.createFile","description": "File create operation has been detected."},
    {"function": "parameters.get()","description": "If the input is taken from the user, there is a risk."}, 
    {"function": "FileHandle()","description": "File read operation has been detected."}, 
    {"function": "JSONDecoder()","description": "JSON deserialization operation has been detected."}, 
    {"function": "req.session.set()","description": "Session data operation has been detected."}, 
    {"function": "req.auth.require()","description": "Authentication operation is performing."},
    {"function": "PropertyListDecoder()","description": "Data converting has been detected."}, 
    {"function": "req.cookies.append()","description": "Cookie operation has been detected."},
    {"function": "response.redirect(to:)","description": "It function redirect to a page."},
    {"function": "req.auth.get()","description": "Authentication operation is performing."}, 
    {"function": "Process.launchedProcess()","description": "A command may be executing."},
    {"function": "stencil.render()","description": "Dynamic content is processing - XSS."}, 
    {"function": "LeafRenderer.render()","description": "Dynamic content is processing."}, 
    {"function": "rawHTML()","description": "Raw HTML content may be being rendered."}, 
    {"function": "query.get()","description": "There may be a risk of XSS vs SQL."}, 
    {"function": "session()","description": "Session operation has been detected."},
    {"function": "runner.run()","description": "A command may be executing."},
    {"function": "query()","description": "SQL operation has been detected."}, 
    {"function": "Process()","description": "A command may be executing."},
    {"function": "URLRequest()","description": "A URL may be opening."}, 
    {"function": "SHA1.hash()","description": "Hash Operation."},
    {"function": "MD5.hash()","description": "Hash Operation."},
    
    ]

def GolangProgrammingLanguage():

    return [

    {"function": "rand.Read()","description": "There is a risk of predictability when a long random number is not generated."},
    {"function": "c.Param()","description": "It is used to read the dynamic parameters (route parameters) in the URL path."},
    {"function": "c.Cookie()","description": "It is used to read cookies from the client or add cookies to the response."},
    {"function": "c.Redirect()","description": "It is used to redirect the client to another URL."}, 
    {"function": "c.HTML()","description": "Template render operation has been detected. - XSS."}, 
    {"function": "c.Query()","description": "It is used to read query parameters in the URL."}, 
    {"function": "tmpl.Execute()","description": "Render operation has been detected. - XSS."}, 
    {"function": "c.SaveUploadedFile()","description": "File operation has been detected."}, 
    {"function": "c.Render()","description": "Render operation has been detected. - XSS."},
    {"function": "c.Header()","description": "It is used to read or set HTTP headers."}, 
    {"function": "session.Get()","description": "Session operation has been detected."}, 
    {"function": "session.Set()","description": "Session operation has been detected."},
    {"function": "exec.CommandContext()","description": "A command may be executing."}, 
    {"function": "ctx.Cookie()","description": "Cookie operation has been detected."}, 
    {"function": "sha1.New()","description": "Hash operation has been detected."},
    {"function": "http.Post()","description": "POST request has been detected."}, 
    {"function": "md5.New()","description": "Hash operation has been detected."}, 
    {"function": "exec.Command()","description": "A command may be executing."},
    {"function": "c.File()","description": "File operation has been detected."}, 
    {"function": "http.Get()","description": "GET request has been detected."}, 
    {"function": "c.PostForm()","description": "POST Data is reading. - XSS "}, 
    {"function": "c.FormFile()","description": "Data is uploading by client."}, 
    {"function": "db.Query()","description": "SQL Queries may be executing."}, 
    {"function": "db.Exec()","description": "SQL Queries may be executing."}, 
    {"function": "db.Raw()","description": "SQL Queries may be executing."}, 
    {"function": "session.Get()","description": "Reading data a session."}, 
    {"function": "session.Set()","description": "Setting data a session."},
    {"function": "c.Request()","description": "A request is processing."}, 
    {"function": "fmt.Println()","description": "A data is being shown."},

    ]

def ScalaProgrammingLanguage():

    return [

    {"function": "Thread()","description": "Thread function has been detected. May be race condition."},
    {"function": "readObject()","description": "Insecure serialization operation may be performed."}, 
    {"function": "Runtime.getRuntime.exec()","description": "There is a risk of command injection."},
    {"function": "config.getString()","description": "Risky function for information disclosure."},
    {"function": "ProcessBuilder.start()","description": "There is a risk of command injection."},
    {"function": "sys.process.Process()","description": "There is a risk of command injection."},
    {"function": "MessageDigest.getInstance()","description": "Hashing operation is detected."},
    {"function": "System.getenv()","description": "Risky function for information disclosure."},
    {"function": "Files.readAllBytes()","description": "File operation has been detected"},
    {"function": "FileIO.fromPath()","description": "File operation has been detected."},
    {"function": "prepareStatement()","description": "SQL operation has been detected."}, 
    {"function": "session.get()","description": "Session operation has been detected."}, 
    {"function": "session.set()","description": "Session operation has been detected."},
    {"function": "db.run(sql)","description": "SQL operation has been detected."},
    {"function": "WSClient.url()","description": "A url is being executed."},
    {"function": "XML.loadString()","description": "XML Data is parsing."},
    {"function": "WS.url()","description": "Dynamic URL is executing."}

    ]

def KotlinProgrammingLanguage():

    return [

    {"function": "ObjectInputStream.readObject()","description": "There is a possibility of unsafe serialization."},
    {"function": "System.getenv()","description": "There may be unauthorized access to sensitive informations."},
    {"function": "Runtime.getRuntime().exec()","description": "There is a risk of command injection."},
    {"function": "MessageDigest.getInstance()","description": "Hash operation has been detected."},
    {"function": "MessageDigest.getInstance()","description": "Hash operation has been detected."},
    {"function": "SecureRandom()","description": "A predictable random number may be generated."},
    {"function": "call.respondRedirect()","description": "Redirect operation has been detected."},
    {"function": "call.receiveMultipart()","description": "File operation has been detected."}, 
    {"function": "JdbcTemplate.query()","description": "SQL Query execute has been detected."}, 
    {"function": "createStatement()","description": "SQL execute situation has been created."}, 
    {"function": "call.respondText()","description": "Sending plain text in this function."}, 
    {"function": "jacksonObjectMapper()","description": "JSON datas are being processed."}, 
    {"function": "HttpClient()","description": "A request may be being sent to a URL."}, 
    {"function": "XMLStreamReader.()","description": "XML data are being separated."},
    {"function": "ProcessBuilder()","description": "A command may be executing."},
    {"function": "URL()","description": "Dynamic URL may be executing."},
    {"function": "readText()","description": "A file is reading."}

    ]

def JuliaProgrammingLanguage():

    return [ 

    {"function": "RandomDevice()","description": "Risk of predictability if secure random number is not generated."},
    {"function": "HTTP.Response()","description": "May be return to response with status code and a data."},
    {"function": "HTTP.write()","description": "May be return to response with status code and a data."},
    {"function": "HTTP.queryparams()","description": "Parameter processing has been detected on URL."},
    {"function": "DBInterface.execute()","description": "SQL query processes have been detected."},
    {"function": "DBInterface.prepare()","description": "SQL query processes have been detected."},
    {"function": "ENV[]","description": "Environmental variables risk of information leakage."},
    {"function": "pipeline()","description": "Terminal command operations may be performing."},
    {"function": "Cookies.getcookies()","description": "Cookie processing has been detected."},
    {"function": "deserialize()","description": "Serialization operation is being performed."},
    {"function": "read()","description": "Terminal command operations may be performing."},
    {"function": "write()","description": "It may be a file-related operation function."},
    {"function": "run()","description": "Terminal command operations may be performing."},
    {"function": "read()","description": "It may be a file-related operation function."}, 
    {"function": "open()","description": "It may be a file-related operation function."},
    {"function": "Sessions.get()","description": "Session operation has been detected."},
    {"function": "Session.set!()","description": "Session operation has been detected."},
    {"function": "URI()","description": "A URL parsing operation may be in progress."},
    {"function": "redirect()","description": "Redirect processing has been detected."},
    {"function": "query()","description": "SQL query processes have been detected."},
    {"function": "HTTP.post()","description": "POST request has been detected."}, 
    {"function": "config[]","description": "Config process has been detected."},
    {"function": "HTTP.get()","description": "GET request has been detected."}, 
    {"function": "render()","description": "The template is being processed."},
    {"function": "hash()","description": "Hash operation has been detected."},
    {"function": "HTTP.listen()","description": "HTTP server is running."},
    {"function": "JSON.parse()","description": "JSON data is parsing."}


    ]

def DartProgrammingLanguage():

    return [

    {"function": "Platform.environment[]","description": "Environmental variables risk of information leakage."},
    {"function": "Random()","description": "Risk of predictability if secure random number is not generated."}, 
    {"function": "writeAsStringSync()","description": "Text is written synchronously to a file."},
    {"function": "env[]","description": "Environmental variables risk of information leakage."},
    {"function": "response.cookies.add()","description": "Cookie operation has been detected."},
    {"function": "Uri.parse()","description": "A URL parsing operation may be in progress."},
    {"function": "XmlDocument.parse()","description": "XML processing has been detected."}, 
    {"function": "HttpRequest.request()","description": "HTTP request has been detected."},
    {"function": "Process.start()","description": "Command operation has been detected."}, 
    {"function": "session[]","description": "Session value operation has been detected."},
    {"function": "session[]","description": "Session value operation has been detected."},
    {"function": "readAsStringSync()","description": "A file is reading synchronously."},
    {"function": "sha1.convert()","description": "Hash operations are being performed."},
    {"function": "prepareStatement()","description": "SQL operation has been detected."},
    {"function": "StringBuffer()","description": "Memory operation has been detected."},
    {"function": "Process.run()","description": "Command operation has been detected."},
    {"function": "md5.convert()","description": "Hash operations are being performed."}, 
    {"function": "Response.ok()","description": "The response is returned with data."}, 
    {"function": "jsonDecode()","description": "JSON operation has been detected."},
    {"function": "jsonEncode()","description": "JSON operation has been detected."}, 
    {"function": "JWT.verify()","description": "JWT operations has been detected."}, 
    {"function": "listSync()","description": "The contents of a file are listed."},
    {"function": "Cookie()","description": "Cookie operation has been detected."}, 
    {"function": "serve()","description": "Server operation has been detected."}, 
    {"function": "execute()","description": "SQL operation has been detected."},
    {"function": "HttpServer.bind()","description": "HTTP Server is binding."},
    {"function": "query()","description": "SQL operation has been detected."}

    ]