[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "MEDS_trajectory_evaluation"
dynamic = ["version"]
authors = [
  { name="Matthew McDermott", email="mattmcdermott8@gmail.com" },
]
description = "A framework for extracting labels from generated trajectories for arbitrary ACES configs."
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
  "meds~=0.4.0",
  "es-aces~=0.7.0",
  "hydra-core",
  "MEDS-transforms~=0.5.0",
  "flexible_schema"
]

[tool.setuptools_scm]

[project.optional-dependencies]
dev = ["pre-commit<4", "ruff"]
tests = ["pytest", "pytest-cov", "pretty-print-directory"]

[project.scripts]
ZSACES_label = "MEDS_trajectory_evaluation.ACES_config_evaluation.__main__:label"

[project.urls]
Homepage = "https://github.com/mmcdermott/MEDS_trajectory_evaluation"
Issues = "https://github.com/mmcdermott/MEDS_trajectory_evaluation/issues"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--doctest-modules",
  "--ignore=docs",
  "--doctest-glob=*.md",
]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS"]

[tool.coverage.report]
exclude_also = ["logger\\.debug", "except ImportError:", "if TYPE_CHECKING:"]

[tool.ruff]
target-version = "py312"
line-length = 110
extend-exclude = ["docs/index.md"]

# Enable linters
[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "N",   # pep8-naming
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports in __init__ files

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["*MEDS*", "*ACES*", "*AUC*", "*F*", "*T*"]
