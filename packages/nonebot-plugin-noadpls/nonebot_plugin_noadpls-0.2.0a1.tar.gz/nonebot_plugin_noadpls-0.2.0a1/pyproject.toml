[tool.poetry]
name = "nonebot-plugin-noadpls"
version = "0.2.0a1"
description = "检测群聊中广告的插件，撤回并禁言，转发管理员"
authors = ["gongfuture <gongfuture@outlook.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "nonebot_plugin_noadpls"}]
homepage = "https://github.com/LuoChu-NB2Dev/nonebot-plugin-noadpls"
repository = "https://github.com/LuoChu-NB2Dev/nonebot-plugin-noadpls"
keywords = ["bot", "qq", "qqbot", "onebotv11", "onebot", "nonebot2", "nonebot"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = "^3.9"
nonebot2 = "^2.4.1"
nonebot-adapter-onebot = "^2.4.6"
nonebot-plugin-localstore = "^0.7.4"
paddleocr = "^2.10.0"
paddlepaddle = "^3.0.0rc1"
cleanse-speech = "^0.1.3"
jieba = "^0.42.1"
fuzzywuzzy = "^0.18.0"
python-levenshtein = "^0.27.1"
opencc = "^1.1.9"
# pypinyin = "^0.54.0"
httpx = ">=0.24.0,<1.0.0"

[tool.poetry.group.dev.dependencies]
nonebot2 = {extras = ["fastapi"], version = "^2.4.1"}
ruff = "^0.11.4"
pre-commit = "^4.2.0"

[tool.poetry.group.test.dependencies]
nonebug = "^0.4.3"
pytest-asyncio = "^0.25.3"
pytest-cov = "^6.0.0"
pytest-xdist = "^3.6.1"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "清华"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
priority = "primary"

[[tool.poetry.source]]
name = "阿里云"
url = "https://mirrors.aliyun.com/pypi/simple/"
priority = "primary"

[[tool.poetry.source]]
name = "豆瓣"
url = "https://pypi.doubanio.com/simple/"
priority = "primary"

[tool.nonebot]
adapters = [
    { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11" },
]
plugins = ["nonebot_plugin_noadpls"]
plugin_dirs = []
builtin_plugins = []

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "I",     # isort
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "TID",   # flake8-tidy-imports
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E722", # do-not-use-bare-except
  "E402",   # module-import-not-at-top-of-file
  "E501",   # line-too-long
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"

typeCheckingMode = "standard"
reportShadowedImports = false
disableBytesTypePromotions = true