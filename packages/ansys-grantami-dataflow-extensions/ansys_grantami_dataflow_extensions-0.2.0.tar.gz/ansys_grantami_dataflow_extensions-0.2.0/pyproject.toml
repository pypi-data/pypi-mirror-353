[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
# Check https://python-poetry.org/docs/pyproject/ for all available sections
name = "ansys-grantami-dataflow-extensions"
version = "0.2.0"
description = "Productivity package for use with Granta MI Dataflow."
license = "MIT"
authors = ["ANSYS, Inc. <pyansys.core@ansys.com>"]
maintainers = ["ANSYS, Inc. <pyansys.core@ansys.com>"]
readme = "README.rst"
repository = "https://github.com/ansys/grantami-dataflow-extensions"
documentation = "https://dataflow-extensions.grantami.docs.pyansys.com"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
]
packages = [
    { include = "ansys", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
requests = "^2.23"
requests-negotiate-sspi = "^0.5.2"
ansys-openapi-common = "^2.3.0"

# Optional documentation dependencies
[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx = "^8.0.2"
numpydoc = "^1.4.0"
ansys-sphinx-theme = "^1.0.5"
sphinx-copybutton = "^0.5.0"
jupytext = "^1.14.4"
nbsphinx = "^0.9.0"
ipykernel = "^6.21.2" # required by nbsphinx to run notebooks.
sphinx-jinja = "^2.0.2"
enum-tools = "^0.13.0"
sphinx-toolbox = "^4.0.0"
sphinx-design = "^0.6.0"
sphinx-autoapi = "^3.1.0a2"
sphinxcontrib-napoleon = "^0.7.0"
ansys-grantami-recordlists = "^1.2"  # Required to build examples

[tool.poetry.group.tests.dependencies]
pytest = "^8.0.2"
pytest-cov = "^6.0.0"
requests-mock = "^1.10.0"
pre-commit = "^4.0.0"
mypy = "^1.8.0"
ansys-grantami-recordlists = "^1.2"
ansys-openapi-common = { version = "*", extras=["oidc"] }

[tool.coverage.run]
source = ["ansys.grantami"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
filterwarnings = "error"

[tool.pydocstyle]
convention = "numpy"

[tool.mypy]
strict = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true
files = "src"
explicit_package_bases = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
namespace_packages = true

[tool.numpydoc_validation]
checks = [
    "all",   # report on all checks, except the below
    "EX01",
    "SA01",
    "ES01",
]

exclude = [  # don't report on objects that match any of these regexes
    '\.__repr__$',
    '\.__new__$',
    '\.__init__$',
]

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle, see https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "D",    # pydocstyle, see https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "F",    # pyflakes, see https://docs.astral.sh/ruff/rules/#pyflakes-f
    "I",    # isort, see https://docs.astral.sh/ruff/rules/#isort-i
    "N",    # pep8-naming, see https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "PTH",  # flake8-use-pathlib, https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "TD",   # flake8-todos, https://docs.astral.sh/ruff/rules/#flake8-todos-td
]

ignore = [
    "TD002", # Missing author in TODOs comment
]

[tool.ruff.lint.per-file-ignores]
# Ignore `F401` (import violations) in all `__init__.py` files.
"__init__.py" = ["F401"]
"!src/**.py" = ["D"]
"examples/**.py" = ["E402"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-third-party = ["ansys.openapi.common", "ansys.grantami.recordlists"]

[tool.towncrier]
directory = "doc/changelog.d"
filename = "doc/source/changelog.rst"
template = "doc/changelog.d/changelog_template.jinja"
start_string = ".. towncrier release notes start\n"
title_format = "`{version} <https://github.com/ansys/grantami-dataflow-extensions/releases/tag/v{version}>`_ - {project_date}"
issue_format = "`#{issue} <https://github.com/ansys/grantami-dataflow-extensions/pull/{issue}>`_"

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "dependencies"
name = "Dependencies"
showcontent = true

[[tool.towncrier.type]]
directory = "miscellaneous"
name = "Miscellaneous"
showcontent = true

[[tool.towncrier.type]]
directory = "documentation"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "maintenance"
name = "Maintenance"
showcontent = true

[[tool.towncrier.type]]
directory = "test"
name = "Test"
showcontent = true
