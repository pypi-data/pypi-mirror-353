[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "astrolabe"

[project]
name = "astrolabe-sdk"
description = "Python SDK for the OKAPI:Astrolabe API"
readme = "PYPI_README.md"
requires-python = ">= 3.10"
authors = [{ name = "OKAPI:Orbits", email = "contact@okapiorbits.space" }]
license = { file = "LICENSE" }
dynamic = ["version"]
dependencies = ["python-dotenv", "requests"]
keywords = [
    "space",
    "space debris",
    "astrolabe",
    "space traffic coordination",
    "okapi orbits",
    "sdk",
    "REST API"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Topic :: Utilities",
]

[project.urls]
Homepage = "https://www.okapiorbits.space"

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "types-requests",
    "pytest",
    "pytest-cov",
    "pytest-env",
    "pytest-html",
    "coverage[toml]",          # NEW: Enhanced coverage with TOML support
    "pytest-xdist",           # NEW: Parallel test execution
    "coverage-badge",         # NEW: Generate coverage badges
]
docs = [
    "sphinx",
    "sphinx-book-theme",
    "myst-parser",
    "sphinx-autoapi",
    "sphinx-click",
    "myst-nb",
]

[tool.pytest.ini_options]
minversion = 6.0
addopts = "-ra -q -v --html=pytest_report.html --self-contained-html --strict-markers --junitxml=pytest_results.xml"
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]
log_cli = true
log_file = "pytest.log"
log_cli_level = "INFO"
log_cli_format = "[%(asctime)s] [%(levelname)8s] [%(filename)s:%(lineno)s] %(message)s "
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
console_output_style = "count"
# usefixtures = "testdata"
junit_logging = "all"

[tool.coverage.run]
source = ["astrolabe"]
omit = [
    "tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/site-packages/*"
]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2
fail_under = 85

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
