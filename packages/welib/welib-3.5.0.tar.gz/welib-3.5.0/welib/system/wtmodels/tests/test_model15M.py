import unittest
import os
import numpy as np    
from welib.system.wtmodels.model15M import *

MyDir=os.path.dirname(__file__)

class Test(unittest.TestCase):

    def test_constant_matrices(self):
        p=parameters() # Turbine parameters
        lambda1 = 1.8751 # NOTE: constant for analytical bending mode 1
        c1      = 0.7341 # NOTE: constant for analytical bending mode 1, see bendingMode!
        Omega= 1.5
        Mb,Kb,Gb,Mt,Gt,Kt = diagonalStructuralMatrices(p,Omega,lambda1,c1)

        Mt_ref = np.array([
            [ 323625.00577 ,        0.00000,         0.00000,    165000.00000,         0.00000,         0.0000],
            [      0.00000 ,   323625.00577,         0.00000,         0.00000,         0.00000,         0.0000],
            [      0.00000 ,        0.00000,  19098760.00000,         0.00000,         0.00000,         0.0000],
            [ 165000.00000 ,        0.00000,         0.00000,  19098760.00000,         0.00000,         0.0000],
            [      0.00000 ,        0.00000,         0.00000,         0.00000,  28747520.00000,  27547520.0000],
            [      0.00000 ,        0.00000,         0.00000,         0.00000,  27547520.00000,  27547520.0000]])

        Kt_ref = np.array([
            [  14150205.00423,             0.00000,             0.00000,            0.00000,   -495257175.14799,            0.0000],
            [         0.00000,      14150205.00423,     495257175.14799,            0.00000,            0.00000,            0.0000],
            [         0.00000,     495257175.14799,   23112001506.90606,            0.00000,            0.00000,            0.0000],
            [         0.00000,             0.00000,             0.00000,   4344361185.50866,            0.00000,            0.0000],
            [-495257175.14799,             0.00000,             0.00000,            0.00000,  23112001506.90606,            0.0000],
            [         0.00000,             0.00000,             0.00000,            0.00000,            0.00000,    500000000.0000]])

        Gt_ref = np.array([
            [     0  ,       0 ,        0 ,        0 ,        0  ,       0],
            [     0  ,       0 ,        0 ,        0 ,        0  ,       0],
            [     0  ,       0 ,        0 ,-41321280 ,        0  ,       0],
            [     0  ,       0 , 41321280 ,        0 ,        0  ,       0],
            [     0  ,       0 ,        0 ,        0 ,        0  ,       0],
            [     0  ,       0 ,        0 ,        0 ,        0  ,       0]])

        Kb_ref = np.array([
           [1006617.66431,        0.00000,        0.00000],
           [      0.00000,  1741825.41658,        0.00000],
           [      0.00000,        0.00000,  4372299.33137]])
        Mb_ref = np.array([
           [10999.84845,      0.00000,  -8947.71674],
           [    0.00000,  10999.84845,      0.00000],
           [-8947.71674,      0.00000,  14813.75000]])


        np.testing.assert_almost_equal(Mb, Mb_ref, 5)
        np.testing.assert_almost_equal(Kb, Kb_ref, 5)
        np.testing.assert_almost_equal(Mt, Mt_ref, 5)
        np.testing.assert_almost_equal(Kt, Kt_ref, 5)
        np.testing.assert_almost_equal(Gt, Gt_ref, 5)


    def test_dMatrix(self):
        p=parameters() # Turbine parameters
        N = 10
        z=np.linspace(0,p['R'],N)
        nDOF= 3
        phi_e = bendingMode(z,1)  
        phi_f = bendingMode(z,1)  
        phi_t = torsionalMode(z,1)
        psi   = np.pi/3; 
        i     = N-1    ; 
        Omega = 0.5
        [dMtb,dGbt,dGtb,dKtb] =  dMatrix(z[i],phi_f[i],phi_e[i],phi_t[i],psi, p, Omega);

        dMtb_ref=np.array([
            [       0.00000 ,    219.99934 ,      0.00000],
            [     439.99869 ,      0.00000 ,   -264.00000],
            [  -11457.22719 ,   1905.25020 ,   6874.35685],
            [   18788.50277 ,   1099.99671 , -11273.13533],
            [       0.00000 ,  21999.93429 ,      0.00000],
            [       0.00000 ,  21999.93429 ,      0.00000]])
        dGtb_ref=np.array([
          [0.00000,   -381.05004,      0.00000],
          [0.00000,      0.00000,      0.00000],
          [0.00000,   1099.99671,      0.00000],
          [0.00000,  -1905.25020,      0.00000],
          [0.00000,   -527.99842,      0.00000],
          [0.00000,   -527.99842,      0.00000]])
        dGbt_ref = np.array([
              [ 0.00000,      0.00000,  18788.50277,  11457.22719,      0.00000,      0.00000],
              [ 0.00000,      0.00000,      0.00000,      0.00000,    527.99842,    527.99842],
              [ 0.00000,      0.00000, -11273.13533,  -6874.35685,      0.00000,      0.00000]])
                                                                                                                                                                                                  
        dKtb_ref=np.array([
            [      0.00000,    -54.99984,      0.00000],
            [      0.00000,      0.00000,      0.00000],
            [  -2864.30680,   -476.31255,   1718.58921],
            [   4697.12569,   -274.99918,  -2818.28383],
            [      0.00000,      0.00000,      0.00000],
            [      0.00000,      0.00000,      0.00000]])

        np.testing.assert_almost_equal(dMtb, dMtb_ref, 5)
        np.testing.assert_almost_equal(dKtb, dKtb_ref, 5)
        np.testing.assert_almost_equal(dGtb, dGtb_ref, 5)
        np.testing.assert_almost_equal(dGbt, dGbt_ref, 5)


    def test_azimuthMat(self):
        p=parameters() # Turbine parameters
        N = 10
        z=np.linspace(0,p['R'],N)
        nDOF= 3
        phi_e = bendingMode(z,1)  
        phi_f = bendingMode(z,1)  
        phi_t = torsionalMode(z,1)
        psi   = np.pi/3; 
        Omega = 0.5
        Mtb1,Gbt1,Gtb1,Ktb1 = azimuthDependentStructuralMatrix(p,Omega,psi)

        Mtb1_ref =np.array([
            [        0.00000,    4306.44520,       0.00000 ],
            [     8612.89040,       0.00000,   -8403.37406 ],
            [  -165377.78065,   37294.90945,  142477.11534 ],
            [   265771.78157,   21532.22601, -226609.50495 ],
            [        0.00000,  312854.00477,       0.00000 ],
            [        0.00000,  312854.00477,       0.00000 ]])
        Gbt1_ref =np.array([
            [        0.00000,       0.00000,  265771.78157,  165377.78065,       0.00000,       0.00000],
            [        0.00000,       0.00000,       0.00000,       0.00000,   10335.46848,   10335.46848],
            [        0.00000,       0.00000, -226609.50495, -142477.11534,       0.00000,       0.00000]])
        Gtb1_ref =np.array([
            [       0.00000,  -7458.98189 ,     0.00000 ],
            [       0.00000,      0.00000 ,     0.00000 ],
            [       0.00000,  21532.22601 ,     0.00000 ],
            [       0.00000, -37294.90945 ,     0.00000 ],
            [       0.00000, -10335.46848 ,     0.00000 ],
            [       0.00000, -10335.46848 ,     0.00000 ]])
        Ktb1_ref =np.array([
            [       0.00000 , -1076.61130,      0.00000],
            [       0.00000 ,     0.00000,      0.00000],
            [  -41344.44516 , -9323.72736,  35619.27884],
            [   66442.94539 , -5383.05650, -56652.37624],
            [       0.00000 ,     0.00000,      0.00000],
            [       0.00000 ,     0.00000,      0.00000]])

        np.testing.assert_almost_equal(Mtb1, Mtb1_ref, 5)
        np.testing.assert_almost_equal(Ktb1, Ktb1_ref, 5)
        np.testing.assert_almost_equal(Gtb1, Gtb1_ref, 5)
        np.testing.assert_almost_equal(Gbt1, Gbt1_ref, 5)


    def test_MCKmat(self):
        p     = parameters()
        Omega = 0.5
        psi1  = np.pi/3
        M, C, K = MCKmat(p, Omega , psi1)
        M_ref = np.array([
             [     10999.84845 ,         0.00000,      -8947.71674 ,         0.00000,          0.00000,          0.00000,          0.00000,          0.00000,          0.00000,          0.00000,       8612.89040,   -165377.78065,     265771.78157,          0.00000,          0.00000 ],
             [         0.00000 ,     10999.84845,          0.00000 ,         0.00000,          0.00000,          0.00000,          0.00000,          0.00000,          0.00000,       4306.44520,          0.00000,     37294.90945,      21532.22601,     312854.00477,     312854.00477 ],
             [     -8947.71674 ,         0.00000,      14813.75000 ,         0.00000,          0.00000,          0.00000,          0.00000,          0.00000,          0.00000,          0.00000,      -8403.37406,    142477.11534,    -226609.50495,          0.00000,          0.00000 ],
             [         0.00000 ,         0.00000,          0.00000 ,     10999.84845,          0.00000,      -8947.71674,          0.00000,          0.00000,          0.00000,          0.00000,       8612.89040,    312854.00477,      10335.46848,          0.00000,          0.00000 ],
             [         0.00000 ,         0.00000,          0.00000 ,         0.00000,      10999.84845,          0.00000,          0.00000,          0.00000,          0.00000,      -8612.89040,          0.00000,         0.00000,     -43064.45202,     312854.00477,     312854.00477 ],
             [         0.00000 ,         0.00000,          0.00000 ,     -8947.71674,          0.00000,      14813.75000,          0.00000,          0.00000,          0.00000,          0.00000,      -8403.37406,   -267488.14570,     -10084.04887,          0.00000,          0.00000 ],
             [         0.00000 ,         0.00000,          0.00000 ,         0.00000,          0.00000,          0.00000,      10999.84845,          0.00000,      -8947.71674,          0.00000,       8612.89040,   -147476.22412,    -276107.25005,          0.00000,          0.00000 ],
             [         0.00000 ,         0.00000,          0.00000 ,         0.00000,          0.00000,          0.00000,          0.00000,      10999.84845,          0.00000,       4306.44520,          0.00000,    -37294.90945,      21532.22601,     312854.00477,     312854.00477 ],
             [         0.00000 ,         0.00000,          0.00000 ,         0.00000,          0.00000,          0.00000,      -8947.71674,          0.00000,      14813.75000,          0.00000,      -8403.37406,    125011.03036,     236693.55382,          0.00000,          0.00000 ],
             [         0.00000 ,      4306.44520,          0.00000 ,         0.00000,      -8612.89040,          0.00000,          0.00000,       4306.44520,          0.00000,     323625.00577,          0.00000,         0.00000,     165000.00000,          0.00000,          0.00000 ],
             [      8612.89040 ,         0.00000,      -8403.37406 ,      8612.89040,          0.00000,      -8403.37406,       8612.89040,          0.00000,      -8403.37406,          0.00000,     323625.00577,         0.00000,          0.00000,          0.00000,          0.00000 ],
             [   -165377.78065 ,     37294.90945,     142477.11534 ,    312854.00477,          0.00000,    -267488.14570,    -147476.22412,     -37294.90945,     125011.03036,          0.00000,          0.00000,  19098760.00000,          0.00000,          0.00000,          0.00000 ],
             [    265771.78157 ,     21532.22601,    -226609.50495 ,     10335.46848,     -43064.45202,     -10084.04887,    -276107.25005,      21532.22601,     236693.55382,     165000.00000,          0.00000,         0.00000,   19098760.00000,          0.00000,          0.00000 ],
             [         0.00000 ,    312854.00477,          0.00000 ,         0.00000,     312854.00477,          0.00000,          0.00000,     312854.00477,          0.00000,          0.00000,          0.00000,         0.00000,          0.00000,   28747520.00000,   27547520.00000 ],
             [         0.00000 ,    312854.00477,          0.00000 ,         0.00000,     312854.00477,          0.00000,          0.00000,     312854.00477,          0.00000,          0.00000,          0.00000,         0.00000,          0.00000,   27547520.00000,   27547520.00000 ]])

        K_ref = np.array([
         [       980364.64186 ,           0.00000,            0.00000 ,           0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,     1737572.09102,            0.00000 ,           0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,      4356459.33137 ,           0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,      980364.64186,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,      1737572.09102,            0.00000,            0.00000,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,            0.00000,      4356459.33137,            0.00000,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,            0.00000,            0.00000,       980364.64186,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,            0.00000,            0.00000,            0.00000,      1737572.09102,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,            0.00000,            0.00000,            0.00000,            0.00000,      4356459.33137,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000],
         [            0.00000 ,       -1076.61130,            0.00000 ,           0.00000,         2153.22260,            0.00000,            0.00000,        -1076.61130,            0.00000,       14150205.00423,            0.00000,            0.00000,            0.00000,   -495257175.14799,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000,              0.00000,     14150205.00423,    495257175.14799,            0.00000,            0.00000,            0.00000],
         [       -41344.44516 ,       -9323.72736,        35619.27884 ,       78213.50119,           -0.00000,       -66872.03642,       -36869.05603,         9323.72736,        31252.75759,              0.00000,    495257175.14799,  23112001506.90606,            0.00000,            0.00000,            0.00000],
         [        66442.94539 ,       -5383.05650,       -56652.37624 ,        2583.86712,        10766.11300,        -2521.01222,       -69026.81251,        -5383.05650,        59173.38845,              0.00000,            0.00000,            0.00000,   4344361185.50866,            0.00000,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000,     -495257175.14799,            0.00000,            0.00000,            0.00000,  23112001506.90606,            0.00000],
         [            0.00000 ,           0.00000,            0.00000 ,           0.00000,            0.00000,            0.00000,            0.00000,            0.00000,            0.00000,              0.00000,            0.00000,            0.00000,            0.00000,            0.00000,    500000000.00000]])

        C_ref = np.array([
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,    265771.78157,    165377.78065,         0.00000,         0.00000],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,     10335.46848,     10335.46848],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,   -226609.50495,   -142477.11534,         0.00000,         0.00000],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,     10335.46848,   -312854.00477,         0.00000,         0.00000],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,     10335.46848,     10335.46848],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,    -10084.04887,    267488.14570,         0.00000,         0.00000],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,   -276107.25005,    147476.22412,         0.00000,         0.00000],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,     10335.46848,     10335.46848],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,    236693.55382,   -125011.03036,         0.00000,         0.00000],
        [          0.00000,     -7458.98189,         0.00000,         0.00000,        -0.00000,         0.00000,         0.00000,      7458.98189,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000],
        [          0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000],
        [          0.00000,     21532.22601,         0.00000,         0.00000,    -43064.45202,         0.00000,         0.00000,     21532.22601,         0.00000,         0.00000,         0.00000,         0.00000, -13773760.00000,         0.00000,         0.00000],
        [          0.00000,    -37294.90945,         0.00000,         0.00000,        -0.00000,         0.00000,         0.00000,     37294.90945,         0.00000,         0.00000,         0.00000,  13773760.00000,         0.00000,         0.00000,         0.00000],
        [          0.00000,    -10335.46848,         0.00000,         0.00000,    -10335.46848,         0.00000,         0.00000,    -10335.46848,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000],
        [          0.00000,    -10335.46848,         0.00000,         0.00000,    -10335.46848,         0.00000,         0.00000,    -10335.46848,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000,         0.00000]])
   
        np.testing.assert_almost_equal(M, M_ref, 5)
        np.testing.assert_almost_equal(K, K_ref, 5)
        np.testing.assert_almost_equal(C, C_ref, 5)


    def test_Bmat(self):
        from welib.system.mbc import MBC3_Bmat

        Omega=0.5;
        psi1 = np.pi/3
        B, Binv, Bdot, Bddot, mu, _ = MBC3_Bmat(3, 6, ns=0, psi1=psi1, Omega=Omega, ordering='increasing')

        mu_ref = np.array([
        [   0.33333 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.33333 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.33333,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.66667 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.66667 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.66667,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.66667 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.66667,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.66667 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 1.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  1.00000,  0.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  1.00000,  0.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  1.00000,  0.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  1.00000,  0.00000],
        [   0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  1.00000]])

        B_ref =np.array([
           [1.00000,  0.00000,  0.00000,  0.50000,  0.00000,  0.00000,  0.86603,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  1.00000,  0.00000,  0.00000,  0.50000,  0.00000,  0.00000,  0.86603,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  1.00000,  0.00000,  0.00000,  0.50000,  0.00000,  0.00000,  0.86603,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [1.00000,  0.00000,  0.00000, -1.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  1.00000,  0.00000,  0.00000, -1.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  1.00000,  0.00000,  0.00000, -1.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [1.00000,  0.00000,  0.00000,  0.50000,  0.00000,  0.00000, -0.86603,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  1.00000,  0.00000,  0.00000,  0.50000,  0.00000,  0.00000, -0.86603,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  1.00000,  0.00000,  0.00000,  0.50000,  0.00000,  0.00000, -0.86603,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  1.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  1.00000,  0.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  1.00000,  0.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  1.00000,  0.00000,  0.0000],
           [0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  1.00000,  0.0000],
           [0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  0.00000,  1.0000]])
        Bdot_ref = np.array([
        [   0.00000,  0.00000,  0.00000 ,-0.43301,  0.00000,  0.00000 , 0.25000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000, -0.43301,  0.00000 , 0.00000,  0.25000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000, -0.43301 , 0.00000,  0.00000,  0.25000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 ,-0.00000,  0.00000,  0.00000 ,-0.50000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000, -0.00000,  0.00000 , 0.00000, -0.50000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000, -0.00000 , 0.00000,  0.00000, -0.50000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.43301,  0.00000,  0.00000 , 0.25000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.43301,  0.00000 , 0.00000,  0.25000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.43301 , 0.00000,  0.00000,  0.25000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000],
        [   0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000 , 0.00000,  0.00000,  0.00000,  0.00000,  0.00000 , 0.00000 , 0.00000,  0.00000,  0.00000]])

        np.testing.assert_almost_equal(B, B_ref, 5)
        np.testing.assert_almost_equal(mu, mu_ref, 5)
        np.testing.assert_almost_equal(Bdot, Bdot_ref, 5)


    def test_dAeroMat(self):
        p=parameters() # Turbine parameters
        N = 500
        z=np.linspace(0,p['R'],N)
        nDOF= 3
        phi_e = bendingMode(z,1)  
        phi_f = bendingMode(z,1)  
        phi_t = torsionalMode(z,1)

        Omega=1.5;
        WS=5;
        flag='';
        h = z[1]-z[0]
        i=100-1
        np.set_printoptions(linewidth=300, precision =5)
        dAeroMat = dAerodynMatrix(p,z[i],Omega,WS,phi_f[i],phi_e[i],phi_t[i])

        ref=dict()

        ref['Cab'] = np.array([
            [0.42689 ,-0.74784,-0.72560],
            [-0.16604,-0.14637,2.17095 ],
            [0.00000 ,0.00000 ,0.00000 ]])

        ref['Kab'] = np.array([
            [0.00000 ,0.00000 ,-8.01059],
            [0.00000 ,0.00000 ,23.96713],
            [0.00000 ,0.00000 ,0.00000 ]])

        ref['Cat'] = np.array([
            [-13.87259  ,0.00000    ,156.10352  ,15.05749   ,0.00000    ,0.00000    ],
            [0.00000    ,80.91895   ,0.00000    ,0.00000    ,-1406.21014,-1406.21014],
            [703.10507  ,0.00000    ,4056.62990 ,3014.90628 ,0.00000    ,0.00000    ],
            [-69.36295  ,0.00000    ,-3014.90628,4056.62990 ,0.00000    ,0.00000    ],
            [0.00000    ,-312.20705 ,0.00000    ,0.00000    ,-2730.21495,-2730.21495],
            [0.00000    ,-312.20705 ,0.00000    ,0.00000    ,-2730.21495,-2730.21495]])

        ref['Kat'] = np.array([
            [0.00000    ,0.00000    ,0.00000    ,1326.31792 ,0.00000    ,0.00000    ],
            [0.00000    ,0.00000    ,0.00000    ,0.00000    ,0.00000    ,0.00000    ],
            [0.00000    ,0.00000    ,346.81474  ,-2248.38176,0.00000    ,0.00000    ],
            [0.00000    ,0.00000    ,3515.52536 ,346.81474  ,0.00000    ,0.00000    ],
            [0.00000    ,0.00000    ,0.00000    ,0.00000    ,0.00000    ,0.00000    ],
            [0.00000    ,0.00000    ,0.00000    ,0.00000    ,0.00000    ,0.00000    ]])
        ref['Ka1_bt'] = np.array([
            [0.00000 ,0.00000 ,0.00000 ,29.72254,0.00000 ,0.00000 ],
            [0.00000 ,0.00000 ,0.00000 ,5.81739 ,0.00000 ,0.00000 ],
            [0.00000 ,0.00000 ,0.00000 ,0.00000 ,0.00000 ,0.00000 ]])
        ref['Kb1_bt'] = np.array([
            [0.00000 ,0.00000 ,29.72254,0.00000 ,0.00000 ,0.00000 ],
            [0.00000 ,0.00000 ,5.81739 ,0.00000 ,0.00000 ,0.00000 ],
            [0.00000 ,0.00000 ,0.00000 ,0.00000 ,0.00000 ,0.00000 ]])
        ref['Ka0_tb'] = np.array([
            [0.00000   ,0.00000   ,0.00000   ],
            [0.00000   ,0.00000   ,-63.67557 ],
            [0.00000   ,0.00000   ,0.00000   ],
            [0.00000   ,0.00000   ,0.00000   ],
            [0.00000   ,0.00000   ,1889.85791],
            [0.00000   ,0.00000   ,1889.85791]])
        ref['Ka1_tb'] = np.array([
            [0.00000  ,0.00000  ,190.51295],
            [0.00000  ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,631.65146],
            [5.35663  ,-52.70964,952.56474],
            [0.00000  ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,0.00000  ]])

        ref['Kb1_tb'] = np.array([
            [0.00000   ,0.00000   ,0.00000   ],
            [0.00000   ,0.00000   ,0.00000   ],
            [5.35663   ,-52.70964 ,952.56474 ],
            [0.00000   ,0.00000   ,-631.65146],
            [0.00000   ,0.00000   ,0.00000   ],
            [0.00000   ,0.00000   ,0.00000   ]])

        ref['Ca0_tb'] = np.array([
            [0.00000  ,0.00000  ,0.00000  ],
            [3.39329  ,-5.94451 ,-5.76775 ],
            [0.00000  ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,0.00000  ],
            [-13.09221,-11.54151,171.18388],
            [-13.09221,-11.54151,171.18388]])

        ref['Ca1_tb'] = np.array([
            [-1.31980 ,-1.16348 ,17.25672 ],
            [0.00000  ,0.00000  ,0.00000  ],
            [-33.66086,58.96856 ,57.21517 ],
            [-6.59900 ,-5.81739 ,86.28359 ],
            [0.00000  ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,0.00000  ]])

        ref['Cb1_tb'] = np.array([
            [0.00000  ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,0.00000  ],
            [-6.59900 ,-5.81739 ,86.28359 ],
            [33.66086 ,-58.96856,-57.21517],
            [0.00000  ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,0.00000  ]])

        ref['Ca0_bt'] = np.array([
            [0.00000  ,3.39329  ,0.00000  ,0.00000  ,-58.96856,-58.96856],
            [0.00000  ,-1.31980 ,0.00000  ,0.00000  ,-11.54151,-11.54151],
            [0.00000  ,0.00000  ,0.00000  ,0.00000  ,0.00000  ,0.00000  ]])

        ref['Ca1_bt'] = np.array([
            [-5.94451 ,0.00000  ,-33.66086,-32.08898,0.00000  ,0.00000  ],
            [-1.16348 ,0.00000  ,13.09221 ,1.26285  ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,0.00000  ,0.00000  ,0.00000  ,0.00000  ]])

        ref['Cb1_bt'] = np.array([
            [0.00000  ,0.00000  ,-32.08898,33.66086 ,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,1.26285  ,-13.09221,0.00000  ,0.00000  ],
            [0.00000  ,0.00000  ,0.00000  ,0.00000  ,0.00000  ,0.00000  ]])

        for k,v in dAeroMat.items():
            np.testing.assert_almost_equal(dAeroMat[k], ref[k], 5)


    def test_liftdrag(self):
        alpha = np.linspace(-np.pi,np.pi,100)
        Cl,Cd,Clp,Cdp = liftDrag(alpha)

        np.testing.assert_almost_equal(Cl[70], 0.51664368, 5)
        np.testing.assert_almost_equal(Cd[70], 1.40153442, 5)
        np.testing.assert_almost_equal(Clp[70], -1.7874167788, 5)


if __name__ == '__main__':
    unittest.main()
    #Test().test_matrices()
    #Test().test_dAeroMat()
#     Test().test_liftdrag()
