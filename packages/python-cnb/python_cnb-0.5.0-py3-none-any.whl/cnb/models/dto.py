# Code generated by cnb.cool/cnb/sdk/cnb-sdk-generator. DO NOT EDIT.
# versions:
#    cnb-sdk-generator: 1.0.2
# source: https://api.cnb.cool/swagger.json

from pydantic import Field
from enum import Enum
from typing import Optional, Dict
from .models import CNBBaseModel
from . import chart
from . import constant
from . import convert
from . import map_constant
from . import organization
from . import v1
class AccessTokenItem(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	expired_at: Optional[str] = Field(alias="expired_at", default=None)
	last_activity_at: Optional[str] = Field(alias="last_activity_at", default=None)
	resource_type: Optional['constant.SlugType'] = Field(alias="resource_type", default=None)
	scope: Optional[str] = Field(alias="scope", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	token_fragment: Optional[str] = Field(alias="token_fragment", default=None)
	token_id: Optional[str] = Field(alias="token_id", default=None)
	pass
class AccessTokenPatchPayload(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	pass
class AccessTokenPayload(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	expired_at: Optional['convert.NullTime'] = Field(alias="expired_at", default=None)
	scope: Optional[str] = Field(alias="scope", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	token: Optional[str] = Field(alias="token", default=None)
	pass
class ActivityCalendar(CNBBaseModel):
	pass
class ActivityCalendarDate(CNBBaseModel):
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	issues_count: Optional[int] = Field(alias="issues_count", default=None)
	pr_count: Optional[int] = Field(alias="pr_count", default=None)
	score: Optional[int] = Field(alias="score", default=None)
	valid_cr_count: Optional[int] = Field(alias="valid_cr_count", default=None)
	valid_pr_count: Optional[int] = Field(alias="valid_pr_count", default=None)
	pass
class ActivityCreateRepoDetail(CNBBaseModel):
	create_at: Optional[str] = Field(alias="create_at", default=None)
	detail: Optional['Repos4UserBase'] = Field(alias="detail", default=None)
	exposed_repo_path: Optional[str] = Field(alias="exposed_repo_path", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	repo_unaccessible: Optional[bool] = Field(alias="repo_unaccessible", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class ActivityDate(CNBBaseModel):
	code_review_count: Optional[int] = Field(alias="code_review_count", default=None)
	code_reviews: Optional[list['ActivityRepoDetail']] = Field(alias="code_reviews", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	commits: Optional[list['ActivityRepoDetail']] = Field(alias="commits", default=None)
	group_count: Optional[int] = Field(alias="group_count", default=None)
	groups: Optional[list['ActivityJoinGroupDetail']] = Field(alias="groups", default=None)
	issues: Optional[list['ActivityRepoDetail']] = Field(alias="issues", default=None)
	issues_count: Optional[int] = Field(alias="issues_count", default=None)
	private_score: Optional[int] = Field(alias="private_score", default=None)
	pull_request_count: Optional[int] = Field(alias="pull_request_count", default=None)
	pull_requests: Optional[list['ActivityRepoDetail']] = Field(alias="pull_requests", default=None)
	repo_count: Optional[int] = Field(alias="repo_count", default=None)
	repos: Optional[list['ActivityCreateRepoDetail']] = Field(alias="repos", default=None)
	pass
class ActivityJoinGroupDetail(CNBBaseModel):
	create_at: Optional[str] = Field(alias="create_at", default=None)
	detail: Optional['OrganizationUnion'] = Field(alias="detail", default=None)
	remark: Optional[str] = Field(alias="remark", default=None)
	pass
class ActivityMineData(CNBBaseModel):
	activity_type: Optional['constant.ActivityType'] = Field(alias="activity_type", default=None)
	created_at: Optional['convert.NullTime'] = Field(alias="created_at", default=None)
	repo: Optional['ActivityRepos'] = Field(alias="repo", default=None)
	user: Optional['ActivityUsers'] = Field(alias="user", default=None)
	pass
class ActivityRelease(CNBBaseModel):
	commit_hash: Optional[str] = Field(alias="commit_hash", default=None)
	tag: Optional[str] = Field(alias="tag", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	pass
class ActivityRepoDetail(CNBBaseModel):
	detail: Optional['ActivitySlugDetail'] = Field(alias="detail", default=None)
	exposed_repo_path: Optional[str] = Field(alias="exposed_repo_path", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	repo_unaccessible: Optional[bool] = Field(alias="repo_unaccessible", default=None)
	time: Optional[int] = Field(alias="time", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class ActivityRepos(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	display_module: Optional['constant.RepoDisplayModule'] = Field(alias="display_module", default=None)
	fork_count: Optional[int] = Field(alias="fork_count", default=None)
	fork_target: Optional[str] = Field(alias="fork_target", default=None)
	forked_from: Optional[str] = Field(alias="forked_from", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	is_star: Optional[bool] = Field(alias="is_star", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	last_updated_at: Optional['convert.NullTime'] = Field(alias="last_updated_at", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	mark_count: Optional[int] = Field(alias="mark_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	star_count: Optional[int] = Field(alias="star_count", default=None)
	status: Optional['constant.RepoStatus'] = Field(alias="status", default=None)
	topics: Optional[str] = Field(alias="topics", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class ActivitySlugDetail(CNBBaseModel):
	path: Optional[str] = Field(alias="path", default=None)
	pass
class ActivityTotal(CNBBaseModel):
	activity_type: Optional['constant.ActivityType'] = Field(alias="activity_type", default=None)
	unread: Optional[bool] = Field(alias="unread", default=None)
	users: Optional[list[str]] = Field(alias="users", default=None)
	pass
class ActivityUsers(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	appreciate_status: Optional[int] = Field(alias="appreciate_status", default=None)
	avatar: Optional[str] = Field(alias="avatar", default=None)
	bio: Optional[str] = Field(alias="bio", default=None)
	company: Optional[str] = Field(alias="company", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	follow_count: Optional[int] = Field(alias="follow_count", default=None)
	follow_mission_count: Optional[int] = Field(alias="follow_mission_count", default=None)
	follow_repo_count: Optional[int] = Field(alias="follow_repo_count", default=None)
	follower_count: Optional[int] = Field(alias="follower_count", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	gender: Optional[int] = Field(alias="gender", default=None)
	group_count: Optional[int] = Field(alias="group_count", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	is_follow: Optional[bool] = Field(alias="is_follow", default=None)
	location: Optional[str] = Field(alias="location", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	mission_count: Optional[int] = Field(alias="mission_count", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	registry_count: Optional[int] = Field(alias="registry_count", default=None)
	repo_count: Optional[int] = Field(alias="repo_count", default=None)
	reward_amount: Optional[int] = Field(alias="reward_amount", default=None)
	reward_count: Optional[int] = Field(alias="reward_count", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	stars_count: Optional[int] = Field(alias="stars_count", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	wechat_mp: Optional[str] = Field(alias="wechat_mp", default=None)
	wechat_mp_qrcode: Optional[str] = Field(alias="wechat_mp_qrcode", default=None)
	pass
class ActivityWorkflowData(CNBBaseModel):
	activity_type: Optional['constant.ActivityType'] = Field(alias="activity_type", default=None)
	created_at: Optional['convert.NullTime'] = Field(alias="created_at", default=None)
	group: Optional['OrganizationUnion'] = Field(alias="group", default=None)
	release: Optional['ActivityRelease'] = Field(alias="release", default=None)
	repo: Optional['ActivityRepos'] = Field(alias="repo", default=None)
	user: Optional['ActivityUsers'] = Field(alias="user", default=None)
	pass
class Announcement(CNBBaseModel):
	announcement_msg: Optional[str] = Field(alias="announcement_msg", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	expired_at: Optional[str] = Field(alias="expired_at", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	pinned: Optional[int] = Field(alias="pinned", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class ArtifactStatus(CNBBaseModel):
	status: Optional[str] = Field(alias="status", default=None)
	pass
class AssetRecords(CNBBaseModel):
	id: Optional[str] = Field(alias="id", default=None)
	origin_path: Optional[str] = Field(alias="origin_path", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	referer: Optional[str] = Field(alias="referer", default=None)
	size_in_byte: Optional[int] = Field(alias="size_in_byte", default=None)
	pass
class AssetSize(CNBBaseModel):
	used_in_byte: Optional[str] = Field(alias="used_in_byte", default=None)
	pass
class Assets(CNBBaseModel):
	content_type: Optional[str] = Field(alias="content_type", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	pass
class BindResources(CNBBaseModel):
	app_id: Optional[str] = Field(alias="app_id", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	metadata: Optional[str] = Field(alias="metadata", default=None)
	openid: Optional[str] = Field(alias="openid", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class BindUsers(CNBBaseModel):
	app_id: Optional[str] = Field(alias="app_id", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	metadata: Optional[str] = Field(alias="metadata", default=None)
	openid: Optional[str] = Field(alias="openid", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class BoolResponse(CNBBaseModel):
	message: Optional[str] = Field(alias="message", default=None)
	result: Optional[bool] = Field(alias="result", default=None)
	pass
class BoolResponseWithData_map_constant_SlugType_int64(CNBBaseModel):
	data: Optional['map_constant.SlugType_int64'] = Field(alias="data", default=None)
	message: Optional[str] = Field(alias="message", default=None)
	result: Optional[bool] = Field(alias="result", default=None)
	pass
class Budget(CNBBaseModel):
	charge_type_ci: Optional[int] = Field(alias="charge_type_ci", default=None)
	charge_type_dev: Optional[int] = Field(alias="charge_type_dev", default=None)
	charge_type_git: Optional[int] = Field(alias="charge_type_git", default=None)
	charge_type_object: Optional[int] = Field(alias="charge_type_object", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	status: Optional['constant.BudgetSts'] = Field(alias="status", default=None)
	uin: Optional[str] = Field(alias="uin", default=None)
	pass
class BudgetItemPrice(CNBBaseModel):
	price: Optional[int] = Field(alias="price", default=None)
	vol: Optional[int] = Field(alias="vol", default=None)
	pass
class BuildLogsResult(CNBBaseModel):
	data: Optional[list['LogInfo']] = Field(alias="data", default=None)
	init: Optional[bool] = Field(alias="init", default=None)
	timestamp: Optional[int] = Field(alias="timestamp", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	pass
class BuildResult(CNBBaseModel):
	buildLogUrl: Optional[str] = Field(alias="buildLogUrl", default=None)
	message: Optional[str] = Field(alias="message", default=None)
	sn: Optional[str] = Field(alias="sn", default=None)
	pass
class BuildStatusResult(CNBBaseModel):
	pipelinesStatus: Optional[Dict[str, 'PipelineStatus']] = Field(alias="pipelinesStatus", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	pass
class CNBRegistry(CNBBaseModel):
	artifact_policy: Optional[str] = Field(alias="artifact_policy", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	kind: Optional[str] = Field(alias="kind", default=None)
	last_push_time: Optional[str] = Field(alias="last_push_time", default=None)
	last_push_user: Optional['Users'] = Field(alias="last_push_user", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	overwrite_policy: Optional[str] = Field(alias="overwrite_policy", default=None)
	pkg_count: Optional[int] = Field(alias="pkg_count", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	used_size: Optional[int] = Field(alias="used_size", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class ChartPackageDetail(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	desc: Optional[str] = Field(alias="desc", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	tag_total: Optional[int] = Field(alias="tag_total", default=None)
	tags: Optional[list['ChartTag']] = Field(alias="tags", default=None)
	pass
class ChartTag(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	digest: Optional[str] = Field(alias="digest", default=None)
	is_deprecated: Optional[bool] = Field(alias="is_deprecated", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	metadata: Optional['chart.Metadata'] = Field(alias="metadata", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	pass
class ChartTagDetail(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	is_deprecated: Optional[bool] = Field(alias="is_deprecated", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	metadata: Optional['chart.Metadata'] = Field(alias="metadata", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	tag: Optional[str] = Field(alias="tag", default=None)
	pass
class CheckFollowingResponse(CNBBaseModel):
	is_following: Optional[bool] = Field(alias="is_following", default=None)
	pass
class CheckStarResponse(CNBBaseModel):
	is_star: Optional[bool] = Field(alias="is_star", default=None)
	pass

class CleanPolicy(Enum):
	CleanPolicyPullTime = "pull_time"
	CleanPolicyPushTime = "push_time"

class CleanPolicyStatus(Enum):
	CleanPolicyEnabled = "enabled"
	CleanPolicyDisabled = "disabled"
class CodeRepoTagPolicy(CNBBaseModel):
	cleanup_policy: Optional['TagCleanupPolicy'] = Field(alias="cleanup_policy", default=None)
	override_policy: Optional['TagOverridePolicy'] = Field(alias="override_policy", default=None)
	pass
class CommonRegistryCleanDetail(CNBBaseModel):
	artifact_num: Optional[int] = Field(alias="artifact_num", default=None)
	clean_policy: Optional['CleanPolicy'] = Field(alias="clean_policy", default=None)
	status: Optional['CleanPolicyStatus'] = Field(alias="status", default=None)
	pass
class CommonRegistryOverwritePolicy(CNBBaseModel):
	overwrite_policy: Optional['OverwritePolicy'] = Field(alias="overwrite_policy", default=None)
	pass
class CommonRegistryPackageDetail(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	desc: Optional[str] = Field(alias="desc", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	tag_total: Optional[int] = Field(alias="tag_total", default=None)
	tags: Optional[list['CommonRegistryTag']] = Field(alias="tags", default=None)
	pass
class CommonRegistryPolicy(CNBBaseModel):
	clean_policy_detail: Optional['CommonRegistryCleanDetail'] = Field(alias="clean_policy_detail", default=None)
	overwrite_policy: Optional['OverwritePolicy'] = Field(alias="overwrite_policy", default=None)
	version_policy: Optional['VersionPolicy'] = Field(alias="version_policy", default=None)
	pass
class CommonRegistryTag(CNBBaseModel):
	desc: Optional[str] = Field(alias="desc", default=None)
	digest: Optional[str] = Field(alias="digest", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	pass
class CommonRegistryTagDetail(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	dependencies: Optional[list['Dependency']] = Field(alias="dependencies", default=None)
	desc: Optional[str] = Field(alias="desc", default=None)
	files: Optional[list['File']] = Field(alias="files", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	metadata: Optional['MetaData'] = Field(alias="metadata", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	tag: Optional[str] = Field(alias="tag", default=None)
	tags: Optional[list['CommonRegistryTag']] = Field(alias="tags", default=None)
	pass
class ContainerAnnotation(CNBBaseModel):
	revision: Optional[str] = Field(alias="revision", default=None)
	version: Optional[str] = Field(alias="version", default=None)
	pass
class ContainerImage(CNBBaseModel):
	arch: Optional[str] = Field(alias="arch", default=None)
	digest: Optional[str] = Field(alias="digest", default=None)
	layers: Optional[list['ContainerImageLayer']] = Field(alias="layers", default=None)
	os: Optional[str] = Field(alias="os", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	pass
class ContainerImageLayer(CNBBaseModel):
	instruction: Optional[str] = Field(alias="instruction", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	pass
class ContainerPackageDetail(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	desc: Optional[str] = Field(alias="desc", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	tag_total: Optional[int] = Field(alias="tag_total", default=None)
	tags: Optional[list['ContainerTag']] = Field(alias="tags", default=None)
	pass
class ContainerTag(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	annotations: Optional['ContainerAnnotation'] = Field(alias="annotations", default=None)
	images: Optional[list['ContainerImage']] = Field(alias="images", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	pass
class ContainerTagDetail(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	annotations: Optional['ContainerAnnotation'] = Field(alias="annotations", default=None)
	image: Optional['ContainerImage'] = Field(alias="image", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	options: Optional[list['ContainerImage']] = Field(alias="options", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	tag: Optional[str] = Field(alias="tag", default=None)
	pass
class CopyReq(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	group: Optional[str] = Field(alias="group", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	visibility: Optional[str] = Field(alias="visibility", default=None)
	pass
class CountResponse(CNBBaseModel):
	group: Optional[int] = Field(alias="group", default=None)
	repo: Optional[int] = Field(alias="repo", default=None)
	user: Optional[int] = Field(alias="user", default=None)
	pass
class CreateGroupReq(CNBBaseModel):
	bind_domain: Optional[str] = Field(alias="bind_domain", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	remark: Optional[str] = Field(alias="remark", default=None)
	pass
class CreateInvitationRequest(CNBBaseModel):
	is_outside_collaborator: Optional[bool] = Field(alias="is_outside_collaborator", default=None)
	member_number: Optional[int] = Field(alias="member_number", default=None)
	member_role: Optional['constant.AccessRole'] = Field(alias="member_role", default=None)
	validity_hour: Optional[int] = Field(alias="validity_hour", default=None)
	pass
class CreateInvitationResponse(CNBBaseModel):
	link_token: Optional[str] = Field(alias="link_token", default=None)
	resource_name: Optional[str] = Field(alias="resource_name", default=None)
	resource_type: Optional['constant.SlugType'] = Field(alias="resource_type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	pass
class CreateMissionReq(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	repos: Optional[list[str]] = Field(alias="repos", default=None)
	visibility: Optional[str] = Field(alias="visibility", default=None)
	pass
class CreateRegistryReq(CNBBaseModel):
	artifact_policy: Optional[str] = Field(alias="artifact_policy", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	kind: Optional[str] = Field(alias="kind", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	overwrite_policy: Optional[str] = Field(alias="overwrite_policy", default=None)
	visibility: Optional[str] = Field(alias="visibility", default=None)
	pass
class CreateRepoReq(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	visibility: Optional[str] = Field(alias="visibility", default=None)
	pass
class Creator(CNBBaseModel):
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	nick: Optional[str] = Field(alias="nick", default=None)
	pass
class DashboardStar(CNBBaseModel):
	mission: Optional['Missions4User'] = Field(alias="mission", default=None)
	repo: Optional['Repos4User'] = Field(alias="repo", default=None)
	resource_type: Optional['constant.SlugType'] = Field(alias="resource_type", default=None)
	pass
class Dependency(CNBBaseModel):
	artifact: Optional[str] = Field(alias="artifact", default=None)
	framework_name: Optional[str] = Field(alias="framework_name", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class ExploreList(CNBBaseModel):
	explore_repos: Optional[list['ExploreRepo']] = Field(alias="explore_repos", default=None)
	explore_type: Optional[str] = Field(alias="explore_type", default=None)
	explore_users: Optional[list['UsersResult']] = Field(alias="explore_users", default=None)
	pass
class ExploreRepo(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	display_module: Optional['constant.RepoDisplayModule'] = Field(alias="display_module", default=None)
	fork_count: Optional[int] = Field(alias="fork_count", default=None)
	forked_from_repo: Optional['Slugs'] = Field(alias="forked_from_repo", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	languages: Optional['RepoLanguage'] = Field(alias="languages", default=None)
	last_update_nickname: Optional[str] = Field(alias="last_update_nickname", default=None)
	last_update_username: Optional[str] = Field(alias="last_update_username", default=None)
	last_updated_at: Optional['convert.NullTime'] = Field(alias="last_updated_at", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	mark_count: Optional[int] = Field(alias="mark_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	open_issue_count: Optional[int] = Field(alias="open_issue_count", default=None)
	open_pull_request_count: Optional[int] = Field(alias="open_pull_request_count", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	second_languages: Optional['RepoLanguage'] = Field(alias="second_languages", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	star_count: Optional[int] = Field(alias="star_count", default=None)
	stared: Optional[bool] = Field(alias="stared", default=None)
	status: Optional['constant.RepoStatus'] = Field(alias="status", default=None)
	tags: Optional[list[object]] = Field(alias="tags", default=None)
	topics: Optional[str] = Field(alias="topics", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	web_url: Optional[str] = Field(alias="web_url", default=None)
	pass
class File(CNBBaseModel):
	name: Optional[str] = Field(alias="name", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	pass
class ForkReq(CNBBaseModel):
	branch: Optional[str] = Field(alias="branch", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	group: Optional[str] = Field(alias="group", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class Forks(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	fork_count: Optional[int] = Field(alias="fork_count", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	user_freeze: Optional[bool] = Field(alias="user_freeze", default=None)
	user_lock: Optional[bool] = Field(alias="user_lock", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	pass
class GetActivityMineDetailRsp(CNBBaseModel):
	activity_mine_datas: Optional[list['ActivityMineData']] = Field(alias="activity_mine_datas", default=None)
	next_offset: Optional[str] = Field(alias="next_offset", default=None)
	pass
class GetActivityWorkflowDetailRsp(CNBBaseModel):
	activity_workflow_datas: Optional[list['ActivityWorkflowData']] = Field(alias="activity_workflow_datas", default=None)
	next_offset: Optional[str] = Field(alias="next_offset", default=None)
	pass
class GetMineCreateDetailRsp(CNBBaseModel):
	issue_datas: Optional[list['IssueData']] = Field(alias="issue_datas", default=None)
	mine_type: Optional[str] = Field(alias="mine_type", default=None)
	pull_request_datas: Optional[list['PullRequestData']] = Field(alias="pull_request_datas", default=None)
	pass
class GetTodoDetailRsp(CNBBaseModel):
	issue_datas: Optional[list['IssueData']] = Field(alias="issue_datas", default=None)
	pull_request_datas: Optional[list['PullRequestData']] = Field(alias="pull_request_datas", default=None)
	todo_type: Optional[str] = Field(alias="todo_type", default=None)
	pass
class GroupSettingReq(CNBBaseModel):
	email_verification: Optional[str] = Field(alias="email_verification", default=None)
	group_protection: Optional[int] = Field(alias="group_protection", default=None)
	hide_members: Optional[int] = Field(alias="hide_members", default=None)
	hide_sub_groups: Optional[int] = Field(alias="hide_sub_groups", default=None)
	show_private_repo_watermark: Optional[int] = Field(alias="show_private_repo_watermark", default=None)
	values: Optional[str] = Field(alias="values", default=None)
	pass
class HandoverMemberRequest(CNBBaseModel):
	after: Optional[str] = Field(alias="after", default=None)
	before: Optional[str] = Field(alias="before", default=None)
	pass
class HarborGCSchedule(CNBBaseModel):
	cron: Optional[str] = Field(alias="cron", default=None)
	last_triggered_time: Optional[str] = Field(alias="last_triggered_time", default=None)
	next_scheduled_time: Optional[str] = Field(alias="next_scheduled_time", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class HarborRepository(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	labels: Optional[list[str]] = Field(alias="labels", default=None)
	push_time: Optional[str] = Field(alias="push_time", default=None)
	pusher_id: Optional[int] = Field(alias="pusher_id", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	pass
class InheritMembersUser(CNBBaseModel):
	access_level: Optional['constant.AccessRole'] = Field(alias="access_level", default=None)
	avatar: Optional[str] = Field(alias="avatar", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	email_verification: Optional[str] = Field(alias="email_verification", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	inviter: Optional['Users'] = Field(alias="inviter", default=None)
	join_time: Optional[str] = Field(alias="join_time", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	self_member: Optional[bool] = Field(alias="self_member", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	pass

class InteractionType(Enum):
	InteractionTypeRadio = "radio"
	InteractionTypeCheckbox = "checkbox"
	InteractionTypeTimeSelector = "time_selector"
class InvitationWithEmail(CNBBaseModel):
	count: Optional[int] = Field(alias="count", default=None)
	creator: Optional[str] = Field(alias="creator", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	email_match: Optional[bool] = Field(alias="email_match", default=None)
	expire: Optional[int] = Field(alias="expire", default=None)
	is_outside_collaborator: Optional[bool] = Field(alias="is_outside_collaborator", default=None)
	resource: Optional['Resources'] = Field(alias="resource", default=None)
	role: Optional['constant.AccessRole'] = Field(alias="role", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	pass
class IssueData(CNBBaseModel):
	associated_pull_request_counts: Optional[int] = Field(alias="associated_pull_request_counts", default=None)
	comment_counts: Optional[int] = Field(alias="comment_counts", default=None)
	created_time: Optional[str] = Field(alias="created_time", default=None)
	creator: Optional['Creator'] = Field(alias="creator", default=None)
	label: Optional[list['Label']] = Field(alias="label", default=None)
	number: Optional[int] = Field(alias="number", default=None)
	pinned: Optional[bool] = Field(alias="pinned", default=None)
	priority: Optional[str] = Field(alias="priority", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	slug_freeze: Optional[bool] = Field(alias="slug_freeze", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	todo_id: Optional[str] = Field(alias="todo_id", default=None)
	updated_time: Optional[str] = Field(alias="updated_time", default=None)
	pass
class Label(CNBBaseModel):
	color: Optional[str] = Field(alias="color", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class LastPusher(CNBBaseModel):
	is_frozen: Optional[bool] = Field(alias="is_frozen", default=None)
	is_lock: Optional[bool] = Field(alias="is_lock", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	push_at: Optional[str] = Field(alias="push_at", default=None)
	pass
class ListForks(CNBBaseModel):
	fork_tree_count: Optional[int] = Field(alias="fork_tree_count", default=None)
	forks: Optional[list['Forks']] = Field(alias="forks", default=None)
	pass
class ListInheritMembers(CNBBaseModel):
	inherit_path: Optional[str] = Field(alias="inherit_path", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	users: Optional[list['InheritMembersUser']] = Field(alias="users", default=None)
	pass
class LogInfo(CNBBaseModel):
	buildLogUrl: Optional[str] = Field(alias="buildLogUrl", default=None)
	commitTitle: Optional[str] = Field(alias="commitTitle", default=None)
	createTime: Optional[str] = Field(alias="createTime", default=None)
	duration: Optional[int] = Field(alias="duration", default=None)
	event: Optional[str] = Field(alias="event", default=None)
	eventUrl: Optional[str] = Field(alias="eventUrl", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	groupName: Optional[str] = Field(alias="groupName", default=None)
	labels: Optional[str] = Field(alias="labels", default=None)
	nickName: Optional[str] = Field(alias="nickName", default=None)
	pipelineFailCount: Optional[int] = Field(alias="pipelineFailCount", default=None)
	pipelineSuccessCount: Optional[int] = Field(alias="pipelineSuccessCount", default=None)
	pipelineTotalCount: Optional[int] = Field(alias="pipelineTotalCount", default=None)
	sha: Optional[str] = Field(alias="sha", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	sn: Optional[str] = Field(alias="sn", default=None)
	sourceRef: Optional[str] = Field(alias="sourceRef", default=None)
	sourceSlug: Optional[str] = Field(alias="sourceSlug", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	targetRef: Optional[str] = Field(alias="targetRef", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	userName: Optional[str] = Field(alias="userName", default=None)
	pass
class Manifest(CNBBaseModel):
	metadata: Optional['ManifestMetadata'] = Field(alias="metadata", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class ManifestMetadata(CNBBaseModel):
	annotations: Optional[Dict[str, 'str']] = Field(alias="annotations", default=None)
	artifactType: Optional[str] = Field(alias="artifactType", default=None)
	config: Optional['v1.Descriptor'] = Field(alias="config", default=None)
	layers: Optional[list['v1.Descriptor']] = Field(alias="layers", default=None)
	manifests: Optional[list['v1.Descriptor']] = Field(alias="manifests", default=None)
	mediaType: Optional[str] = Field(alias="mediaType", default=None)
	schemaVersion: Optional[int] = Field(alias="schemaVersion", default=None)
	subject: Optional['v1.Descriptor'] = Field(alias="subject", default=None)
	pass
class Member4GetAllMembersByRoot(CNBBaseModel):
	access_level: Optional['constant.AccessRole'] = Field(alias="access_level", default=None)
	avatar: Optional[str] = Field(alias="avatar", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	inviter: Optional['Users'] = Field(alias="inviter", default=None)
	join_time: Optional[str] = Field(alias="join_time", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	user_freeze: Optional[bool] = Field(alias="user_freeze", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	pass
class MemberAccessLevel(CNBBaseModel):
	access_level: Optional['constant.AccessRole'] = Field(alias="access_level", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pass
class MemberAccessLevelInSlugUnion(CNBBaseModel):
	access_level: Optional['constant.AccessRole'] = Field(alias="access_level", default=None)
	inherit: Optional[bool] = Field(alias="inherit", default=None)
	read_privilege: Optional[bool] = Field(alias="read_privilege", default=None)
	write_privilege: Optional[bool] = Field(alias="write_privilege", default=None)
	pass
class MetaData(CNBBaseModel):
	author: Optional[str] = Field(alias="author", default=None)
	home_page: Optional[str] = Field(alias="home_page", default=None)
	license_url: Optional[str] = Field(alias="license_url", default=None)
	minimum_stability: Optional[str] = Field(alias="minimum_stability", default=None)
	package_name: Optional[str] = Field(alias="package_name", default=None)
	package_tag: Optional[str] = Field(alias="package_tag", default=None)
	package_type: Optional[str] = Field(alias="package_type", default=None)
	readme: Optional[str] = Field(alias="readme", default=None)
	repository_url: Optional[str] = Field(alias="repository_url", default=None)
	pass
class MineCreateTotal(CNBBaseModel):
	issue_count: Optional[int] = Field(alias="issue_count", default=None)
	pull_request_count: Optional[int] = Field(alias="pull_request_count", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	pass
class MissionPatch(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	ref_repos: Optional[list[str]] = Field(alias="ref_repos", default=None)
	pass
class MissionWithRepos(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	repos: Optional[list['Repos4User']] = Field(alias="repos", default=None)
	stared: Optional[bool] = Field(alias="stared", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class Missions4User(CNBBaseModel):
	access: Optional['constant.AccessRole'] = Field(alias="access", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pinned: Optional[bool] = Field(alias="pinned", default=None)
	pinned_time: Optional[str] = Field(alias="pinned_time", default=None)
	star_time: Optional[str] = Field(alias="star_time", default=None)
	stared: Optional[bool] = Field(alias="stared", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass

class OperatorType(Enum):
	OperatorTypeOldEqual = "equal"
	OperatorTypeEqual = "equals"
	OperatorTypeNotEqual = "not_equals"
	OperatorTypeContains = "contains"
	OperatorTypeNotContains = "not_contains"
	OperatorTypeEmpty = "empty"
	OperatorTypeNotEmpty = "not_empty"
	OperatorTypeBefore = "before"
	OperatorTypeAfter = "after"
	OperatorTypeDateRange = "time_selector"
class OrganizationAccess(CNBBaseModel):
	access_role: Optional['constant.AccessRole'] = Field(alias="access_role", default=None)
	all_member_count: Optional[int] = Field(alias="all_member_count", default=None)
	all_sub_group_count: Optional[int] = Field(alias="all_sub_group_count", default=None)
	all_sub_mission_count: Optional[int] = Field(alias="all_sub_mission_count", default=None)
	all_sub_registry_count: Optional[int] = Field(alias="all_sub_registry_count", default=None)
	all_sub_repo_count: Optional[int] = Field(alias="all_sub_repo_count", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	domain: Optional[str] = Field(alias="domain", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	follow_count: Optional[int] = Field(alias="follow_count", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	has_sub_group: Optional[bool] = Field(alias="has_sub_group", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	member_count: Optional[int] = Field(alias="member_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	remark: Optional[str] = Field(alias="remark", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	sub_group_count: Optional[int] = Field(alias="sub_group_count", default=None)
	sub_mission_count: Optional[int] = Field(alias="sub_mission_count", default=None)
	sub_registry_count: Optional[int] = Field(alias="sub_registry_count", default=None)
	sub_repo_count: Optional[int] = Field(alias="sub_repo_count", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	wechat_mp: Optional[str] = Field(alias="wechat_mp", default=None)
	pass
class OrganizationSettingWithParent(CNBBaseModel):
	can_show_members: Optional[bool] = Field(alias="can_show_members", default=None)
	can_show_sub_groups: Optional[bool] = Field(alias="can_show_sub_groups", default=None)
	can_show_watermark: Optional[bool] = Field(alias="can_show_watermark", default=None)
	email_verification: Optional[str] = Field(alias="email_verification", default=None)
	group_protection: Optional[int] = Field(alias="group_protection", default=None)
	hide_members: Optional[int] = Field(alias="hide_members", default=None)
	hide_sub_groups: Optional[int] = Field(alias="hide_sub_groups", default=None)
	root_email_verification: Optional[str] = Field(alias="root_email_verification", default=None)
	root_group_protection: Optional[bool] = Field(alias="root_group_protection", default=None)
	root_values: Optional['organization.SettingValue'] = Field(alias="root_values", default=None)
	show_private_repo_watermark: Optional[int] = Field(alias="show_private_repo_watermark", default=None)
	values: Optional['organization.SettingValue'] = Field(alias="values", default=None)
	pass
class OrganizationUnion(CNBBaseModel):
	all_member_count: Optional[int] = Field(alias="all_member_count", default=None)
	all_sub_group_count: Optional[int] = Field(alias="all_sub_group_count", default=None)
	all_sub_mission_count: Optional[int] = Field(alias="all_sub_mission_count", default=None)
	all_sub_registry_count: Optional[int] = Field(alias="all_sub_registry_count", default=None)
	all_sub_repo_count: Optional[int] = Field(alias="all_sub_repo_count", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	domain: Optional[str] = Field(alias="domain", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	follow_count: Optional[int] = Field(alias="follow_count", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	has_sub_group: Optional[bool] = Field(alias="has_sub_group", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	member_count: Optional[int] = Field(alias="member_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	remark: Optional[str] = Field(alias="remark", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	sub_group_count: Optional[int] = Field(alias="sub_group_count", default=None)
	sub_mission_count: Optional[int] = Field(alias="sub_mission_count", default=None)
	sub_registry_count: Optional[int] = Field(alias="sub_registry_count", default=None)
	sub_repo_count: Optional[int] = Field(alias="sub_repo_count", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	wechat_mp: Optional[str] = Field(alias="wechat_mp", default=None)
	pass
class OutsideCollaboratorInRepo(CNBBaseModel):
	access_level: Optional['constant.AccessRole'] = Field(alias="access_level", default=None)
	avatar: Optional[str] = Field(alias="avatar", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	join_time: Optional[str] = Field(alias="join_time", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	pass

class OverwritePolicy(Enum):
	OverwritePolicyForbid = "forbid"
	OverwritePolicyAllow = "allow"
	OverwritePolicySnapshot = "snapshot"
class Pack(CNBBaseModel):
	expire_at: Optional[str] = Field(alias="expire_at", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	res_type: Optional['constant.ChargeResType'] = Field(alias="res_type", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	type: Optional['PackType'] = Field(alias="type", default=None)
	pass

class PackType(Enum):
	PackTypeUnknown = -1
	PackTypeFree = 0
	PackTypeSpecial = 1
	PackTypeOpenSource = 10
	PackTypeMigration = 20
	PackTypeBudget = 255
class Package(CNBBaseModel):
	count: Optional[int] = Field(alias="count", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	labels: Optional[list[str]] = Field(alias="labels", default=None)
	last_artifact_name: Optional[str] = Field(alias="last_artifact_name", default=None)
	last_pusher: Optional['LastPusher'] = Field(alias="last_pusher", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	package_type: Optional['PackageType'] = Field(alias="package_type", default=None)
	pull_count: Optional[int] = Field(alias="pull_count", default=None)
	recent_pull_count: Optional[int] = Field(alias="recent_pull_count", default=None)
	pass
class PackageDetail(CNBBaseModel):
	composer: Optional['CommonRegistryPackageDetail'] = Field(alias="composer", default=None)
	docker: Optional['ContainerPackageDetail'] = Field(alias="docker", default=None)
	helm: Optional['ChartPackageDetail'] = Field(alias="helm", default=None)
	maven: Optional['CommonRegistryPackageDetail'] = Field(alias="maven", default=None)
	npm: Optional['CommonRegistryPackageDetail'] = Field(alias="npm", default=None)
	nuget: Optional['CommonRegistryPackageDetail'] = Field(alias="nuget", default=None)
	ohpm: Optional['CommonRegistryPackageDetail'] = Field(alias="ohpm", default=None)
	pypi: Optional['CommonRegistryPackageDetail'] = Field(alias="pypi", default=None)
	pass

class PackageType(Enum):
	PackageTypeAll = "all"
	PackageTypeDocker = "docker"
	PackageTypeHelm = "helm"
	PackageTypeNpm = "npm"
	PackageTypeMaven = "maven"
	PackageTypeOhpm = "ohpm"
	PackageTypePypi = "pypi"
	PackageTypeComposer = "composer"
	PackageTypeNuget = "nuget"
class PipelineStatus(CNBBaseModel):
	duration: Optional[int] = Field(alias="duration", default=None)
	stages: Optional[list['Stage']] = Field(alias="stages", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	pass
class PullRequestData(CNBBaseModel):
	associated_issue_counts: Optional[int] = Field(alias="associated_issue_counts", default=None)
	build_status: Optional[str] = Field(alias="build_status", default=None)
	comment_counts: Optional[int] = Field(alias="comment_counts", default=None)
	created_time: Optional[str] = Field(alias="created_time", default=None)
	label: Optional[list['Label']] = Field(alias="label", default=None)
	mergeable_state: Optional[str] = Field(alias="mergeable_state", default=None)
	number: Optional[int] = Field(alias="number", default=None)
	pinned: Optional[bool] = Field(alias="pinned", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	slug_freeze: Optional[bool] = Field(alias="slug_freeze", default=None)
	src_ref: Optional[str] = Field(alias="src_ref", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	target_ref: Optional[str] = Field(alias="target_ref", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	todo_id: Optional[str] = Field(alias="todo_id", default=None)
	updated_time: Optional[str] = Field(alias="updated_time", default=None)
	pass
class Quota(CNBBaseModel):
	hard: Optional['storage'] = Field(alias="hard", default=None)
	pass
class QuotaRsp(CNBBaseModel):
	hard: Optional['storage'] = Field(alias="hard", default=None)
	repository_name: Optional[str] = Field(alias="repository_name", default=None)
	storage_per_project: Optional[str] = Field(alias="storage_per_project", default=None)
	used: Optional['storage'] = Field(alias="used", default=None)
	pass
class RankDetail(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	display_module: Optional['constant.RepoDisplayModule'] = Field(alias="display_module", default=None)
	fork_count: Optional[int] = Field(alias="fork_count", default=None)
	forked_from_repo: Optional['Slugs'] = Field(alias="forked_from_repo", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	languages: Optional['RepoLanguage'] = Field(alias="languages", default=None)
	last_update_nickname: Optional[str] = Field(alias="last_update_nickname", default=None)
	last_update_username: Optional[str] = Field(alias="last_update_username", default=None)
	last_updated_at: Optional['convert.NullTime'] = Field(alias="last_updated_at", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	mark_count: Optional[int] = Field(alias="mark_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	open_issue_count: Optional[int] = Field(alias="open_issue_count", default=None)
	open_pull_request_count: Optional[int] = Field(alias="open_pull_request_count", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	rank_value: Optional[int] = Field(alias="rank_value", default=None)
	second_languages: Optional['RepoLanguage'] = Field(alias="second_languages", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	star_count: Optional[int] = Field(alias="star_count", default=None)
	stared: Optional[bool] = Field(alias="stared", default=None)
	status: Optional['constant.RepoStatus'] = Field(alias="status", default=None)
	tags: Optional[list[object]] = Field(alias="tags", default=None)
	topics: Optional[str] = Field(alias="topics", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	web_url: Optional[str] = Field(alias="web_url", default=None)
	pass
class RankDetailWithIncr(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	display_module: Optional['constant.RepoDisplayModule'] = Field(alias="display_module", default=None)
	fork_count: Optional[int] = Field(alias="fork_count", default=None)
	forked_from_repo: Optional['Slugs'] = Field(alias="forked_from_repo", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	increase_fork: Optional[int] = Field(alias="increase_fork", default=None)
	increase_star: Optional[int] = Field(alias="increase_star", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	languages: Optional['RepoLanguage'] = Field(alias="languages", default=None)
	last_update_nickname: Optional[str] = Field(alias="last_update_nickname", default=None)
	last_update_username: Optional[str] = Field(alias="last_update_username", default=None)
	last_updated_at: Optional['convert.NullTime'] = Field(alias="last_updated_at", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	mark_count: Optional[int] = Field(alias="mark_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	open_issue_count: Optional[int] = Field(alias="open_issue_count", default=None)
	open_pull_request_count: Optional[int] = Field(alias="open_pull_request_count", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	second_languages: Optional['RepoLanguage'] = Field(alias="second_languages", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	star_count: Optional[int] = Field(alias="star_count", default=None)
	stared: Optional[bool] = Field(alias="stared", default=None)
	status: Optional['constant.RepoStatus'] = Field(alias="status", default=None)
	tags: Optional[list[object]] = Field(alias="tags", default=None)
	topics: Optional[str] = Field(alias="topics", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	web_url: Optional[str] = Field(alias="web_url", default=None)
	weight_score: Optional[int] = Field(alias="weight_score", default=None)
	pass
class Registry4User(CNBBaseModel):
	access: Optional['constant.AccessRole'] = Field(alias="access", default=None)
	artifact_policy: Optional[str] = Field(alias="artifact_policy", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	kind: Optional[str] = Field(alias="kind", default=None)
	last_push_time: Optional[str] = Field(alias="last_push_time", default=None)
	last_push_user: Optional['Users'] = Field(alias="last_push_user", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	overwrite_policy: Optional[str] = Field(alias="overwrite_policy", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pinned: Optional[bool] = Field(alias="pinned", default=None)
	pinned_time: Optional[str] = Field(alias="pinned_time", default=None)
	pkg_count: Optional[int] = Field(alias="pkg_count", default=None)
	star_time: Optional[str] = Field(alias="star_time", default=None)
	stared: Optional[bool] = Field(alias="stared", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	used_size: Optional[int] = Field(alias="used_size", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class RegistryLevelCleanPolicy(CNBBaseModel):
	artifact_num: Optional[int] = Field(alias="artifact_num", default=None)
	clean_policy: Optional['CleanPolicy'] = Field(alias="clean_policy", default=None)
	code_repo: Optional['TagCleanupPolicy'] = Field(alias="code_repo", default=None)
	common_registry: Optional['CommonRegistryCleanDetail'] = Field(alias="common_registry", default=None)
	status: Optional['CleanPolicyStatus'] = Field(alias="status", default=None)
	pass
class RegistryLevelOverwritePolicy(CNBBaseModel):
	code_repo: Optional['TagOverridePolicy'] = Field(alias="code_repo", default=None)
	common_registry: Optional['CommonRegistryOverwritePolicy'] = Field(alias="common_registry", default=None)
	overwrite_policy: Optional['OverwritePolicy'] = Field(alias="overwrite_policy", default=None)
	pass
class RegistryLevelPolicy(CNBBaseModel):
	clean_policy_detail: Optional['CommonRegistryCleanDetail'] = Field(alias="clean_policy_detail", default=None)
	code_repo: Optional['CodeRepoTagPolicy'] = Field(alias="code_repo", default=None)
	common_registry: Optional['CommonRegistryPolicy'] = Field(alias="common_registry", default=None)
	overwrite_policy: Optional['OverwritePolicy'] = Field(alias="overwrite_policy", default=None)
	version_policy: Optional['VersionPolicy'] = Field(alias="version_policy", default=None)
	pass
class RegistryPatch(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	pass
class RepoCoreHour(CNBBaseModel):
	ci_used_core_Sec: Optional[str] = Field(alias="ci_used_core_Sec", default=None)
	ci_used_core_hour: Optional[str] = Field(alias="ci_used_core_hour", default=None)
	code_used_core_Sec: Optional[str] = Field(alias="code_used_core_Sec", default=None)
	code_used_core_hour: Optional[str] = Field(alias="code_used_core_hour", default=None)
	pass
class RepoLanguage(CNBBaseModel):
	color: Optional[str] = Field(alias="color", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	pass
class RepoPatch(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	topics: Optional[list[str]] = Field(alias="topics", default=None)
	pass
class RepoRank(CNBBaseModel):
	rank_type: Optional[str] = Field(alias="rank_type", default=None)
	repo_detail: Optional[list['RankDetail']] = Field(alias="repo_detail", default=None)
	top_n: Optional[int] = Field(alias="top_n", default=None)
	pass
class RepoStarUsers(CNBBaseModel):
	my_follow_count: Optional[int] = Field(alias="my_follow_count", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	users: Optional[list['StarUser']] = Field(alias="users", default=None)
	pass
class RepoVolume(CNBBaseModel):
	is_deleted: Optional[bool] = Field(alias="is_deleted", default=None)
	resource_id: Optional[str] = Field(alias="resource_id", default=None)
	resource_type: Optional['constant.SlugType'] = Field(alias="resource_type", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	volume: Optional[str] = Field(alias="volume", default=None)
	pass
class Repos4User(CNBBaseModel):
	access: Optional['constant.AccessRole'] = Field(alias="access", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	display_module: Optional['constant.RepoDisplayModule'] = Field(alias="display_module", default=None)
	fork_count: Optional[int] = Field(alias="fork_count", default=None)
	forked_from_repo: Optional['Slugs'] = Field(alias="forked_from_repo", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	languages: Optional['RepoLanguage'] = Field(alias="languages", default=None)
	last_update_nickname: Optional[str] = Field(alias="last_update_nickname", default=None)
	last_update_username: Optional[str] = Field(alias="last_update_username", default=None)
	last_updated_at: Optional['convert.NullTime'] = Field(alias="last_updated_at", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	mark_count: Optional[int] = Field(alias="mark_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	open_issue_count: Optional[int] = Field(alias="open_issue_count", default=None)
	open_pull_request_count: Optional[int] = Field(alias="open_pull_request_count", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pinned: Optional[bool] = Field(alias="pinned", default=None)
	pinned_time: Optional[str] = Field(alias="pinned_time", default=None)
	second_languages: Optional['RepoLanguage'] = Field(alias="second_languages", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	star_count: Optional[int] = Field(alias="star_count", default=None)
	star_time: Optional[str] = Field(alias="star_time", default=None)
	stared: Optional[bool] = Field(alias="stared", default=None)
	status: Optional['constant.RepoStatus'] = Field(alias="status", default=None)
	tags: Optional[list[object]] = Field(alias="tags", default=None)
	topics: Optional[str] = Field(alias="topics", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	web_url: Optional[str] = Field(alias="web_url", default=None)
	pass
class Repos4UserBase(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	display_module: Optional['constant.RepoDisplayModule'] = Field(alias="display_module", default=None)
	fork_count: Optional[int] = Field(alias="fork_count", default=None)
	forked_from_repo: Optional['Slugs'] = Field(alias="forked_from_repo", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	languages: Optional['RepoLanguage'] = Field(alias="languages", default=None)
	last_update_nickname: Optional[str] = Field(alias="last_update_nickname", default=None)
	last_update_username: Optional[str] = Field(alias="last_update_username", default=None)
	last_updated_at: Optional['convert.NullTime'] = Field(alias="last_updated_at", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	mark_count: Optional[int] = Field(alias="mark_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	open_issue_count: Optional[int] = Field(alias="open_issue_count", default=None)
	open_pull_request_count: Optional[int] = Field(alias="open_pull_request_count", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	second_languages: Optional['RepoLanguage'] = Field(alias="second_languages", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	star_count: Optional[int] = Field(alias="star_count", default=None)
	status: Optional['constant.RepoStatus'] = Field(alias="status", default=None)
	tags: Optional[list[object]] = Field(alias="tags", default=None)
	topics: Optional[str] = Field(alias="topics", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	web_url: Optional[str] = Field(alias="web_url", default=None)
	pass
class ResTypeSummary(CNBBaseModel):
	avg_vol: Optional[int] = Field(alias="avg_vol", default=None)
	fee_vol: Optional[int] = Field(alias="fee_vol", default=None)
	vol_in_base_unit: Optional[int] = Field(alias="vol_in_base_unit", default=None)
	pass
class ResourceBindInfo(CNBBaseModel):
	code: Optional[str] = Field(alias="code", default=None)
	expire_at: Optional[str] = Field(alias="expire_at", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	nick: Optional[str] = Field(alias="nick", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	url: Optional[str] = Field(alias="url", default=None)
	pass
class ResourceGroup(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	domain: Optional[str] = Field(alias="domain", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	remark: Optional[str] = Field(alias="remark", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	wechat_mp: Optional[str] = Field(alias="wechat_mp", default=None)
	pass
class ResourceMission(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class ResourceRegistry(CNBBaseModel):
	artifact_policy: Optional[str] = Field(alias="artifact_policy", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	kind: Optional[str] = Field(alias="kind", default=None)
	last_push_time: Optional[str] = Field(alias="last_push_time", default=None)
	last_push_user: Optional['Users'] = Field(alias="last_push_user", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	overwrite_policy: Optional[str] = Field(alias="overwrite_policy", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pkg_count: Optional[int] = Field(alias="pkg_count", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	used_size: Optional[int] = Field(alias="used_size", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class ResourceRepo(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[int] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	status: Optional['constant.RepoStatus'] = Field(alias="status", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	visibility_level: Optional['constant.Visibility'] = Field(alias="visibility_level", default=None)
	pass
class Resources(CNBBaseModel):
	group: Optional['ResourceGroup'] = Field(alias="group", default=None)
	mission: Optional['ResourceMission'] = Field(alias="mission", default=None)
	registry: Optional['ResourceRegistry'] = Field(alias="registry", default=None)
	repo: Optional['ResourceRepo'] = Field(alias="repo", default=None)
	type: Optional['constant.SlugType'] = Field(alias="type", default=None)
	pass
class SearchResponse_any(CNBBaseModel):
	resource_type: Optional['constant.SearchResourceType'] = Field(alias="resource_type", default=None)
	results: Optional[object] = Field(alias="results", default=None)
	pass
class SlugMemberCount(CNBBaseModel):
	inherited_member_count: Optional[int] = Field(alias="inherited_member_count", default=None)
	member_count: Optional[int] = Field(alias="member_count", default=None)
	outside_collaborator_count: Optional[int] = Field(alias="outside_collaborator_count", default=None)
	pass
class Slugs(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	resource_id: Optional[int] = Field(alias="resource_id", default=None)
	resource_type: Optional['constant.SlugType'] = Field(alias="resource_type", default=None)
	root_freeze: Optional[bool] = Field(alias="root_freeze", default=None)
	root_id: Optional[int] = Field(alias="root_id", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class SpecialAmount(CNBBaseModel):
	compute_build_corehour: Optional[int] = Field(alias="compute_build_corehour", default=None)
	compute_build_desc: Optional[str] = Field(alias="compute_build_desc", default=None)
	compute_build_expire: Optional[str] = Field(alias="compute_build_expire", default=None)
	compute_develop_corehour: Optional[int] = Field(alias="compute_develop_corehour", default=None)
	compute_develop_desc: Optional[str] = Field(alias="compute_develop_desc", default=None)
	compute_develop_expire: Optional[str] = Field(alias="compute_develop_expire", default=None)
	storage_git_desc: Optional[str] = Field(alias="storage_git_desc", default=None)
	storage_git_expire: Optional[str] = Field(alias="storage_git_expire", default=None)
	storage_git_gib: Optional[int] = Field(alias="storage_git_gib", default=None)
	storage_object_desc: Optional[str] = Field(alias="storage_object_desc", default=None)
	storage_object_expire: Optional[str] = Field(alias="storage_object_expire", default=None)
	storage_object_gib: Optional[int] = Field(alias="storage_object_gib", default=None)
	pass
class Stage(CNBBaseModel):
	duration: Optional[int] = Field(alias="duration", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	pass
class StarUser(CNBBaseModel):
	avatar: Optional[str] = Field(alias="avatar", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	is_follow: Optional[bool] = Field(alias="is_follow", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	stared_at: Optional[str] = Field(alias="stared_at", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	pass
class StartBuildReq(CNBBaseModel):
	branch: Optional[str] = Field(alias="branch", default=None)
	config: Optional[str] = Field(alias="config", default=None)
	env: Optional[Dict[str, 'str']] = Field(alias="env", default=None)
	event: Optional[str] = Field(alias="event", default=None)
	sha: Optional[str] = Field(alias="sha", default=None)
	sync: Optional[str] = Field(alias="sync", default=None)
	tag: Optional[str] = Field(alias="tag", default=None)
	pass
class Status(CNBBaseModel):
	budget_status: Optional['constant.BudgetSts'] = Field(alias="budget_status", default=None)
	threshold: Optional[Dict[str, 'Threshold']] = Field(alias="threshold", default=None)
	pass
class SyncUserData(CNBBaseModel):
	flag: Optional[bool] = Field(alias="flag", default=None)
	pass
class SystemAcceleration(CNBBaseModel):
	priority: Optional[int] = Field(alias="priority", default=None)
	url: Optional[str] = Field(alias="url", default=None)
	user_name: Optional[str] = Field(alias="user_name", default=None)
	pass
class Tag(CNBBaseModel):
	composer: Optional[list['CommonRegistryTag']] = Field(alias="composer", default=None)
	docker: Optional[list['ContainerTag']] = Field(alias="docker", default=None)
	helm: Optional[list['ChartTag']] = Field(alias="helm", default=None)
	maven: Optional[list['CommonRegistryTag']] = Field(alias="maven", default=None)
	npm: Optional[list['CommonRegistryTag']] = Field(alias="npm", default=None)
	nuget: Optional[list['CommonRegistryTag']] = Field(alias="nuget", default=None)
	ohpm: Optional[list['CommonRegistryTag']] = Field(alias="ohpm", default=None)
	package: Optional[str] = Field(alias="package", default=None)
	pypi: Optional[list['CommonRegistryTag']] = Field(alias="pypi", default=None)
	pass
class TagCleanupPolicy(CNBBaseModel):
	disabled: Optional[bool] = Field(alias="disabled", default=None)
	is_retain_latest: Optional[bool] = Field(alias="is_retain_latest", default=None)
	is_retain_pulled_in_7_days: Optional[bool] = Field(alias="is_retain_pulled_in_7_days", default=None)
	latest_pushed_k: Optional[int] = Field(alias="latest_pushed_k", default=None)
	pass
class TagDetail(CNBBaseModel):
	composer: Optional['CommonRegistryTagDetail'] = Field(alias="composer", default=None)
	docker: Optional['ContainerTagDetail'] = Field(alias="docker", default=None)
	helm: Optional['ChartTagDetail'] = Field(alias="helm", default=None)
	maven: Optional['CommonRegistryTagDetail'] = Field(alias="maven", default=None)
	npm: Optional['CommonRegistryTagDetail'] = Field(alias="npm", default=None)
	nuget: Optional['CommonRegistryTagDetail'] = Field(alias="nuget", default=None)
	ohpm: Optional['CommonRegistryTagDetail'] = Field(alias="ohpm", default=None)
	pypi: Optional['CommonRegistryTagDetail'] = Field(alias="pypi", default=None)
	pass
class TagOverridePolicy(CNBBaseModel):
	is_forbid_prefixed_sem_ver: Optional[bool] = Field(alias="is_forbid_prefixed_sem_ver", default=None)
	is_forbid_sem_ver: Optional[bool] = Field(alias="is_forbid_sem_ver", default=None)
	pass

class Threshold(Enum):
	ThresholdNormal = "normal"
	Threshold80 = "warning-80"
	ThresholdExceed = "exceed"
class TimeVolume(CNBBaseModel):
	time_rfc3339: Optional[str] = Field(alias="time_rfc3339", default=None)
	volume: Optional[str] = Field(alias="volume", default=None)
	pass
class TodoTotal(CNBBaseModel):
	issue_complete_count: Optional[int] = Field(alias="issue_complete_count", default=None)
	issue_pending_count: Optional[int] = Field(alias="issue_pending_count", default=None)
	pull_request_complete_count: Optional[int] = Field(alias="pull_request_complete_count", default=None)
	pull_request_pending_count: Optional[int] = Field(alias="pull_request_pending_count", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	pass
class TransferSlugReq(CNBBaseModel):
	source: Optional[str] = Field(alias="source", default=None)
	target: Optional[str] = Field(alias="target", default=None)
	pass
class UpdateGroupAvatarReq(CNBBaseModel):
	url: Optional[str] = Field(alias="url", default=None)
	pass
class UpdateGroupReq(CNBBaseModel):
	description: Optional[str] = Field(alias="description", default=None)
	domain: Optional[str] = Field(alias="domain", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	remark: Optional[str] = Field(alias="remark", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	wechat_mp: Optional[str] = Field(alias="wechat_mp", default=None)
	pass
class UpdateMembersRequest(CNBBaseModel):
	access_level: Optional[str] = Field(alias="access_level", default=None)
	is_outside_collaborator: Optional[bool] = Field(alias="is_outside_collaborator", default=None)
	pass
class UploadAssetsResponse(CNBBaseModel):
	assets: Optional['Assets'] = Field(alias="assets", default=None)
	form: Optional[Dict[str, 'str']] = Field(alias="form", default=None)
	token: Optional[str] = Field(alias="token", default=None)
	upload_url: Optional[str] = Field(alias="upload_url", default=None)
	pass
class UploadRequestParams(CNBBaseModel):
	name: Optional[str] = Field(alias="name", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	pass
class UserBindInfo(CNBBaseModel):
	code: Optional[str] = Field(alias="code", default=None)
	expire_at: Optional[str] = Field(alias="expire_at", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	nick: Optional[str] = Field(alias="nick", default=None)
	url: Optional[str] = Field(alias="url", default=None)
	user: Optional[str] = Field(alias="user", default=None)
	pass
class UserEmailPayload(CNBBaseModel):
	email: Optional[str] = Field(alias="email", default=None)
	pass

class UserEmailType(Enum):
	UserEmailForGit = "git"
	UserEmailForContact = "contact"
class UserEmailWithCodePayload(CNBBaseModel):
	code: Optional[str] = Field(alias="code", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	pass
class UserEmailWithTypePayload(CNBBaseModel):
	email: Optional[str] = Field(alias="email", default=None)
	type: Optional['UserEmailType'] = Field(alias="type", default=None)
	pass
class UserEmails(CNBBaseModel):
	contact_email: Optional[str] = Field(alias="contact_email", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	emails: Optional[list[str]] = Field(alias="emails", default=None)
	system_email: Optional[str] = Field(alias="system_email", default=None)
	system_email_contact: Optional[bool] = Field(alias="system_email_contact", default=None)
	pass
class UserFollowResult(CNBBaseModel):
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	is_following: Optional[bool] = Field(alias="is_following", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	pass
class UserForSelf(CNBBaseModel):
	avatar: Optional[str] = Field(alias="avatar", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	editable: Optional['constant.UserEditable'] = Field(alias="editable", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	next_updated_name_at: Optional[str] = Field(alias="next_updated_name_at", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	updated_name_at: Optional[str] = Field(alias="updated_name_at", default=None)
	updated_nick_at: Optional[str] = Field(alias="updated_nick_at", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	pass
class Users(CNBBaseModel):
	avatar: Optional[str] = Field(alias="avatar", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	pass
class UsersIdentity(CNBBaseModel):
	phone: Optional[str] = Field(alias="phone", default=None)
	pass
class UsersLangPayload(CNBBaseModel):
	language: Optional[str] = Field(alias="language", default=None)
	pass
class UsersResult(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	appreciate_status: Optional[int] = Field(alias="appreciate_status", default=None)
	avatar: Optional[str] = Field(alias="avatar", default=None)
	bio: Optional[str] = Field(alias="bio", default=None)
	company: Optional[str] = Field(alias="company", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	follow_count: Optional[int] = Field(alias="follow_count", default=None)
	follow_mission_count: Optional[int] = Field(alias="follow_mission_count", default=None)
	follow_repo_count: Optional[int] = Field(alias="follow_repo_count", default=None)
	follower_count: Optional[int] = Field(alias="follower_count", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	gender: Optional[int] = Field(alias="gender", default=None)
	group_count: Optional[int] = Field(alias="group_count", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	is_following: Optional[bool] = Field(alias="is_following", default=None)
	location: Optional[str] = Field(alias="location", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	mission_count: Optional[int] = Field(alias="mission_count", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	registry_count: Optional[int] = Field(alias="registry_count", default=None)
	repo_count: Optional[int] = Field(alias="repo_count", default=None)
	reward_amount: Optional[int] = Field(alias="reward_amount", default=None)
	reward_count: Optional[int] = Field(alias="reward_count", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	stars_count: Optional[int] = Field(alias="stars_count", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	wechat_mp: Optional[str] = Field(alias="wechat_mp", default=None)
	wechat_mp_qrcode: Optional[str] = Field(alias="wechat_mp_qrcode", default=None)
	pass
class UsersResultForSelf(CNBBaseModel):
	address: Optional[str] = Field(alias="address", default=None)
	appreciate_status: Optional[int] = Field(alias="appreciate_status", default=None)
	avatar: Optional[str] = Field(alias="avatar", default=None)
	bio: Optional[str] = Field(alias="bio", default=None)
	company: Optional[str] = Field(alias="company", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	editable: Optional['constant.UserEditable'] = Field(alias="editable", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	follow_count: Optional[int] = Field(alias="follow_count", default=None)
	follow_mission_count: Optional[int] = Field(alias="follow_mission_count", default=None)
	follow_repo_count: Optional[int] = Field(alias="follow_repo_count", default=None)
	follower_count: Optional[int] = Field(alias="follower_count", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	gender: Optional[int] = Field(alias="gender", default=None)
	group_count: Optional[int] = Field(alias="group_count", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	language: Optional[str] = Field(alias="language", default=None)
	last_login_at: Optional[str] = Field(alias="last_login_at", default=None)
	last_login_ip: Optional[str] = Field(alias="last_login_ip", default=None)
	location: Optional[str] = Field(alias="location", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	mission_count: Optional[int] = Field(alias="mission_count", default=None)
	next_updated_name_at: Optional[str] = Field(alias="next_updated_name_at", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	registry_count: Optional[int] = Field(alias="registry_count", default=None)
	repo_count: Optional[int] = Field(alias="repo_count", default=None)
	reward_amount: Optional[int] = Field(alias="reward_amount", default=None)
	reward_count: Optional[int] = Field(alias="reward_count", default=None)
	site: Optional[str] = Field(alias="site", default=None)
	stars_count: Optional[int] = Field(alias="stars_count", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	updated_name_at: Optional[str] = Field(alias="updated_name_at", default=None)
	updated_nick_at: Optional[str] = Field(alias="updated_nick_at", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	wechat_mp: Optional[str] = Field(alias="wechat_mp", default=None)
	wechat_mp_qrcode: Optional[str] = Field(alias="wechat_mp_qrcode", default=None)
	pass
class UsersWithAccessLevelInSlug(CNBBaseModel):
	access_level: Optional['constant.AccessRole'] = Field(alias="access_level", default=None)
	avatar: Optional[str] = Field(alias="avatar", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	email_verification: Optional[str] = Field(alias="email_verification", default=None)
	freeze: Optional[bool] = Field(alias="freeze", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	inviter: Optional['Users'] = Field(alias="inviter", default=None)
	join_time: Optional[str] = Field(alias="join_time", default=None)
	lock: Optional[bool] = Field(alias="lock", default=None)
	nickname: Optional[str] = Field(alias="nickname", default=None)
	type: Optional['constant.UserType'] = Field(alias="type", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	verified: Optional[int] = Field(alias="verified", default=None)
	verified_expire_in: Optional[str] = Field(alias="verified_expire_in", default=None)
	pass

class VersionPolicy(Enum):
	VersionPolicyAll = "all"
	VersionPolicySnapshot = "snapshot"
	VersionPolicyRelease = "release"
class VolumeUsed(CNBBaseModel):
	pass
class WorkspaceDeleteReq(CNBBaseModel):
	pipelineId: Optional[str] = Field(alias="pipelineId", default=None)
	pass
class WorkspaceDeleteResult(CNBBaseModel):
	code: Optional[int] = Field(alias="code", default=None)
	message: Optional[str] = Field(alias="message", default=None)
	pass
class WorkspaceDetailResult(CNBBaseModel):
	cursor: Optional[str] = Field(alias="cursor", default=None)
	vscode: Optional[str] = Field(alias="vscode", default=None)
	webide: Optional[str] = Field(alias="webide", default=None)
	pass
class WorkspaceInfo(CNBBaseModel):
	branch: Optional[str] = Field(alias="branch", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	create_time: Optional[str] = Field(alias="create_time", default=None)
	duration: Optional[int] = Field(alias="duration", default=None)
	file_count: Optional[int] = Field(alias="file_count", default=None)
	file_list: Optional[str] = Field(alias="file_list", default=None)
	latest_sha: Optional[str] = Field(alias="latest_sha", default=None)
	pipeline_id: Optional[str] = Field(alias="pipeline_id", default=None)
	remote_stash_count: Optional[int] = Field(alias="remote_stash_count", default=None)
	repo_url: Optional[str] = Field(alias="repo_url", default=None)
	restore_id: Optional[str] = Field(alias="restore_id", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	sn: Optional[str] = Field(alias="sn", default=None)
	ssh: Optional[bool] = Field(alias="ssh", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	workspace: Optional[str] = Field(alias="workspace", default=None)
	pass
class WorkspaceListResult(CNBBaseModel):
	hasMore: Optional[bool] = Field(alias="hasMore", default=None)
	list_: Optional[list['WorkspaceInfo']] = Field(alias="list", default=None)
	pageInfo: Optional['WorkspacePageInfo'] = Field(alias="pageInfo", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	pass
class WorkspacePageInfo(CNBBaseModel):
	page: Optional[int] = Field(alias="page", default=None)
	pageSize: Optional[int] = Field(alias="pageSize", default=None)
	pass
class WxJsSdkSign(CNBBaseModel):
	appid: Optional[str] = Field(alias="appid", default=None)
	noncestr: Optional[str] = Field(alias="noncestr", default=None)
	sign: Optional[str] = Field(alias="sign", default=None)
	timestamp: Optional[int] = Field(alias="timestamp", default=None)
	pass
class storage(CNBBaseModel):
	storage: Optional[int] = Field(alias="storage", default=None)
	pass
