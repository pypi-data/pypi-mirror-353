[project]
name = "mesh2scattering"
version = "1.0.2"
description = "Numerical calculation of surface scattering."
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.9"
keywords = [
    "acoustics",
    "pyfar",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    'numpy>=1.14.0',
    'scipy>=1.5.0',
    'matplotlib',
    'pyfar<0.8.0',
    'psutil',
    'sofar',
    'trimesh',
    'pooch',
]

[project.optional-dependencies]
deploy = [
    "twine",
    "wheel",
    "build",
    "setuptools",
    "bump-my-version",
    ]
tests = [
    "pytest",
    "pytest-cov",
    "watchdog",
    "ruff==0.9.8",
    "coverage",
    "nbmake>=0.7.0",
]
docs = [
    "sphinx",
    "autodocsumm>=0.2.14",
    "pydata-sphinx-theme",
    "sphinx_mdinclude",
    "sphinx-design",
    "sphinx-favicon",
    "sphinx-reredirects",
    "nbsphinx",
    "sphinx_gallery",
    "nbsphinx_link",
    "ipython",
]
dev = ["mesh2scattering[deploy,tests,docs]"]

[project.urls]
Tracker = "https://github.com/ahms5/mesh2scattering/issues"
Documentation = "https://mesh2scattering.readthedocs.io/"
Download = "https://pypi.org/project/mesh2scattering/"
Source = "https://github.com/ahms5/mesh2scattering"
Changelog = "https://github.com/ahms5/mesh2scattering/blob/master/CHANGELOG.md"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
find = { }  # Scan the project directory with the default parameters

[tool.setuptools]
# ...
# By default, include-package-data is true in pyproject.toml, so you do
# NOT have to specify this line.
include-package-data = true

[tool.setuptools.package-data]
mesh2scattering = [
    "numcalc/bin/readme.txt",
    "numcalc/src/Makefile",
    "numcalc/src/*.cpp",
    "numcalc/src/*.h",
    ]

[tool.ruff]
exclude = [
    ".git",
    "docs",
]
line-length = 79
lint.ignore = [
    "D200",   # One-line docstring should fit on one line with quotes
    "D205",   # 1 blank line required between summary line and description
]
lint.select = [
    "B",      # bugbear extension
    "ARG",    # Remove unused function/method arguments
    "C4",     # Check for common security issues
    "E",      # PEP8 errors
    "F",      # Pyflakes
    "W",      # PEP8 warnings
    "D",      # Docstring guidelines
    "NPY",    # Check all numpy related deprecations
    "D417",   # Missing argument descriptions in the docstring
    "PT",     # Pytest style
    "A",      # Avoid builtin function and type shadowing
    "ERA",    # No commented out code
    "NPY",    # Check all numpy related deprecations
    "COM",    # trailing comma rules
    "I002",   # missing required import
    "TID252", # Use absolute over relative imports
    "FIX",    # Code should not contain FIXME, TODO, etc
]

# Ignore missing docstrings in tests
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100",
    "D101",
    "D103",
    "D104",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.bumpversion]
current_version = "1.0.2"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = true
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = '\nversion = "{current_version}"'
replace = '\nversion = "{new_version}"'

[[tool.bumpversion.files]]
filename = "mesh2scattering/__init__.py"
search = "__version__ = '{current_version}'"
replace = "__version__ = '{new_version}'"
