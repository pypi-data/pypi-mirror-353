"use strict";(self.webpackChunk_jupyterlite_ai=self.webpackChunk_jupyterlite_ai||[]).push([[436],{67436:(t,e,o)=>{o.d(e,{default:()=>m});var s=o(65606);const i=[429,500,502,503,504],a=Promise.resolve(globalThis.fetch??o.e(92).then(o.t.bind(o,43092,23)).then((t=>t.default)));class n extends Error{constructor(t){super(t),this.name="MistralAPIError"}}function r(t){const e=new AbortController;return t.forEach((t=>{t&&(t.addEventListener("abort",(()=>{e.abort(t.reason)}),{once:!0}),t.aborted&&e.abort(t.reason))})),e.signal}const m=class{constructor(t=s.env.MISTRAL_API_KEY,e="https://api.mistral.ai",o=5,i=120){this.endpoint=e,this.apiKey=t,this.maxRetries=o,this.timeout=i,this.endpoint.indexOf("inference.azure.com")&&(this.modelDefault="mistral")}async _fetch(...t){return(await a)(...t)}_request=async function(t,e,o,s){const a=`${this.endpoint}/${e}`,m={method:t,headers:{"User-Agent":"mistral-client-js/0.3.0",Accept:o?.stream?"text/event-stream":"application/json","Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:"get"!==t?JSON.stringify(o):null,signal:r([AbortSignal.timeout(1e3*this.timeout),s])};for(let t=0;t<this.maxRetries;t++)try{const e=await this._fetch(a,m);if(e.ok){if(o?.stream){if(void 0===e.body.getReader)return e.body;{const t=e.body.getReader();return async function*(){try{for(;;){const{done:e,value:o}=await t.read();if(e)return;yield o}}finally{t.releaseLock()}}()}}return await e.json()}if(!i.includes(e.status))throw new n(`HTTP error! status: ${e.status} Response: \n${await e.text()}`);console.debug(`Retrying request on response status: ${e.status}`,`Response: ${await e.text()}`,`Attempt: ${t+1}`),await new Promise((e=>setTimeout(e,500*Math.pow(2,t+1))))}catch(e){if(console.error(`Request failed: ${e.message}`),"MistralAPIError"===e.name)throw e;if(t===this.maxRetries-1)throw e;await new Promise((e=>setTimeout(e,500*Math.pow(2,t+1))))}throw new Error("Max retries reached")};_makeChatCompletionRequest=function(t,e,o,s,i,a,r,m,d,u,l,c){if(!t&&!this.modelDefault)throw new n("You must provide a model name");return{model:t??this.modelDefault,messages:e,tools:o??void 0,temperature:s??void 0,max_tokens:i??void 0,top_p:a??void 0,random_seed:r??void 0,stream:m??void 0,safe_prompt:(d||u)??void 0,tool_choice:l??void 0,response_format:c??void 0}};_makeCompletionRequest=function(t,e,o,s,i,a,r,m,d){if(!t&&!this.modelDefault)throw new n("You must provide a model name");return{model:t??this.modelDefault,prompt:e,suffix:o??void 0,temperature:s??void 0,max_tokens:i??void 0,top_p:a??void 0,random_seed:r??void 0,stop:m??void 0,stream:d??void 0}};listModels=async function(){return await this._request("get","v1/models")};chat=async function({model:t,messages:e,tools:o,temperature:s,maxTokens:i,topP:a,randomSeed:n,safeMode:r,safePrompt:m,toolChoice:d,responseFormat:u},{signal:l}={}){const c=this._makeChatCompletionRequest(t,e,o,s,i,a,n,!1,r,m,d,u);return await this._request("post","v1/chat/completions",c,l)};chatStream=async function*({model:t,messages:e,tools:o,temperature:s,maxTokens:i,topP:a,randomSeed:n,safeMode:r,safePrompt:m,toolChoice:d,responseFormat:u},{signal:l}={}){const c=this._makeChatCompletionRequest(t,e,o,s,i,a,n,!0,r,m,d,u),p=await this._request("post","v1/chat/completions",c,l);let f="";const h=new TextDecoder;for await(const t of p){let e;for(f+=h.decode(t,{stream:!0});-1!==(e=f.indexOf("\n"));){const t=f.substring(0,e);if(f=f.substring(e+1),t.startsWith("data:")){const e=t.substring(6).trim();"[DONE]"!==e&&(yield JSON.parse(e))}}}};embeddings=async function({model:t,input:e}){const o={model:t,input:e};return await this._request("post","v1/embeddings",o)};completion=async function({model:t,prompt:e,suffix:o,temperature:s,maxTokens:i,topP:a,randomSeed:n,stop:r},{signal:m}={}){const d=this._makeCompletionRequest(t,e,o,s,i,a,n,r,!1);return await this._request("post","v1/fim/completions",d,m)};completionStream=async function*({model:t,prompt:e,suffix:o,temperature:s,maxTokens:i,topP:a,randomSeed:n,stop:r},{signal:m}={}){const d=this._makeCompletionRequest(t,e,o,s,i,a,n,r,!0),u=await this._request("post","v1/fim/completions",d,m);let l="";const c=new TextDecoder;for await(const t of u){let e;for(l+=c.decode(t,{stream:!0});-1!==(e=l.indexOf("\n"));){const t=l.substring(0,e);if(l=l.substring(e+1),t.startsWith("data:")){const e=t.substring(6).trim();"[DONE]"!==e&&(yield JSON.parse(e))}}}}}}}]);