# Generated by Django 4.2.20 on 2025-06-04 15:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Updated At')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(blank=True, help_text='The first name of the contact', max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, help_text='The last name of the contact', max_length=50, verbose_name='Last Name')),
                ('job_title', models.CharField(blank=True, help_text='The job title of the contact', max_length=50, verbose_name='Job Title')),
                ('company_name', models.CharField(blank=True, help_text='The name of the company where the contact works', max_length=50, verbose_name='Company Name')),
                ('permission_to_send', models.CharField(choices=[('explicit', 'Explicit'), ('implicit', 'Implicit'), ('not_set', 'Not set'), ('pending_confirmation', 'Pending confirmation'), ('temp_hold', 'Temporary hold'), ('unsubscribed', 'Unsubscribed')], default='implicit', help_text='Identifies the type of permission that the Constant Contact account has to send email to the contact', max_length=20, verbose_name='Permission to Send')),
                ('create_source', models.CharField(choices=[('Contact', 'Contact'), ('Account', 'Account')], default='Account', help_text='Describes who added the contact', max_length=7, verbose_name='Create Source')),
                ('update_source', models.CharField(choices=[('Contact', 'Contact'), ('Account', 'Account')], default='Account', help_text='Identifies who last updated the contact', max_length=7, verbose_name='Update Source')),
                ('opt_out_source', models.CharField(blank=True, choices=[('Contact', 'Contact'), ('Account', 'Account')], default='', editable=False, help_text='Handled by ConstantContact', max_length=7, verbose_name='Opted Out By')),
                ('opt_out_date', models.DateTimeField(blank=True, null=True, verbose_name='Opted Out On')),
                ('opt_out_reason', models.CharField(blank=True, max_length=255, verbose_name='Opt Out Reason')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Updated At')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.CharField(help_text='For internal use only', max_length=255, verbose_name='Description')),
                ('favorite', models.BooleanField(default=False, help_text='Mark the list as a favorite', verbose_name='Favorite')),
            ],
            options={
                'verbose_name': 'Contact List',
                'verbose_name_plural': 'Contact Lists',
                'ordering': ('-favorite', 'name'),
            },
        ),
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Updated At')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('label', models.CharField(help_text='The display name for the custom_field shown in the UI as free-form text', max_length=50, verbose_name='Label')),
                ('type', models.CharField(choices=[('string', 'Text'), ('date', 'Date')], default='string', help_text='Specifies the type of value the custom_field field accepts', max_length=6, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Custom Field',
                'verbose_name_plural': 'Custom Fields',
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Updated At')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('name', models.CharField(max_length=80, verbose_name='Name')),
                ('scheduled_datetime', models.DateTimeField(blank=True, help_text='Leave blank to unschedule', null=True, verbose_name='Scheduled')),
                ('send_preview', models.BooleanField(default=False, verbose_name='Send Preview')),
                ('current_status', models.CharField(choices=[('NONE', 'Processing'), ('DRAFT', 'Draft'), ('SCHEDULED', 'Scheduled'), ('EXECUTING', 'Executing'), ('DONE', 'Sent'), ('ERROR', 'Error'), ('REMOVED', 'Removed')], default='DRAFT', max_length=20, verbose_name='Current Status')),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'ordering': ('-created_at', '-scheduled_datetime'),
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('access_token', models.TextField(verbose_name='Access Token')),
                ('refresh_token', models.CharField(max_length=50, verbose_name='Refresh Token')),
                ('token_type', models.CharField(choices=[('Bearer', 'Bearer')], default='Bearer', max_length=6, verbose_name='Token Type')),
                ('scope', models.CharField(max_length=255, verbose_name='Scope')),
                ('expires_in', models.IntegerField(default=86400, verbose_name='Expires In')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ContactStreetAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Updated At')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('kind', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('other', 'Other')], help_text='Describes the type of address', max_length=5, verbose_name='Kind')),
                ('street', models.CharField(help_text='Number and street of the address', max_length=255, verbose_name='Street')),
                ('city', models.CharField(help_text='The name of the city where the contact lives', max_length=50, verbose_name='City')),
                ('state', models.CharField(help_text='The name of the state or province where the contact lives', max_length=50, verbose_name='State')),
                ('postal_code', models.CharField(help_text='The zip or postal code of the contact', max_length=50, verbose_name='Postal Code')),
                ('country', models.CharField(help_text='The name of the country where the contact lives', max_length=50, verbose_name='Country')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='street_addresses', to='django_ctct.contact', verbose_name='Contact')),
            ],
            options={
                'verbose_name': 'Street Address',
                'verbose_name_plural': 'Street Addresses',
            },
        ),
        migrations.CreateModel(
            name='ContactPhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Updated At')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('kind', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('mobile', 'Mobile'), ('other', 'Other')], help_text='Identifies the type of phone number', max_length=6, verbose_name='Kind')),
                ('phone_number', models.CharField(help_text="The contact's phone number", max_length=25, verbose_name='Phone Number')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='django_ctct.contact', verbose_name='Contact')),
            ],
            options={
                'verbose_name': 'Phone Number',
                'verbose_name_plural': 'Phone Numbers',
            },
        ),
        migrations.CreateModel(
            name='ContactNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('content', models.CharField(help_text='The content for the note', max_length=2000, verbose_name='Content')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='django_ctct.contact', verbose_name='Contact')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='ContactCustomField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='Value')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_fields', to='django_ctct.contact', verbose_name='Contact')),
                ('custom_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='django_ctct.customfield', verbose_name='Field')),
            ],
            options={
                'verbose_name': 'Custom Field',
                'verbose_name_plural': 'Custom Fields',
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='list_memberships',
            field=models.ManyToManyField(blank=True, related_name='members', to='django_ctct.contactlist', verbose_name='List Memberships'),
        ),
        migrations.CreateModel(
            name='CampaignSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('sends', models.IntegerField(default=None, help_text='The total number of unique sends', null=True, verbose_name='Sends')),
                ('opens', models.IntegerField(default=None, help_text='The total number of unique opens', null=True, verbose_name='Opens')),
                ('clicks', models.IntegerField(default=None, help_text='The total number of unique clicks', null=True, verbose_name='Clicks')),
                ('forwards', models.IntegerField(default=None, help_text='The total number of unique forwards', null=True, verbose_name='Forwards')),
                ('optouts', models.IntegerField(default=None, help_text='The total number of people who unsubscribed', null=True, verbose_name='Opt Out')),
                ('abuse', models.IntegerField(default=None, help_text='The total number of people who marked as spam', null=True, verbose_name='Spam')),
                ('bounces', models.IntegerField(default=None, help_text='The total number of bounces', null=True, verbose_name='Bounces')),
                ('not_opened', models.IntegerField(default=None, help_text="The total number of people who didn't open", null=True, verbose_name='Not Opened')),
                ('campaign', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='django_ctct.emailcampaign', verbose_name='Email Campaign')),
            ],
            options={
                'verbose_name': 'Email Campaign Report',
                'verbose_name_plural': 'Email Campaign Reports',
                'ordering': ('-campaign',),
            },
        ),
        migrations.CreateModel(
            name='CampaignActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.UUIDField(default=None, null=True, unique=True, verbose_name='API ID')),
                ('from_name', models.CharField(default='Django CTCT', max_length=100, verbose_name='From Name')),
                ('from_email', models.EmailField(default='django@ctct.com', max_length=80, verbose_name='From Email')),
                ('reply_to_email', models.EmailField(default='django@ctct.com', max_length=80, verbose_name='Reply-to Email')),
                ('subject', models.CharField(help_text='The text to display in the subject line that describes the email campaign activity', max_length=200, verbose_name='Subject')),
                ('preheader', models.CharField(help_text='Contacts will view your preheader as a short summary that follows the subject line in their email client', max_length=250, verbose_name='Preheader')),
                ('html_content', models.CharField(help_text='The HTML content for the email campaign activity', max_length=150000, verbose_name='HTML Content')),
                ('role', models.CharField(choices=[('primary_email', 'Primary Email'), ('permalink', 'Permalink'), ('resend', 'Resent')], default='primary_email', max_length=25, verbose_name='Role')),
                ('current_status', models.CharField(choices=[('NONE', 'Processing'), ('DRAFT', 'Draft'), ('SCHEDULED', 'Scheduled'), ('EXECUTING', 'Executing'), ('DONE', 'Sent'), ('ERROR', 'Error'), ('REMOVED', 'Removed')], default='DRAFT', max_length=20, verbose_name='Current Status')),
                ('format_type', models.IntegerField(choices=[(1, 'Custom code (API v2)'), (2, 'CTCT UI (2nd gen)'), (3, 'CTCT UI (3rd gen)'), (4, 'CTCT UI (4th gen)'), (5, 'Custom code (API v3)')], default=5, verbose_name='Format Type')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_activities', to='django_ctct.emailcampaign', verbose_name='Campaign')),
                ('contact_lists', models.ManyToManyField(related_name='campaign_activities', to='django_ctct.contactlist', verbose_name='Contact Lists')),
            ],
            options={
                'verbose_name': 'Email Campaign Activity',
                'verbose_name_plural': 'Email Campaign Activities',
            },
        ),
        migrations.AddConstraint(
            model_name='campaignactivity',
            constraint=models.UniqueConstraint(fields=('campaign', 'role'), name='django_ctct_unique_campaign_activity'),
        ),
    ]
