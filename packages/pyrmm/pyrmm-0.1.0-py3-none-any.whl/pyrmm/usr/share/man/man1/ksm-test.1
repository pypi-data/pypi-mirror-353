.TH KSM-TEST 1 "2024-01" "KernelSU Module Tools" "User Commands"
.SH NAME
ksm-test \- KernelSU module testing and validation tool
.SH SYNOPSIS
.B ksm-test
[\fIOPTIONS\fR] [\fIMODULE_DIR\fR]
.br
.B ksm-test
\fB\-t\fR \fITEST_TYPE\fR [\fIOPTIONS\fR] [\fIMODULE_DIR\fR]
.br
.B ksm-test
\fB\-\-list\-tests\fR
.SH DESCRIPTION
.B ksm-test
is a comprehensive testing and validation tool for KernelSU modules. It provides various types of tests to ensure module quality, compatibility, and security before deployment.

The tool can perform syntax validation, structural analysis, property verification, WebUI testing, compatibility checks, performance analysis, and security audits.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Display help message and exit.
.TP
.BR \-v ", " \-\-verbose
Enable verbose output with detailed test information.
.TP
.BR \-q ", " \-\-quiet
Suppress non-essential output (quiet mode).
.TP
.BR \-t ", " \-\-type " \fITEST_TYPE\fR"
Specify the type of test to run. Available types:
.RS
.IP \(bu 4
.B syntax
\- Validate shell script syntax and structure
.IP \(bu 4
.B structure
\- Check module directory structure and required files
.IP \(bu 4
.B properties
\- Verify module.prop format and required properties
.IP \(bu 4
.B webui
\- Test WebUI functionality and interface
.IP \(bu 4
.B compatibility
\- Check compatibility with different Android versions
.IP \(bu 4
.B performance
\- Analyze performance impact and resource usage
.IP \(bu 4
.B security
\- Perform security audit and vulnerability scan
.RE
.TP
.BR \-a ", " \-\-all
Run all available test types (default behavior).
.TP
.BR \-o ", " \-\-output " \fIFILE\fR"
Specify output file for test results (default: test-report.html).
.TP
.BR \-f ", " \-\-format " \fIFORMAT\fR"
Specify output format. Available formats:
.RS
.IP \(bu 4
.B html
\- HTML report with detailed results (default)
.IP \(bu 4
.B json
\- JSON format for programmatic processing
.IP \(bu 4
.B text
\- Plain text summary report
.RE
.TP
.BR \-c ", " \-\-config " \fICONFIG_FILE\fR"
Use custom configuration file for testing parameters.
.TP
.BR \-\-strict
Enable strict mode with enhanced validation rules.
.TP
.BR \-\-android\-version " \fIVERSION\fR"
Test compatibility for specific Android version (e.g., 11, 12, 13, 14).
.TP
.BR \-\-kernel\-version " \fIVERSION\fR"
Test compatibility for specific kernel version range.
.TP
.BR \-\-list\-tests
List all available test types and descriptions.
.TP
.BR \-\-no\-color
Disable colored output.
.TP
.BR \-\-timeout " \fISECONDS\fR"
Set timeout for individual tests (default: 300 seconds).
.SH EXIT STATUS
.B ksm-test
exits with one of the following values:
.TP
.B 0
All tests passed successfully.
.TP
.B 1
One or more tests failed.
.TP
.B 2
Invalid arguments or configuration error.
.TP
.B 3
Module directory not found or inaccessible.
.TP
.B 4
Test timeout exceeded.
.SH FILES
.TP
.I /usr/etc/kernelsu-system.conf
Global system configuration file.
.TP
.I ~/.config/kernelsu/testing.conf
User-specific testing configuration.
.TP
.I ./test-config.conf
Project-specific testing configuration.
.TP
.I ./test-report.html
Default HTML test report output.
.SH EXAMPLES
.TP
Run all tests on current directory:
.B ksm-test
.TP
Run syntax check only:
.B ksm-test -t syntax
.TP
Run comprehensive testing with verbose output:
.B ksm-test -va -o detailed-report.html
.TP
Test compatibility for Android 13:
.B ksm-test -t compatibility --android-version 13
.TP
Run security audit in strict mode:
.B ksm-test -t security --strict
.TP
Generate JSON report for CI/CD:
.B ksm-test -f json -o results.json -q
.TP
Test specific module directory:
.B ksm-test /path/to/module
.TP
List available test types:
.B ksm-test --list-tests
.SH TEST TYPES
.SS Syntax Testing
Validates shell script syntax using shellcheck and custom parsers. Checks for:
.IP \(bu 4
Shell script syntax errors
.IP \(bu 4
Common scripting mistakes
.IP \(bu 4
Variable usage patterns
.IP \(bu 4
Function definitions and calls
.SS Structure Testing
Verifies module directory structure and required files:
.IP \(bu 4
Required files presence (module.prop, service.sh, etc.)
.IP \(bu 4
Directory structure compliance
.IP \(bu 4
File permissions and ownership
.IP \(bu 4
Symbolic link validation
.SS Properties Testing
Validates module.prop format and content:
.IP \(bu 4
Required property fields
.IP \(bu 4
Version format compliance
.IP \(bu 4
ID naming conventions
.IP \(bu 4
Property value validation
.SS WebUI Testing
Tests WebUI functionality (if present):
.IP \(bu 4
HTML/CSS/JavaScript validation
.IP \(bu 4
Interface responsiveness
.IP \(bu 4
API endpoint testing
.IP \(bu 4
Cross-browser compatibility
.SS Compatibility Testing
Checks compatibility across different environments:
.IP \(bu 4
Android version compatibility
.IP \(bu 4
Kernel version requirements
.IP \(bu 4
Architecture support (ARM, ARM64, x86)
.IP \(bu 4
Device-specific optimizations
.SS Performance Testing
Analyzes performance impact:
.IP \(bu 4
Boot time impact measurement
.IP \(bu 4
Memory usage analysis
.IP \(bu 4
CPU overhead assessment
.IP \(bu 4
Storage space requirements
.SS Security Testing
Performs security audit:
.IP \(bu 4
Permission escalation checks
.IP \(bu 4
File system access validation
.IP \(bu 4
Network access patterns
.IP \(bu 4
Potential vulnerability scanning
.SH CONFIGURATION
Test configuration can be customized through configuration files in the following order of precedence:
.IP 1. 4
Command-line options
.IP 2. 4
Project-specific config (./test-config.conf)
.IP 3. 4
User config (~/.config/kernelsu/testing.conf)
.IP 4. 4
System config (/usr/etc/kernelsu-system.conf)
.PP
Configuration format uses INI-style sections:
.RS
.nf
[testing]
timeout = 300
strict_mode = false
enable_performance = true

[compatibility]
android_versions = 11,12,13,14
kernel_versions = 4.14+,5.4+,5.10+

[security]
check_permissions = true
scan_vulnerabilities = true
validate_signatures = false
.fi
.RE
.SH DIAGNOSTICS
.B ksm-test
provides detailed diagnostic information through various verbosity levels:
.TP
.B Normal mode
Shows test progress and results summary.
.TP
.B Verbose mode (-v)
Displays detailed test execution information and intermediate results.
.TP
.B Quiet mode (-q)
Only shows final test results and critical errors.
.PP
Common diagnostic messages:
.TP
.B "Module directory not found"
The specified module directory does not exist or is not accessible.
.TP
.B "Missing required files"
Essential module files (module.prop, service.sh) are missing.
.TP
.B "Syntax error detected"
Shell script contains syntax errors that prevent execution.
.TP
.B "Compatibility issue found"
Module may not work properly on specified Android/kernel versions.
.TP
.B "Security concern identified"
Potential security vulnerabilities or risky permissions detected.
.SH BUGS
Report bugs to the KernelSU development team or submit issues to the project repository.
.SH SEE ALSO
.BR ksm-create (1),
.BR ksm-build (1),
.BR shellcheck (1),
.BR kernelsu (8)
.SH AUTHOR
Written by the KernelSU development team.
.SH COPYRIGHT
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
