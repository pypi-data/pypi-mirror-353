# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from api import user_service_pb2 as api_dot_user__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from models import graph_models_pb2 as models_dot_graph__models__pb2

GRPC_GENERATED_VERSION = '1.72.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in api/user_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserProvider = channel.unary_unary(
                '/api.UserService/GetUserProvider',
                request_serializer=api_dot_user__service__pb2.SAMLUserRequest.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.SAMLUserResponse.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/api.UserService/GetUser',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.User.FromString,
                _registered_method=True)
        self.InviteAdmin = channel.unary_unary(
                '/api.UserService/InviteAdmin',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.User.FromString,
                _registered_method=True)
        self.InviteMember = channel.unary_unary(
                '/api.UserService/InviteMember',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.User.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/api.UserService/DeleteUser',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ResendVerificationCode = channel.unary_unary(
                '/api.UserService/ResendVerificationCode',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.SetMFAOptions = channel.unary_unary(
                '/api.UserService/SetMFAOptions',
                request_serializer=api_dot_user__service__pb2.SetMFAOptionsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ResetMFA = channel.unary_unary(
                '/api.UserService/ResetMFA',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetActiveOperators = channel.unary_unary(
                '/api.UserService/GetActiveOperators',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.UserList.FromString,
                _registered_method=True)
        self.UpdateNewUserWithAuth = channel.unary_unary(
                '/api.UserService/UpdateNewUserWithAuth',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UpdateUserStatus = channel.unary_unary(
                '/api.UserService/UpdateUserStatus',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateRole = channel.unary_unary(
                '/api.UserService/CreateRole',
                request_serializer=models_dot_graph__models__pb2.Role.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Role.FromString,
                _registered_method=True)
        self.AddPermissionToRole = channel.unary_unary(
                '/api.UserService/AddPermissionToRole',
                request_serializer=models_dot_graph__models__pb2.Role.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Role.FromString,
                _registered_method=True)
        self.RemovePermissionFromRole = channel.unary_unary(
                '/api.UserService/RemovePermissionFromRole',
                request_serializer=models_dot_graph__models__pb2.Role.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Role.FromString,
                _registered_method=True)
        self.UpdateDefaultPermission = channel.unary_unary(
                '/api.UserService/UpdateDefaultPermission',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.CreateToken = channel.unary_unary(
                '/api.UserService/CreateToken',
                request_serializer=api_dot_user__service__pb2.CreateTokenRequest.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.TokenGeneratedResponse.FromString,
                _registered_method=True)
        self.RevokeToken = channel.unary_unary(
                '/api.UserService/RevokeToken',
                request_serializer=models_dot_graph__models__pb2.Token.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Token.FromString,
                _registered_method=True)
        self.RegenerateToken = channel.unary_unary(
                '/api.UserService/RegenerateToken',
                request_serializer=models_dot_graph__models__pb2.Token.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.TokenGeneratedResponse.FromString,
                _registered_method=True)
        self.CheckToken = channel.unary_unary(
                '/api.UserService/CheckToken',
                request_serializer=api_dot_user__service__pb2.CheckTokenRequest.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.CheckTokenResponse.FromString,
                _registered_method=True)
        self.CreateUserGroup = channel.unary_unary(
                '/api.UserService/CreateUserGroup',
                request_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                _registered_method=True)
        self.UpdateUserGroup = channel.unary_unary(
                '/api.UserService/UpdateUserGroup',
                request_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                _registered_method=True)
        self.AddEntityToUserGroup = channel.unary_unary(
                '/api.UserService/AddEntityToUserGroup',
                request_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                _registered_method=True)
        self.RemoveEntityFromUserGroup = channel.unary_unary(
                '/api.UserService/RemoveEntityFromUserGroup',
                request_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                _registered_method=True)
        self.CreateDefaultRoles = channel.unary_unary(
                '/api.UserService/CreateDefaultRoles',
                request_serializer=models_dot_graph__models__pb2.Customer.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetUserPermissions = channel.unary_unary(
                '/api.UserService/GetUserPermissions',
                request_serializer=models_dot_graph__models__pb2.User.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.UserPermissionResponse.FromString,
                _registered_method=True)
        self.CreateWorkShift = channel.unary_unary(
                '/api.UserService/CreateWorkShift',
                request_serializer=api_dot_user__service__pb2.WorkShift.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Shift.FromString,
                _registered_method=True)
        self.UpdateWorkHoursForShift = channel.unary_unary(
                '/api.UserService/UpdateWorkHoursForShift',
                request_serializer=api_dot_user__service__pb2.WorkShift.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.Shift.FromString,
                _registered_method=True)
        self.RemoveShift = channel.unary_unary(
                '/api.UserService/RemoveShift',
                request_serializer=models_dot_graph__models__pb2.Shift.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListWorkShifts = channel.unary_unary(
                '/api.UserService/ListWorkShifts',
                request_serializer=models_dot_graph__models__pb2.Customer.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.WorkShifts.FromString,
                _registered_method=True)
        self.ListEscalationPolicies = channel.unary_unary(
                '/api.UserService/ListEscalationPolicies',
                request_serializer=models_dot_graph__models__pb2.Customer.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.EscalationPolicies.FromString,
                _registered_method=True)
        self.GetEscalationPolicy = channel.unary_unary(
                '/api.UserService/GetEscalationPolicy',
                request_serializer=models_dot_graph__models__pb2.EscalationPolicy.SerializeToString,
                response_deserializer=api_dot_user__service__pb2.EscalationPolicyWithOnCallUsers.FromString,
                _registered_method=True)
        self.UpdateEscalationPolicy = channel.unary_unary(
                '/api.UserService/UpdateEscalationPolicy',
                request_serializer=models_dot_graph__models__pb2.EscalationPolicy.SerializeToString,
                response_deserializer=models_dot_graph__models__pb2.EscalationPolicy.FromString,
                _registered_method=True)
        self.RemoveEscalationPolicy = channel.unary_unary(
                '/api.UserService/RemoveEscalationPolicy',
                request_serializer=models_dot_graph__models__pb2.EscalationPolicy.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.AssignEscalationPolicy = channel.unary_unary(
                '/api.UserService/AssignEscalationPolicy',
                request_serializer=api_dot_user__service__pb2.AssignEscalationPolicyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUserProvider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InviteAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InviteMember(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResendVerificationCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMFAOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetMFA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveOperators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNewUserWithAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRole(self, request, context):
        """Role and Permission
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPermissionToRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemovePermissionFromRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDefaultPermission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateToken(self, request, context):
        """Auth Tokens
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegenerateToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEntityToUserGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveEntityFromUserGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDefaultRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWorkShift(self, request, context):
        """Schedule
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWorkHoursForShift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveShift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWorkShifts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEscalationPolicies(self, request, context):
        """Escalation Policy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEscalationPolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEscalationPolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveEscalationPolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignEscalationPolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserProvider,
                    request_deserializer=api_dot_user__service__pb2.SAMLUserRequest.FromString,
                    response_serializer=api_dot_user__service__pb2.SAMLUserResponse.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=models_dot_graph__models__pb2.User.SerializeToString,
            ),
            'InviteAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.InviteAdmin,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=models_dot_graph__models__pb2.User.SerializeToString,
            ),
            'InviteMember': grpc.unary_unary_rpc_method_handler(
                    servicer.InviteMember,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=models_dot_graph__models__pb2.User.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResendVerificationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.ResendVerificationCode,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetMFAOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMFAOptions,
                    request_deserializer=api_dot_user__service__pb2.SetMFAOptionsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResetMFA': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetMFA,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetActiveOperators': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveOperators,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=api_dot_user__service__pb2.UserList.SerializeToString,
            ),
            'UpdateNewUserWithAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNewUserWithAuth,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateUserStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserStatus,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRole,
                    request_deserializer=models_dot_graph__models__pb2.Role.FromString,
                    response_serializer=models_dot_graph__models__pb2.Role.SerializeToString,
            ),
            'AddPermissionToRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPermissionToRole,
                    request_deserializer=models_dot_graph__models__pb2.Role.FromString,
                    response_serializer=models_dot_graph__models__pb2.Role.SerializeToString,
            ),
            'RemovePermissionFromRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RemovePermissionFromRole,
                    request_deserializer=models_dot_graph__models__pb2.Role.FromString,
                    response_serializer=models_dot_graph__models__pb2.Role.SerializeToString,
            ),
            'UpdateDefaultPermission': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDefaultPermission,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateToken,
                    request_deserializer=api_dot_user__service__pb2.CreateTokenRequest.FromString,
                    response_serializer=api_dot_user__service__pb2.TokenGeneratedResponse.SerializeToString,
            ),
            'RevokeToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeToken,
                    request_deserializer=models_dot_graph__models__pb2.Token.FromString,
                    response_serializer=models_dot_graph__models__pb2.Token.SerializeToString,
            ),
            'RegenerateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RegenerateToken,
                    request_deserializer=models_dot_graph__models__pb2.Token.FromString,
                    response_serializer=api_dot_user__service__pb2.TokenGeneratedResponse.SerializeToString,
            ),
            'CheckToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckToken,
                    request_deserializer=api_dot_user__service__pb2.CheckTokenRequest.FromString,
                    response_serializer=api_dot_user__service__pb2.CheckTokenResponse.SerializeToString,
            ),
            'CreateUserGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserGroup,
                    request_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                    response_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
            ),
            'UpdateUserGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserGroup,
                    request_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                    response_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
            ),
            'AddEntityToUserGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEntityToUserGroup,
                    request_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                    response_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
            ),
            'RemoveEntityFromUserGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveEntityFromUserGroup,
                    request_deserializer=models_dot_graph__models__pb2.UserGroup.FromString,
                    response_serializer=models_dot_graph__models__pb2.UserGroup.SerializeToString,
            ),
            'CreateDefaultRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDefaultRoles,
                    request_deserializer=models_dot_graph__models__pb2.Customer.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetUserPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPermissions,
                    request_deserializer=models_dot_graph__models__pb2.User.FromString,
                    response_serializer=api_dot_user__service__pb2.UserPermissionResponse.SerializeToString,
            ),
            'CreateWorkShift': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorkShift,
                    request_deserializer=api_dot_user__service__pb2.WorkShift.FromString,
                    response_serializer=models_dot_graph__models__pb2.Shift.SerializeToString,
            ),
            'UpdateWorkHoursForShift': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWorkHoursForShift,
                    request_deserializer=api_dot_user__service__pb2.WorkShift.FromString,
                    response_serializer=models_dot_graph__models__pb2.Shift.SerializeToString,
            ),
            'RemoveShift': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveShift,
                    request_deserializer=models_dot_graph__models__pb2.Shift.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListWorkShifts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorkShifts,
                    request_deserializer=models_dot_graph__models__pb2.Customer.FromString,
                    response_serializer=api_dot_user__service__pb2.WorkShifts.SerializeToString,
            ),
            'ListEscalationPolicies': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEscalationPolicies,
                    request_deserializer=models_dot_graph__models__pb2.Customer.FromString,
                    response_serializer=api_dot_user__service__pb2.EscalationPolicies.SerializeToString,
            ),
            'GetEscalationPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEscalationPolicy,
                    request_deserializer=models_dot_graph__models__pb2.EscalationPolicy.FromString,
                    response_serializer=api_dot_user__service__pb2.EscalationPolicyWithOnCallUsers.SerializeToString,
            ),
            'UpdateEscalationPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEscalationPolicy,
                    request_deserializer=models_dot_graph__models__pb2.EscalationPolicy.FromString,
                    response_serializer=models_dot_graph__models__pb2.EscalationPolicy.SerializeToString,
            ),
            'RemoveEscalationPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveEscalationPolicy,
                    request_deserializer=models_dot_graph__models__pb2.EscalationPolicy.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AssignEscalationPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignEscalationPolicy,
                    request_deserializer=api_dot_user__service__pb2.AssignEscalationPolicyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('api.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUserProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/GetUserProvider',
            api_dot_user__service__pb2.SAMLUserRequest.SerializeToString,
            api_dot_user__service__pb2.SAMLUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/GetUser',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            models_dot_graph__models__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InviteAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/InviteAdmin',
            models_dot_graph__models__pb2.User.SerializeToString,
            models_dot_graph__models__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InviteMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/InviteMember',
            models_dot_graph__models__pb2.User.SerializeToString,
            models_dot_graph__models__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/DeleteUser',
            models_dot_graph__models__pb2.User.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResendVerificationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/ResendVerificationCode',
            models_dot_graph__models__pb2.User.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMFAOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/SetMFAOptions',
            api_dot_user__service__pb2.SetMFAOptionsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetMFA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/ResetMFA',
            models_dot_graph__models__pb2.User.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetActiveOperators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/GetActiveOperators',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            api_dot_user__service__pb2.UserList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNewUserWithAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/UpdateNewUserWithAuth',
            models_dot_graph__models__pb2.User.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUserStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/UpdateUserStatus',
            models_dot_graph__models__pb2.User.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/CreateRole',
            models_dot_graph__models__pb2.Role.SerializeToString,
            models_dot_graph__models__pb2.Role.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddPermissionToRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/AddPermissionToRole',
            models_dot_graph__models__pb2.Role.SerializeToString,
            models_dot_graph__models__pb2.Role.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemovePermissionFromRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/RemovePermissionFromRole',
            models_dot_graph__models__pb2.Role.SerializeToString,
            models_dot_graph__models__pb2.Role.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDefaultPermission(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/UpdateDefaultPermission',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/CreateToken',
            api_dot_user__service__pb2.CreateTokenRequest.SerializeToString,
            api_dot_user__service__pb2.TokenGeneratedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/RevokeToken',
            models_dot_graph__models__pb2.Token.SerializeToString,
            models_dot_graph__models__pb2.Token.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegenerateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/RegenerateToken',
            models_dot_graph__models__pb2.Token.SerializeToString,
            api_dot_user__service__pb2.TokenGeneratedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/CheckToken',
            api_dot_user__service__pb2.CheckTokenRequest.SerializeToString,
            api_dot_user__service__pb2.CheckTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUserGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/CreateUserGroup',
            models_dot_graph__models__pb2.UserGroup.SerializeToString,
            models_dot_graph__models__pb2.UserGroup.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUserGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/UpdateUserGroup',
            models_dot_graph__models__pb2.UserGroup.SerializeToString,
            models_dot_graph__models__pb2.UserGroup.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEntityToUserGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/AddEntityToUserGroup',
            models_dot_graph__models__pb2.UserGroup.SerializeToString,
            models_dot_graph__models__pb2.UserGroup.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveEntityFromUserGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/RemoveEntityFromUserGroup',
            models_dot_graph__models__pb2.UserGroup.SerializeToString,
            models_dot_graph__models__pb2.UserGroup.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDefaultRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/CreateDefaultRoles',
            models_dot_graph__models__pb2.Customer.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/GetUserPermissions',
            models_dot_graph__models__pb2.User.SerializeToString,
            api_dot_user__service__pb2.UserPermissionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateWorkShift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/CreateWorkShift',
            api_dot_user__service__pb2.WorkShift.SerializeToString,
            models_dot_graph__models__pb2.Shift.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateWorkHoursForShift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/UpdateWorkHoursForShift',
            api_dot_user__service__pb2.WorkShift.SerializeToString,
            models_dot_graph__models__pb2.Shift.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveShift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/RemoveShift',
            models_dot_graph__models__pb2.Shift.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListWorkShifts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/ListWorkShifts',
            models_dot_graph__models__pb2.Customer.SerializeToString,
            api_dot_user__service__pb2.WorkShifts.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEscalationPolicies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/ListEscalationPolicies',
            models_dot_graph__models__pb2.Customer.SerializeToString,
            api_dot_user__service__pb2.EscalationPolicies.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEscalationPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/GetEscalationPolicy',
            models_dot_graph__models__pb2.EscalationPolicy.SerializeToString,
            api_dot_user__service__pb2.EscalationPolicyWithOnCallUsers.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEscalationPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/UpdateEscalationPolicy',
            models_dot_graph__models__pb2.EscalationPolicy.SerializeToString,
            models_dot_graph__models__pb2.EscalationPolicy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveEscalationPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/RemoveEscalationPolicy',
            models_dot_graph__models__pb2.EscalationPolicy.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AssignEscalationPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/api.UserService/AssignEscalationPolicy',
            api_dot_user__service__pb2.AssignEscalationPolicyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
