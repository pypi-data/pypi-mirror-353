Metadata-Version: 2.4
Name: SpaceHunter
Version: 0.2.0
Summary: SpaceHunter 2D arcade game for pygame
Author-email: semuadmin <semuadmin@semuconsulting.com>
Maintainer-email: semuadmin <semuadmin@semuconsulting.com>
License: BSD 2-Clause License
        
        Copyright (c) 2020, semuadmin
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: homepage, https://github.com/semuadmin/spacehunter
Project-URL: documentation, https://www.semuconsulting.com/spacehunter/
Project-URL: repository, https://github.com/semuadmin/spacehunter
Project-URL: changelog, https://github.com/semuadmin/spacehunter/blob/master/RELEASE_NOTES.md
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: MacOS X
Classifier: Environment :: Win32 (MS Windows)
Classifier: Environment :: X11 Applications
Classifier: Intended Audience :: End Users/Desktop
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: License :: OSI Approved :: BSD License
Classifier: Topic :: Games/Entertainment :: Arcade
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pygame>=2.5
Provides-Extra: deploy
Requires-Dist: build; extra == "deploy"
Requires-Dist: pip; extra == "deploy"
Requires-Dist: setuptools>=75.0; extra == "deploy"
Requires-Dist: wheel; extra == "deploy"
Provides-Extra: test
Requires-Dist: black; extra == "test"
Requires-Dist: isort; extra == "test"
Requires-Dist: pylint; extra == "test"
Dynamic: license-file

# SpaceHunter

 Python arcade-style space shooter game written entirely in pygame.


![app screenshot](https://github.com/semuadmin/spacehunter/blob/master/images/screenshot.png?raw=true)

## Current Status

# WORK IN PROGRESS

Just a bit of fun with pygame. An attempt to create an simple arcade-style 2D space shooter with **real-world physics**, responsive enemy interactions and cool weapons.

It's still a work in progress, but is quite fun to play (with a suitable joystick) and is offered here for anyone who feels like taking it on for further development for just for yuks.

Developed using VSCode with the Python extension.

## <a name="installation">Installation</a>

![Python version](https://img.shields.io/pypi/pyversions/spacehunter.svg?style=flat)
[![PyPI version](https://img.shields.io/pypi/v/spacehunter.svg?style=flat)](https://pypi.org/project/spacehunter/)
![PyPI downloads](https://img.shields.io/pypi/dm/spacehunter.svg?style=flat)

`spacehunter` is compatible with Python 3.9 - 3.13. In the following, `python3` & `pip` refer to the Python 3 executables. You may need to substitute `python` for `python3`, depending on your particular environment (*on Windows it's generally `python`*).

**All platforms**:

- It is recommended to use the latest official Python.org installation package for your platform, rather than any pre-installed version.
- It is recommended that the Python 3 binaries and site_packages directories are included in your PATH (most standard Python 3 installation packages will do this automatically if you select the 'Add to PATH' option during installation).
- Recommended multi-platform joystick controller - [8BitDo SN30 Pro+](https://www.8bitdo.com/sn30-pro-g-classic-or-sn30-pro-sn/). The joystick controller assignments can be configured via `spacehunterconfig.json`.
- Game state is saved in `gamestate.json`.

The recommended way to install the latest version of `spacehunter` is with [pip](http://pypi.python.org/pypi/pip/):

```shell
python3 -m pip install --upgrade spacehunter
```

If required, `spacehunter` can also be installed into a virtual environment, e.g.:

```shell
python3 -m venv env
source env/bin/activate # (or env\Scripts\activate on Windows)
python3 -m pip install --upgrade spacehunter
```

To run, type `spacehunter` at the command line:

```shell
spacehunter
```

Or alternatively:

```shell
python3 -m spacehunter
```

## Gameplay

**Basic gameplay:**

- **Press H at any time to display Help. Press H repeatedly to scroll through Help pages**.
- **Press P to Pause**
- **Press Q to Quit**
- You're a lone spaceship out in deep space and you have to fend off hazards from asteroids and hostile spaceships.
- You score points for destroying asteroids and other space junk (the smaller and faster the target, the higher the score). But be careful - the debris from destroyed asteroids is itself a hazard!
- You score points for hitting or destroying hostile spaceships (the more powerful the hostile, the higher the score).
- The points you acquire allow you to replenish your ammunition or purchase more powerful and sophisticated weapons.
- Your ship has a defensive energy field but this is depleted if you're hit by asteroids, debris or enemy weapons.
- Your ship has multiple weapon bays, each of which can accommodate a variety of weapon types, but only one is occupied at the start of the game.
- You have a radar screen (with selectable range) which shows you the location and direction of incoming hazards. The radar will flash red when a hostile spaceship comes into range.
- Hostile spaceships can track and home into your location, but will normally retreat temporarily if they're fired upon. Be warned - some hostiles are more agile and/or aggressive than others.
- You can pause or save/quit a game at any point, and reload a saved game at a later date.
- You have 3 'lives'.

**Piloting the spaceship:**

- Your main engine and control thrusters allow you to accelerate and rotate in any direction, but **the laws of inertial physics apply**. In other words, if you fire the engine or thruster in a certain direction, you will continue to move or accelerate in that direction until you apply thrust in the opposite direction, or until your ship's inertial dampers eventually kill your velocity. This takes some getting used to.

**Weaponry:**

- At the start, your only weapon is a relatively low-powered laser, which automatically recharges slowly in the background. Caution - you need to actively select this weapon before using it.
- If you're running low on ammunition or need a more sophisticated weapon, and have a sufficient point score, you can summon a nearby weapon supply ship.
- The supply ship will automatically home into your location. When it arrives, you must dock with it (having first ensured all nearby hostiles are destroyed and your weapons are disabled). Once docked, you have access to the supply ship's armoury which contains a variety of weapon types. The more powerful the weapon, the higher the cost.
  1. Laser - a low-powered pulse energy weapon.
  1. Ultralaser - a higher-powered pulse energy weapon.
  1. Gatling gun - a kinetic-energy weapon with a high rate of fire but limited ammunition capacity.
  1. Missile - a dumb but powerful unguided missile.
  1. Sidewinder - a smart guided missile which will automatically home in on the nearest enemy spaceship. Can be fired beyond visual range.
  1. Mine - a proximity-triggered explosive device which can be deployed at a specific location (remember to kill your velocity before deploying, or the mine will simply fly off in whatever direction you happened to be heading in).
- Once you've replenished your arsenal, you can undock from the supply ship and continue on your way.
- Note that some weapons can overheat if they're fired continuously for more than a few seconds - you'll need to wait for them to cool off before firing again.

## Attributions and Acknowledgements

Object-orientated program structure originally based on:

* [Pygame Tutorials](http://pygametutorials.wikidot.com/tutorials-basic)
* Public domain

Graphics from:

* [opengameart.org](http://opengameart.org/content/space-shooter-redux)
* CC0 1.0 Universal Public Domain Dedication

## License

BSD 2-Clause License.

Copyright (c) 2020, semuadmin (aka steely_eyed_missile_man).

All rights reserved.

## To Do

* maybe generic way to load images and sounds from file directories
* fix collision scoring and damage - every collidable object should have a 'damage' attribute
* do armoury costing
* maybe rationalise spacejunk classes
* enemy shooting behaviour
* more enemy classes
* levels

