[project]
name = "daydream"
version = "0.1.0-alpha.2"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aioboto3>=14.1.0",
    "anyio>=4.9.0",
    "dnspython>=2.7.0",
    "fastmcp>=2.5.2",
    "httpx>=0.28.1",
    "graphviz>=0.20.3",
    "httpx>=0.28.1",
    "matplotlib>=3.10.1",
    "networkx>=3.4.2",
    "numpy<2.2",
    "pydantic>=2.11.3",
    "pydot>=3.0.4",
    "pyod==2.0.3",
    "pythonping>=1.1.4",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "scapy>=2.6.1",
    "sh>=2.2.2",
    "typer>=0.15.2",
    "whoosh-reloaded>=2.7.5",
    "boltons>=25.0.0",
    "logparser>=0.8.4",
    "drain3>=0.9.11",
    "sparklines>=0.5.0",
    "pydantic-yaml>=1.5.1",
    "questionary>=2.1.0",
    "sentry-sdk>=2.29.1",
]

[project.scripts]
daydream = "daydream.cli:main"

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.400",
    "ruff>=0.11.4",
    "types-aioboto3[aioboto3]>=14.1.0",
    "types-boltons>=25.0.0.20250516",
    "types-networkx>=3.4.2.20250515",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__"]
typeCheckingMode = "standard"

# See:
# - https://docs.astral.sh/ruff/configuration/
# - https://docs.astral.sh/ruff/settings/
# - https://docs.astral.sh/ruff/rules/
[tool.ruff]
line-length = 100

[tool.ruff.lint]
ignore = []
select = [
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "E4",    # pycodestyle-4xx
    "E7",    # pycodestyle-7xx
    "E9",    # pycodestyle-9xx
    "ERA",   # eradicate
    "F",     # pyflakes
    "FURB",  # refurb
    "I",     # isort
    "NPY",   # numpy
    "PERF",  # perflint
    "PTH",   # flake8-use-pathlib
    "RUF",   # ruff
    "S",     # flake8-bandit
    "SIM",   # flake8-simplify
    "TC",    # flake8-type-checking
    "UP",    # pyupgrade
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true  # allow typing *args and *kwargs with Any
