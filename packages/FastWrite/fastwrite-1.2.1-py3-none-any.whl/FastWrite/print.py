import os

import re

def remove_think_tags(text: str) -> str:
    """
    Removes content within <think>...</think> tags from the provided text.

    :param text: The input text containing potential <think> tags.
    :return: Text with <think> tags and their content removed.
    """
    return re.sub(r"<think>.*?</think>\n?", "", text, flags=re.DOTALL)


def readmegen(documentation: str, llm_used: str) -> None:
    """
    Appends the generated documentation to the README.md file.
    If the file does not exist, it creates a new one.

    :param documentation: The documentation content to append.
    :param llm_used: The name of the LLM used for generating the documentation.
    """
    readme_path = "README.md"
    header = f"# Documentation generated by FastWrite using {llm_used}\n\n"
    documentation = remove_think_tags(documentation)
    # Check if README.md exists
    if os.path.exists(readme_path):
        # Append to the existing README.md
        with open(readme_path, 'a', encoding='utf-8') as readme_file:
            readme_file.write("\n" + header + documentation + "\n")
    else:
        # Create a new README.md and write the documentation
        with open(readme_path, 'w', encoding='utf-8') as readme_file:
            readme_file.write(header + documentation + "\n")

    print(f"Documentation has been {'appended to' if os.path.exists(readme_path) else 'written to'} README.md")
