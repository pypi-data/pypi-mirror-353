name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run linting
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Run type checking
        run: |
          uv run mypy ai_sdlc

      - name: Run tests
        run: |
          uv run pytest tests/ -v --cov=ai_sdlc --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run integration tests
        run: |
          uv run pytest tests/integration/ -v

      - name: Test CLI installation and basic functionality
        run: |
          # Test that the CLI can be installed and run
          uv run aisdlc --help || echo "CLI help command test"

          # Test init command in a temporary directory
          mkdir -p /tmp/test-ai-sdlc
          cd /tmp/test-ai-sdlc
          uv run --directory $GITHUB_WORKSPACE aisdlc init

          # Verify key files were created
          test -f .aisdlc
          test -d prompts
          test -f prompts/0.idea.instructions.md
          test -f prompts/1.prd.instructions.md

          echo "âœ… CLI integration test passed"

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run security checks
        run: |
          uv run bandit -r ai_sdlc/
          uv run safety check
