name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
    UV_FROZEN: 1

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run Mypy
        run: uv run mypy .

  test:
    name: Test Python ${{ matrix.python }}
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        python: ["3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras --python ${{ matrix.python }}

      - name: Run unit tests
        run: uv run pytest -x

      - name: Run integration tests
        run: uv run pytest -x -m integration --cov-append

      - name: Rename coverage report
        run: mv .coverage .coverage.py${{ matrix.python }}

      - name: Save coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python }}
          path: .coverage.py${{ matrix.python }}
          include-hidden-files: true

  coverage-report:
    name: Coverage report
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get coverage reports
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Combine coverage reports
        run: |
          uv run coverage combine .coverage.*
          uv run coverage xml -o cov.xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cov.xml
