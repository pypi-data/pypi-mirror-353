[project]
name = "grelmicro"
description = "Grelmicro is a lightweight framework/toolkit for building async microservices in Python"
license = "MIT"
authors = [{ name = "LoÃ¯c Gremaud", email = "grelinfo@gmail.com"}]
readme = "README.md"

classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 1 - Planning",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]

requires-python = ">=3.11"

dependencies = [
    "anyio>=4.0.0",
    "pydantic>=2.5.0",
    "fast-depends>=2.0.0",
    "pydantic-settings>=2.5.0",
]

[project.urls]

Repository = "https://github.com/grelinfo/grelmicro.git"
Issues = "https://github.com/grelinfo/grelmicro/issues"

[project.optional-dependencies]
standard = [
    "loguru>=0.7.2",
    "orjson>=3.10.11",
]
postgres = [
    "asyncpg>=0.30.0",
]
redis = [
    "redis>=5.0.0",
]

[dependency-groups]
dev = [
    "pytest-cov>=6.0.0",
    "pytest>=8.0.0",
    "mypy>=1.12.0",
    "ruff>=0.7.4",
    "testcontainers[postgres,redis]>=4.8.2",
    "pytest-timeout>=2.3.1",
    "pytest-mock>=3.14.0",
    "pytest-randomly>=3.16.0",
    "pre-commit>=4.0.1",
    "fastapi>=0.115.5",
    "fastapi-cli>=0.0.5",
    "mdx-include>=1.4.2",
    "faststream>=0.5.30",
    "hatch>=1.13.0",
    "freezegun>=1.5.2",
]
docs = [
    "mkdocs-material>=9.5.44",
    "pygments>=2.18.0",
    "pymdown-extensions>=10.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
skip-excluded-dirs = true
exclude = ["/tests", "/docs"]

[tool.hatch.version]
path = "grelmicro/__init__.py"

[tool.ruff]
target-version = "py311"
line-length = 80

[tool.ruff.lint]
select = ["ALL"]
ignore = ["COM812", "ISC001"] # Ignore rules conflicting with the formatter.

[tool.ruff.lint.extend-per-file-ignores]
"docs/snippets/*" = [
    "ARG001",
    "ANN001",
    "ANN201",
    "D103",
    "D100",
    "INP001",
    "T201",
]
"docs/snippets/logging/basic.py" = ["EM101", "TRY"]
"docs/snippets/task/router.py" = ["I001", "E402"]
"tests/*" = [
    "S101",
    "SLF001"
]

[tool.ruff.lint.pycodestyle]
max-line-length = 100 # reports only line that exceed 100 characters.

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.pylint]
max-args = 10

[tool.mypy]
scripts_are_modules = true
plugins = [
  "pydantic.mypy"
]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["asyncpg", "testcontainers.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "snippets.*",
]
disallow_untyped_defs = false


[tool.pytest.ini_options]

junit_family = "legacy"

addopts = """
    --cov=grelmicro
    --cov-report xml:cov.xml
    --strict-config
    --strict-markers
"""
markers = """
    integration: mark a test as an integration test (disabled by default).
"""

testpaths = "tests"

[tool.coverage.report]
sort = "-Cover"
exclude_also = [
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "assert_never\\(.*\\)",
    "pytest.fail\\(.*\\)",
]
