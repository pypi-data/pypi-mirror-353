name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: uv run pytest -vvv -s

    - name: Test MCP server functionality
      run: |
        # Test that the server can start and respond
        timeout 5s uv run stdio < /dev/null || [ $? -eq 124 ]
        
        # Test server script
        timeout 5s uv run server --help

  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests
      run: uv run pytest -vvv -s

    - name: Test MCP server functionality
      shell: pwsh
      run: |
        # Test that the server can start and respond (Windows version)
        Start-Process -FilePath "uv" -ArgumentList "run", "stdio" -NoNewWindow -Wait -TimeoutSec 5 -ErrorAction SilentlyContinue
        
        # Test server script
        uv run server --help

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --dev

    - name: Check code formatting
      run: |
        uv run ruff check .
        uv run ruff format --check .
      continue-on-error: true

  lint-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --dev

    - name: Check code formatting
      run: |
        uv run ruff check .
        uv run ruff format --check .
      continue-on-error: true 