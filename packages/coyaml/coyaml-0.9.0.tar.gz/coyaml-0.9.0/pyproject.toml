[project]
name = "coyaml"
version = "0.9.0"
description = "Yaml configuration library for python"
authors = [{ name = "Petr Matyukov", email = "kuruhuru@gmail.com" }]

# Main dependencies here
dependencies = [
    "pydantic",
    "pydantic-settings",
    "types-PyYAML>=6.0.12.20240311",
]

requires-python = ">=3.10.6, <3.12"
readme = "README.md"
license = { text = "MIT" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/coyaml"]


[tool.uv]
dev-dependencies = [
    "mypy>=1.8.0",
    "pre-commit>=3.5.0",
    "ruff==0.6.9",
    "pytest>=8.3.3",
    "pip-licenses==5.0.0",
    "ipywidgets>=8.1.5",
    "ipykernel>=6.29.5",
]


[tool.mypy]
plugins = ["pydantic.mypy"]
exclude = ["venv", ".venv", "alembic"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true
disallow_untyped_defs = true
namespace_packages = true
explicit_package_bases = true
mypy_path = ["src"]

[tool.ruff]
exclude = ["alembic"]
line-length = 120

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
    "S",      # flake8-bandit
    "PT",     # flake8-pytest-style
]
ignore = [
    "E501",  # line too long, handled by black,
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "PT004", # Checks for pytest fixtures that do not return a value, but are not named with a leading underscore.
    "PT011", # Checks for pytest.raises calls without a match parameter.
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pip-licenses]
fail-on = "GNU Lesser General Public License v3 (LGPLv3);"
