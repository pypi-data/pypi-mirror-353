# coding: utf-8

"""
    Cloudbeds API

    <p>     Welcome to the documentation for <strong>Cloudbeds API Version v1.3</strong>!     If you are looking to learn how to use the Cloudbeds API to access guest information, reservations, or similar data     for your Cloudbeds customers, then you've come to the right place. </p>  <p>     In this document you will find all the API methods we provide along with explanations for parameters and response     examples. </p>  <p>     If you have questions about different implementation steps (e.g. how to implement OAuth 2.0), please refer to our     <a href=\"https://integrations.cloudbeds.com/hc/en-us\">Integrations Portal</a>. </p>  <p>     Be sure to <a href=\"https://go.pardot.com/l/308041/2018-07-24/qb2lg\">subscribe</a> to the monthly     Cloudbeds API announcement mailing list to receive information on new additions and improvements to the     Cloudbeds API and related developer tools. </p>  <p>     <strong>Endpoint:</strong> https://api.cloudbeds.com/api/v1.3/{method} </p>  <p>     <strong>HTTPS:</strong> Our API requires HTTPS. We'll respond with an appropriate error if you're not using it. </p>  <p>     <strong>Request Format:</strong> HTTP GET, POST and PUT (Content-Type: application/x-www-form-urlencoded) </p>  <p>     <strong>Response Format:</strong> JSON </p>  <p>     <strong>Response Header:</strong> X-Request-ID is added to response headers in all calls to help accelerate support     and troubleshooting. </p>  <p>     <strong>         <a href=\"https://integrations.cloudbeds.com/hc/en-us/articles/14104678058267-API-Documentation#postman-collection\">             <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run in Postman\">         </a>     </strong> use this link to access our Public collection in Postman. </p>

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import date
from pydantic import Field, StrictBool, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from cloudbeds_pms_v1_3.models.get_hotel_room_types_response import GetHotelRoomTypesResponse

from cloudbeds_pms_v1_3.api_client import ApiClient, RequestSerialized
from cloudbeds_pms_v1_3.api_response import ApiResponse
from cloudbeds_pms_v1_3.rest import RESTResponseType


class RoomsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_hotel_room_types_get(
        self,
        property_ids: Annotated[StrictStr, Field(description="Property ID list, comma-separated, i.e. 37,345,89")],
        start_date: Annotated[Optional[date], Field(description="Check-In date. Required for rates to be returned.")] = None,
        end_date: Annotated[Optional[date], Field(description="Check-Out date. Required for rates to be returned.")] = None,
        adults: Annotated[Optional[StrictInt], Field(description="Number of adults. Required for rates to be returned.")] = None,
        children: Annotated[Optional[StrictInt], Field(description="Number of children. Required for rates to be returned.")] = None,
        detailed_rates: Annotated[Optional[StrictBool], Field(description="If detailed rates are expected")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Page number")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Page size")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetHotelRoomTypesResponse:
        """getHotelRoomTypes

        Returns a list of room types of a specific property, or a list of properties

        :param property_ids: Property ID list, comma-separated, i.e. 37,345,89 (required)
        :type property_ids: str
        :param start_date: Check-In date. Required for rates to be returned.
        :type start_date: date
        :param end_date: Check-Out date. Required for rates to be returned.
        :type end_date: date
        :param adults: Number of adults. Required for rates to be returned.
        :type adults: int
        :param children: Number of children. Required for rates to be returned.
        :type children: int
        :param detailed_rates: If detailed rates are expected
        :type detailed_rates: bool
        :param page_number: Page number
        :type page_number: int
        :param page_size: Page size
        :type page_size: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_hotel_room_types_get_serialize(
            property_ids=property_ids,
            start_date=start_date,
            end_date=end_date,
            adults=adults,
            children=children,
            detailed_rates=detailed_rates,
            page_number=page_number,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetHotelRoomTypesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_hotel_room_types_get_with_http_info(
        self,
        property_ids: Annotated[StrictStr, Field(description="Property ID list, comma-separated, i.e. 37,345,89")],
        start_date: Annotated[Optional[date], Field(description="Check-In date. Required for rates to be returned.")] = None,
        end_date: Annotated[Optional[date], Field(description="Check-Out date. Required for rates to be returned.")] = None,
        adults: Annotated[Optional[StrictInt], Field(description="Number of adults. Required for rates to be returned.")] = None,
        children: Annotated[Optional[StrictInt], Field(description="Number of children. Required for rates to be returned.")] = None,
        detailed_rates: Annotated[Optional[StrictBool], Field(description="If detailed rates are expected")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Page number")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Page size")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetHotelRoomTypesResponse]:
        """getHotelRoomTypes

        Returns a list of room types of a specific property, or a list of properties

        :param property_ids: Property ID list, comma-separated, i.e. 37,345,89 (required)
        :type property_ids: str
        :param start_date: Check-In date. Required for rates to be returned.
        :type start_date: date
        :param end_date: Check-Out date. Required for rates to be returned.
        :type end_date: date
        :param adults: Number of adults. Required for rates to be returned.
        :type adults: int
        :param children: Number of children. Required for rates to be returned.
        :type children: int
        :param detailed_rates: If detailed rates are expected
        :type detailed_rates: bool
        :param page_number: Page number
        :type page_number: int
        :param page_size: Page size
        :type page_size: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_hotel_room_types_get_serialize(
            property_ids=property_ids,
            start_date=start_date,
            end_date=end_date,
            adults=adults,
            children=children,
            detailed_rates=detailed_rates,
            page_number=page_number,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetHotelRoomTypesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_hotel_room_types_get_without_preload_content(
        self,
        property_ids: Annotated[StrictStr, Field(description="Property ID list, comma-separated, i.e. 37,345,89")],
        start_date: Annotated[Optional[date], Field(description="Check-In date. Required for rates to be returned.")] = None,
        end_date: Annotated[Optional[date], Field(description="Check-Out date. Required for rates to be returned.")] = None,
        adults: Annotated[Optional[StrictInt], Field(description="Number of adults. Required for rates to be returned.")] = None,
        children: Annotated[Optional[StrictInt], Field(description="Number of children. Required for rates to be returned.")] = None,
        detailed_rates: Annotated[Optional[StrictBool], Field(description="If detailed rates are expected")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Page number")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Page size")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """getHotelRoomTypes

        Returns a list of room types of a specific property, or a list of properties

        :param property_ids: Property ID list, comma-separated, i.e. 37,345,89 (required)
        :type property_ids: str
        :param start_date: Check-In date. Required for rates to be returned.
        :type start_date: date
        :param end_date: Check-Out date. Required for rates to be returned.
        :type end_date: date
        :param adults: Number of adults. Required for rates to be returned.
        :type adults: int
        :param children: Number of children. Required for rates to be returned.
        :type children: int
        :param detailed_rates: If detailed rates are expected
        :type detailed_rates: bool
        :param page_number: Page number
        :type page_number: int
        :param page_size: Page size
        :type page_size: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_hotel_room_types_get_serialize(
            property_ids=property_ids,
            start_date=start_date,
            end_date=end_date,
            adults=adults,
            children=children,
            detailed_rates=detailed_rates,
            page_number=page_number,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetHotelRoomTypesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_hotel_room_types_get_serialize(
        self,
        property_ids,
        start_date,
        end_date,
        adults,
        children,
        detailed_rates,
        page_number,
        page_size,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if property_ids is not None:
            
            _query_params.append(('propertyIDs', property_ids))
            
        if start_date is not None:
            if isinstance(start_date, date):
                _query_params.append(
                    (
                        'startDate',
                        start_date.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('startDate', start_date))
            
        if end_date is not None:
            if isinstance(end_date, date):
                _query_params.append(
                    (
                        'endDate',
                        end_date.strftime(
                            self.api_client.configuration.date_format
                        )
                    )
                )
            else:
                _query_params.append(('endDate', end_date))
            
        if adults is not None:
            
            _query_params.append(('adults', adults))
            
        if children is not None:
            
            _query_params.append(('children', children))
            
        if detailed_rates is not None:
            
            _query_params.append(('detailedRates', detailed_rates))
            
        if page_number is not None:
            
            _query_params.append(('pageNumber', page_number))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'OAuth2', 
            'api_key'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/getHotelRoomTypes',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


