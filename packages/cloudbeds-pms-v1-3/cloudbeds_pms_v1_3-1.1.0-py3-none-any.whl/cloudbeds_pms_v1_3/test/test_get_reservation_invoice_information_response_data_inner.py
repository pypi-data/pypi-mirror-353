# coding: utf-8

"""
    Cloudbeds API

    <p>     Welcome to the documentation for <strong>Cloudbeds API Version v1.3</strong>!     If you are looking to learn how to use the Cloudbeds API to access guest information, reservations, or similar data     for your Cloudbeds customers, then you've come to the right place. </p>  <p>     In this document you will find all the API methods we provide along with explanations for parameters and response     examples. </p>  <p>     If you have questions about different implementation steps (e.g. how to implement OAuth 2.0), please refer to our     <a href=\"https://integrations.cloudbeds.com/hc/en-us\">Integrations Portal</a>. </p>  <p>     Be sure to <a href=\"https://go.pardot.com/l/308041/2018-07-24/qb2lg\">subscribe</a> to the monthly     Cloudbeds API announcement mailing list to receive information on new additions and improvements to the     Cloudbeds API and related developer tools. </p>  <p>     <strong>Endpoint:</strong> https://api.cloudbeds.com/api/v1.3/{method} </p>  <p>     <strong>HTTPS:</strong> Our API requires HTTPS. We'll respond with an appropriate error if you're not using it. </p>  <p>     <strong>Request Format:</strong> HTTP GET, POST and PUT (Content-Type: application/x-www-form-urlencoded) </p>  <p>     <strong>Response Format:</strong> JSON </p>  <p>     <strong>Response Header:</strong> X-Request-ID is added to response headers in all calls to help accelerate support     and troubleshooting. </p>  <p>     <strong>         <a href=\"https://integrations.cloudbeds.com/hc/en-us/articles/14104678058267-API-Documentation#postman-collection\">             <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run in Postman\">         </a>     </strong> use this link to access our Public collection in Postman. </p>

    The version of the OpenAPI document: v1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner import GetReservationInvoiceInformationResponseDataInner

class TestGetReservationInvoiceInformationResponseDataInner(unittest.TestCase):
    """GetReservationInvoiceInformationResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetReservationInvoiceInformationResponseDataInner:
        """Test GetReservationInvoiceInformationResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetReservationInvoiceInformationResponseDataInner`
        """
        model = GetReservationInvoiceInformationResponseDataInner()
        if include_optional:
            return GetReservationInvoiceInformationResponseDataInner(
                status = 'confirmed',
                custom_fields = [
                    cloudbeds_pms_v1_3.models.get_reservation_response_data_guest_list_value_custom_fields_inner.GetReservationResponse_data_guestList_value_customFields_inner(
                        custom_field_name = '', 
                        custom_field_value = '', )
                    ],
                main_guest_details = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_main_guest_details_inner.GetReservationInvoiceInformationResponse_data_inner_mainGuestDetails_inner(
                        guest_first_name = '', 
                        guest_last_name = '', 
                        guest_gender = 'M', 
                        guest_email = '', 
                        guest_phone = '', 
                        guest_cell_phone = '', 
                        guest_address = '', 
                        guest_address2 = '', 
                        guest_city = '', 
                        guest_country = '', 
                        tax_id = '', 
                        company_tax_id = '', 
                        company_name = '', 
                        guest_state = '', 
                        guest_zip = '', 
                        is_anonymyzed = True, )
                    ],
                reservation_rooms = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_reservation_rooms_inner.GetReservationInvoiceInformationResponse_data_inner_reservationRooms_inner(
                        room_type_name = '', 
                        guest_name = '', 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        adults = 56, 
                        children = 56, 
                        nights = 56, 
                        room_total = 1.337, 
                        room_id = '', 
                        room_name = '', 
                        room_type_id = '', )
                    ],
                reservation_rooms_total = 1.337,
                reservation_adjustments = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_reservation_adjustments_inner.GetReservationInvoiceInformationResponse_data_inner_reservationAdjustments_inner(
                        adjustment_description = '', 
                        adjustment_room_name = '', 
                        adjustment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        adjustment_date_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        adjustment_amount = 1.337, )
                    ],
                reservation_adjustments_total = 1.337,
                reservation_payments = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_reservation_payments_inner.GetReservationInvoiceInformationResponse_data_inner_reservationPayments_inner(
                        payment_type = '', 
                        payment_description = '', 
                        payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        payment_date_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        payment_amount = 1.337, 
                        reservation_payments_total = 1.337, )
                    ],
                reservation_additional_products = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_reservation_additional_products_inner.GetReservationInvoiceInformationResponse_data_inner_reservationAdditionalProducts_inner(
                        product_id = '', 
                        sold_product_id = '', 
                        item_code = '', 
                        product_name = '', 
                        product_price = 1.337, 
                        product_quantity = 56, 
                        product_sub_total = 1.337, 
                        product_fees = 1.337, 
                        product_taxes = 1.337, 
                        product_total = 1.337, 
                        product_note = 1.337, 
                        transaction_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                reservation_additional_products_total = 1.337,
                reservation_add_on_products = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_reservation_add_on_products_inner.GetReservationInvoiceInformationResponse_data_inner_reservationAddOnProducts_inner(
                        sold_product_id = '', 
                        product_name = '', 
                        product_price = 1.337, 
                        product_quantity = 56, 
                        product_sub_total = 1.337, 
                        product_fees = 1.337, 
                        product_taxes = 1.337, 
                        product_total = 1.337, 
                        transaction_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                reservation_add_on_products_total = 1.337,
                reservation_taxes = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_reservation_taxes_inner.GetReservationInvoiceInformationResponse_data_inner_reservationTaxes_inner(
                        tax_name = '', 
                        tax_amount = 1.337, )
                    ],
                reservation_taxes_total = 1.337,
                reservation_fees = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_reservation_taxes_inner.GetReservationInvoiceInformationResponse_data_inner_reservationTaxes_inner(
                        tax_name = '', 
                        tax_amount = 1.337, )
                    ],
                reservation_fees_total = 1.337,
                balance = 1.337,
                balance_detailed = [
                    cloudbeds_pms_v1_3.models.get_reservation_invoice_information_response_data_inner_balance_detailed_inner.GetReservationInvoiceInformationResponse_data_inner_balanceDetailed_inner(
                        suggested_deposit = '', 
                        sub_total = 1.337, 
                        additional_items = 1.337, 
                        taxes_fees = 1.337, 
                        grand_total = 1.337, 
                        paid = 1.337, 
                        original_currency_code = '', 
                        original_currency_rate = 1.337, )
                    ],
                reservation_origin = ''
            )
        else:
            return GetReservationInvoiceInformationResponseDataInner(
        )
        """

    def testGetReservationInvoiceInformationResponseDataInner(self):
        """Test GetReservationInvoiceInformationResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
