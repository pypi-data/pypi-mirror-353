[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "schemapin"
version = "1.1.0"
description = "Cryptographic schema integrity verification for AI tools"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ThirdKey", email = "contact@thirdkey.ai"}
]
maintainers = [
    {name = "Jascha Wanger", email = "jascha@thirdkey.ai"}
]
keywords = [
    "cryptography",
    "schema",
    "verification",
    "ecdsa",
    "ai-tools",
    "security",
    "digital-signatures",
    "key-pinning",
    "mcp",
    "tool-integrity"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: System :: Systems Administration :: Authentication/Directory",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "cryptography>=41.0.0",
    "requests>=2.31.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "bandit>=1.7.5",
    "mypy>=1.5.0",
    "black>=23.0.0"
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0"
]

[project.urls]
Homepage = "https://github.com/thirdkey/schemapin"
Repository = "https://github.com/thirdkey/schemapin"
Documentation = "https://github.com/thirdkey/schemapin/blob/main/README.md"
"Bug Tracker" = "https://github.com/thirdkey/schemapin/issues"
Changelog = "https://github.com/thirdkey/schemapin/blob/main/CHANGELOG.md"

[project.scripts]
schemapin-keygen = "tools.keygen:main"
schemapin-sign = "tools.schema_signer:main"
schemapin-verify = "tools.verify_schema:main"

[tool.setuptools]
packages = ["schemapin", "tools"]

[tool.setuptools.package-data]
schemapin = ["py.typed"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from exceptions
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true