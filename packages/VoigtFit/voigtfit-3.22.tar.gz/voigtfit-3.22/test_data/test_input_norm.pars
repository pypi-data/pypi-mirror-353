# Test input parameter file for VoigtFit
# Simple test file where no user interaction is required for the fitting

# Define information about the data
name :  testdata_norm
z_sys:  1.7941
norm_method:  linear    # or spline
save :  testdata_norm

norm_view : velocity
mask_view : vel


# Load spectra:
#      filename     spectral resolution in km/s
# add the keyword 'norm' at the end of the line if the spectrum is normalized
# add the keyword 'air' at the end of the line if the wavelength are air wavelengths
data  'Q1313+1441/1313_VIS_1d.spec' 25.4
data  'Q1313+1441/1313_UVB_1d.spec' 37.0

# Uncomment this argument to bin the spectra by the given factor 
#fit-options rebin=2


# Continuum Fitting using Chebyshev Polynomials:
# If not given, the default is 1 (straight line)
# Use negative order to turn off the Chebyshev fitting
C_order = -1


# Uncomment to reset data for all lines in order to make a new fit iteration:
#reset
# or for some lines only:
#reset FeII_2374 FeII_2260
reset CrII_2066


# Uncomment to enable interactive masking for all lines:
mask
# Or enable interactive masking for specific lines only:
#mask CrII_2066


# Define the lines that should be included in the fit:
# The default velocity span is 500 km/s but can specified 
# for each individual lines
lines FeII_2374 velspan=500
lines FeII_2260 
lines CrII_2026 ZnII_2026
lines CrII_2056 CrII_2066
lines MgI_2852 MgI_2026
#lines HI_1215 velspan=8000


# Define components:
#         ion  z        b   logN
component FeII 1.793532 20. 14.3
component FeII 1.794060 20. 15.0
component FeII 1.794282 20. 14.3
component FeII 1.794722 20. 14.3
component FeII 1.795121 15. 14.5

# Define components using relative velocities
#         ion  rel_vel   b   logN   keyword  
#component FeII -50.     20. 14.3   velocity
#component FeII 0.       20. 15.3   velocity
#component FeII 23.      20. 14.3   velocity
#component FeII 72.      20. 14.3   velocity
#component FeII 115.     20. 14.5   velocity
 
# Define a component with a fixed b-parameter
#component HI   z=1.794060 b=20. logN=21.3 var_b=False


# Define components for FeII using the interactive window. 
# The components will be assumed for all lines from the same iron and 
# ionization state.
# The transition used for defining the components should be a strong one:
#interactive FeII_2374
# If uncommented, this argument will overwrite the components defined above


# Copy the defined components to other ions.
# The mini-language is flexible, so all of the following are accepted:
copy components to ZnII from FeII scale logN=12.9 of comp 1
copy components to CrII from FeII scale logN=13.6 of component 1
copy components from FeII to MgI and scale logN=12.4 of component 1
# The default scale applied to logN when copying components is the Solar 
# abundnace ratio. 
# If no scaling is required:
#copy components from FeII to SiII


# In order to remove components from a copied structure do the following
# (the component numbers start from 0).
#delete component 3 from CrII
#delete component 3 from ZnII


# Here the outputs printed to the terminal can be defined.
# Print total abundances for each ion:
abundance

# To print the metallicity for each ion assuming a logNHI: 
print metallicity logNHI = 21.31 +/- 0.01
# The mini-language is flexible and accepts words
# between the keywords, so the following works just
# as well as the line above:
#calculate metallicity based on logNHI  21.3   0.1

# To print the relative velocity of the different line components
# instead of redshifts, uncomment:
#output velocity


### YOU ARE READY TO VOIGTFIT! ### 
