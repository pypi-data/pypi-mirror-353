[project]
name = "pysandboxes"
version = "0.0.0"  # Set with git tag
description = "Lite sandbox for python code execution"
authors = [ {name="Philippe PRADOS", email="github@prados.fr"}]
license = "Apache 2.0"
readme = "README.md"
repository = "https://www.github.com/pprados/langgraph-codeagent"
homepage = "https://www.github.com/pprados/langgraph-codeagent"
#requires-python = ">=3.12,<4.0"
requires-python = ">=3.13"
packages = [
  { include = "pysandboxes" },
]

dependencies = [
  "langgraph (>=0.3.0)",
#  "RestrictedPython (>8.0)",
#  "backports.interpreters (>0.2); python_version < '3.14'",
  "interpreters-pep-734; python_version < '3.15'",
  "dnspython>=2.7.0",
]


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
playwright = "^1.28.0"
setuptools = "^67.6.1"
ipython = "*"
ipykernel = "*"
jupyter = "^1.0"
jupyterlab_rise = "^0.42"
pre-commit = "^3.6"
twine = "^5.1.0"
importlib-metadata = "7.2.1"
scikit-learn = "^1.6"
aiohttp = "*"

[tool.poetry.group.test.dependencies]
# The only dependencies that should be added are
# dependencies used for running tests (e.g., pytest, freezegun, response).
# Any dependencies that do not meet that criteria will be removed.
pytest = "^7.3.0"
#pytest-cov = "^4.0.0"
pytest-dotenv = "^0.5.2"
#pytest-watcher = "^0.2.6"
freezegun = "^1.2.2"
responses = "^0.22.0"
pytest-asyncio = "^0.20.3"
pytest-mock = "^3.10.0"
#pytest-socket = "^0.6.0"
syrupy = "^4.0.2"
#lark = "^1.1"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
mypy = "^1.8"
ruff = "^0.1.9"
types-toml = "^0.10.8.1"
types-redis = "^4.3.21.6"
types-pytz = "^2023.3.0.0"
black = { version = "^23.1.0", extras = ["jupiter"] }
types-chardet = "^5.0.4.6"
mypy-protobuf = "^3.0.0"
types-google-cloud-ndb = "^2.0"
types-docutils = "^0.20"
types-pyyaml = "^6.0.12.2"
types-requests = "^2.28.11.5"

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.5"

[tool.codespell]
skip = '.git,*.pdf,*.svg,*.pdf,*.yaml,*.ipynb,poetry.lock,*.min.js,*.css,package-lock.json,example_data,_dist,examples'
# Ignore latin etc
ignore-regex = '.*(Stati Uniti|Tense=Pres).*'
# whats is a typo but used frequently in queries so kept as is
# aapply - async apply
# unsecure - typo but part of API, decided to not bother for now
ignore-words-list = 'momento,collison,ned,foor,reworkd,parth,whats,aapply,mysogyny,unsecure,damon,crate'

[tool.ruff]
select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
]
exclude = [
  "tests/integration_tests/examples/non-utf8-encoding.py",
]


[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"
exclude = []

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--strict-markers --strict-config --durations=5 --snapshot-warn-unused -vv"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
  "requires: mark tests as requiring a specific library",
  "scheduled: mark tests to run in scheduled testing",
  "compile: mark placeholder test used to compile integration tests without running them"
]
asyncio_mode = "auto"



[tool.poetry-git-version-plugin]
make_alpha_version = true
alpha_version_format = '{version}a{distance}+{commit_hash}'

[tool.poetry]
version = "2.0"  # base version