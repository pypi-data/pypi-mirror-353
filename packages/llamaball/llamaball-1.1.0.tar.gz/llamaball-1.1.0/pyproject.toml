[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llamaball"
dynamic = ["version"]
description = "Accessible document chat and RAG system powered by Ollama"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Luke Steuber", email = "luke@lukesteuber.com"},
]
maintainers = [
    {name = "Luke Steuber", email = "luke@lukesteuber.com"},
]
keywords = [
    "rag",
    "document-chat", 
    "accessibility",
    "ollama",
    "embeddings",
    "ai",
    "cli",
    "local-ai"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Utilities",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "typer[all]>=0.9.0",
    "ollama>=0.1.7",
    "numpy>=1.21.0",
    "tiktoken>=0.5.0",
    "prompt_toolkit>=3.0.0",
    "markdown-it-py>=3.0.0",
    "tqdm>=4.64.0",
    "rich>=13.0.0",
    "pdfminer.six>=202010",
    "python-docx>=1.1.2",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.1",
    "beautifulsoup4>=4.9.0",
    "pypandoc>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
files = [
    "pdfminer.six>=20221105",
    "python-docx>=0.8.11",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.1",
]
performance = [
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
]
all = [
    "llamaball[dev,docs,files,performance]",
]

[project.urls]
Homepage = "https://github.com/lukeslp/llamaball"
Documentation = "https://llamaball.readthedocs.io"
Repository = "https://github.com/lukeslp/llamaball"
Issues = "https://github.com/lukeslp/llamaball/issues"
Changelog = "https://github.com/lukeslp/llamaball/blob/main/CHANGELOG.md"

[project.scripts]
llamaball = "llamaball.cli:main"

[tool.hatch.version]
path = "llamaball/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["llamaball"]

[tool.hatch.build.targets.sdist]
include = [
    "/llamaball",
    "/models",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

[tool.black]
target-version = ["py38"]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | archive
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=llamaball --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["llamaball"]
omit = ["*/tests/*", "*/archive/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 