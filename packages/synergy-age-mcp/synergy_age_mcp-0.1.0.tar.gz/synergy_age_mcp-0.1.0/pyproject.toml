[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "synergy-age-mcp"
version = "0.1.0"
description = "An MCP server for the SynergyAge database - a comprehensive resource for aging and longevity research"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SynergyAge MCP Contributors"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.7.0",
    "aiosqlite>=0.20.0",
    "sqlite-utils>=3.37",
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0",
    "pycomfort>=0.0.18",
    "huggingface-hub>=0.32.4",
]



[project.urls]
Homepage = "https://github.com/gerontomics/synergy-age-mcp"
Repository = "https://github.com/gerontomics/synergy-age-mcp"
"Bug Tracker" = "https://github.com/gerontomics/synergy-age-mcp/issues"
"Original Database" = "https://github.com/gerontomics/synergyage"

[project.scripts]
synergy-age-mcp = "synergy_age_mcp.server:cli_app_stdio"
server = "synergy_age_mcp.server:cli_app"
stdio = "synergy_age_mcp.server:cli_app_stdio"
sse = "synergy_age_mcp.server:cli_app_sse"

[tool.hatch.version]
path = "src/synergy_age_mcp/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/synergy_age_mcp"]

[tool.hatch.build]
exclude = [
    "*.log",
    "logs/",
    "images/",
    ".venv/",
    ".pytest_cache/",
    "test/",
    "*.db",
    "temp*.sqlite*",
    "test*.sqlite*",
    "debug*.sqlite*",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto" 

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sqlite-utils>=3.38",
    "just-agents-core>=0.7.4",
]
