[project]
name = "celo_mcp"
version = "0.3.2"
description = "A Model Context Protocol (MCP) server for Celo blockchain data access and functionality"
readme = "README.md"
authors = [
    { name = "viral-sangani", email = "viral.sangani2011@gmail.com" }
]
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.2.0",
    "web3>=7.0.0",
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "asyncio-throttle>=1.0.0",
    "eth-abi>=5.0.0",
    "eth-account>=0.11.0",
    "eth-utils>=4.0.0",
    "crawl4ai>=0.6.0",
    "requests>=2.31.0",
    "urllib3>=2.0.0",
    "PyYAML>=6.0.0",
]
keywords = ["mcp", "celo", "blockchain", "web3", "ai", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]

[project.urls]
Homepage = "https://github.com/viral-sangani/celo-mcp"
Repository = "https://github.com/viral-sangani/celo-mcp"
Documentation = "https://github.com/viral-sangani/celo-mcp#readme"
Issues = "https://github.com/viral-sangani/celo-mcp/issues"

[project.scripts]
celo-mcp = "celo_mcp.server:main_sync"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
target-version = "0.3.2"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]

[tool.mypy]
python_version = "0.3.2"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:websockets.legacy.*",
    "ignore::DeprecationWarning:pydantic._internal._config.*",
    "ignore::DeprecationWarning:fake_http_header.constants.*",
    "ignore::DeprecationWarning:importlib.resources._legacy.*",
    "ignore:Support for class-based.*:DeprecationWarning:pydantic.*",
    "ignore:read_text is deprecated.*:DeprecationWarning:fake_http_header.*",
    "ignore:open_text is deprecated.*:DeprecationWarning:importlib.*",
]
