[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "krait-kit"
version = "25.6.0"
description = "A versatile Python package for managing and organizing various utilities and tools, including logging, packaging, path handling, and signaled properties."
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "Adrian Valentin Panaintescu", email = "adrian.cert@gmail.com" },
]
maintainers = [
    { name = "Adrian Valentin Panaintescu", email = "adrian.cert@gmail.com" },
    { name = "Vlad Craciun", email = "craciun.vlad@yahoo.ie" },
]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = [
    # "version",
    # other dynamic fields here
]

dependencies = [
    # all dependencies here
    "importlib-metadata>=8.5",
    "pyyaml>=6.0.2",
]
optional-dependencies.all = []
entry-points."krait.transcoder".json = "msgspec.json"
entry-points."krait.transcoder".msgspec = "msgspec.msgspec"
entry-points."krait.transcoder".toml = "msgspec.toml"
entry-points."krait.transcoder".yaml = "msgspec.yaml"

[dependency-groups]
dev = [
    { include-group = "ci" },
    { include-group = "docs" },
    { include-group = "test" },
    # more groups here
]
test = [
    "covdefaults>=2.3",
    "distlib>=0.3.9",
    "hypothesis>=6.113.0",
    "pytest>=8.3.4",
    "pytest-cov>=5",
    "pytest-mock>=3.14",
    "pytest-xdist>=3.6.1",
]
docs = []
ci = ["packaging", "tomlkit"]

[tool.hatch]
metadata.allow-direct-references = true
build.packages = [
    "/packages/lib/src/krait",
    "/packages/logging/src/krait",
    "/packages/package/src/krait",
    "/packages/path/src/krait",
    "/packages/signal/src/krait",
    # more packages here
]

[tool.ruff]
lint.extend-select = ["C", "D", "FURB", "I", "N", "PL", "PTH", "SIM"]
lint.extend-ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D103", # Missing docstring in public function
]


[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.uv.workspace]
members = ["packages/*"]
