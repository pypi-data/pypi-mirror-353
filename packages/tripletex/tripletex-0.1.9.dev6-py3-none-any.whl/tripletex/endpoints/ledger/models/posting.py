"""Data models for Tripletex Posting endpoint."""

from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field

from tripletex.core.models import Change, IdRef, IdUrl, TripletexResponse


class Posting(BaseModel):
    """
    Represents a single posting line within a voucher.

    Attributes:
        id: Unique identifier.
        version: Version number.
        changes: List of changes.
        url: Resource URL.
        voucher: Link to the parent voucher.
        date: Posting date.
        description: Posting description.
        account: Ledger account used for this posting.
        amortization_account: Account used for amortization.
        amortization_start_date: Start date for amortization.
        amortization_end_date: End date for amortization.
        customer: Associated customer.
        supplier: Associated supplier.
        employee: Associated employee.
        project: Associated project.
        product: Associated product.
        department: Associated department.
        vat_type: VAT type used.
        amount: Amount in base currency (net).
        amount_currency: Amount in specified currency (net).
        amount_gross: Amount in base currency (gross).
        amount_gross_currency: Amount in specified currency (gross).
        currency: Currency used for _currency amounts.
        close_group: Link to the closing group.
        invoice_number: Associated invoice number.
        term_of_payment: Payment terms.
        row: Row number within the voucher.
        type: Posting type.
        external_ref: External reference.
        system_generated: Was the posting generated by the system?
        tax_transaction_type: SAF-T tax transaction type.
        tax_transaction_type_id: ID for SAF-T tax transaction type.
        matched: Is the posting matched?
        quantity_amount1: Amount for the first quantity type.
        quantity_type1: First quantity type.
        quantity_amount2: Amount for the second quantity type.
        quantity_type2: Second quantity type.
        is_vat_readonly: Is the VAT information read-only?
        is_amount_vat_closed: Is the amount VAT closed?
        posting_rule_id: ID of the posting rule applied.
    """

    id: Optional[int] = None
    version: Optional[int] = None
    changes: Optional[List[Change]] = None
    url: Optional[str] = None
    voucher: Optional[IdUrl] = None
    date: Optional[str] = None
    description: Optional[str] = None
    account: Optional[IdUrl] = None
    amortization_account: Optional[IdUrl] = Field(None, alias="amortizationAccount")
    amortization_start_date: Optional[str] = Field(None, alias="amortizationStartDate")
    amortization_end_date: Optional[str] = Field(None, alias="amortizationEndDate")
    customer: Optional[IdUrl] = None
    supplier: Optional[IdUrl] = None
    employee: Optional[IdUrl] = None
    project: Optional[IdUrl] = None
    product: Optional[IdUrl] = None
    department: Optional[IdUrl] = None
    vat_type: Optional[IdUrl] = Field(None, alias="vatType")
    amount: Optional[float] = None
    amount_currency: Optional[float] = Field(None, alias="amountCurrency")
    amount_gross: Optional[float] = Field(None, alias="amountGross")
    amount_gross_currency: Optional[float] = Field(None, alias="amountGrossCurrency")
    currency: Optional[IdUrl] = None
    close_group: Optional[IdUrl] = Field(None, alias="closeGroup")
    invoice_number: Optional[str] = Field(None, alias="invoiceNumber")
    term_of_payment: Optional[str] = Field(None, alias="termOfPayment")
    row: Optional[int] = None
    type: Optional[str] = None
    external_ref: Optional[str] = Field(None, alias="externalRef")
    system_generated: Optional[bool] = Field(None, alias="systemGenerated")
    tax_transaction_type: Optional[str] = Field(None, alias="taxTransactionType")
    tax_transaction_type_id: Optional[int] = Field(None, alias="taxTransactionTypeId")
    matched: Optional[bool] = None
    quantity_amount1: Optional[float] = Field(None, alias="quantityAmount1")
    quantity_type1: Optional[IdUrl] = Field(None, alias="quantityType1")
    quantity_amount2: Optional[float] = Field(None, alias="quantityAmount2")
    quantity_type2: Optional[IdUrl] = Field(None, alias="quantityType2")
    is_vat_readonly: Optional[bool] = Field(None, alias="isVatReadonly")
    is_amount_vat_closed: Optional[bool] = Field(None, alias="isAmountVatClosed")
    posting_rule_id: Optional[int] = Field(None, alias="postingRuleId")

    model_config = ConfigDict(populate_by_name=True)


class PostingCreate(BaseModel):
    """
    Model for creating a new posting.

    Contains required fields for posting creation and optional fields
    that can be set during creation.
    """

    voucher: Optional[IdRef] = None
    date: Optional[str] = None
    description: str
    account: IdRef
    amortization_account: Optional[IdRef] = Field(None, alias="amortizationAccount")
    amortization_start_date: Optional[str] = Field(None, alias="amortizationStartDate")
    amortization_end_date: Optional[str] = Field(None, alias="amortizationEndDate")
    customer: Optional[IdRef] = None
    supplier: Optional[IdRef] = None
    employee: Optional[IdRef] = None
    project: Optional[IdRef] = None
    product: Optional[IdRef] = None
    department: Optional[IdRef] = None
    vat_type: Optional[IdRef] = Field(None, alias="vatType")
    amount: float
    amount_currency: Optional[float] = Field(None, alias="amountCurrency")
    amount_gross: Optional[float] = Field(None, alias="amountGross")
    amount_gross_currency: Optional[float] = Field(None, alias="amountGrossCurrency")
    currency: Optional[IdRef] = None
    close_group: Optional[IdRef] = Field(None, alias="closeGroup")
    invoice_number: Optional[str] = Field(None, alias="invoiceNumber")
    term_of_payment: Optional[str] = Field(None, alias="termOfPayment")
    # Row is required when creating postings within a voucher
    row: int = Field(..., gt=0, description="Row number within the voucher (must be > 0)")
    type: Optional[str] = None
    external_ref: Optional[str] = Field(None, alias="externalRef")
    quantity_amount1: Optional[float] = Field(None, alias="quantityAmount1")
    quantity_type1: Optional[IdRef] = Field(None, alias="quantityType1")
    quantity_amount2: Optional[float] = Field(None, alias="quantityAmount2")
    quantity_type2: Optional[IdRef] = Field(None, alias="quantityType2")

    model_config = ConfigDict(populate_by_name=True)


class PostingUpdate(BaseModel):
    """
    Model for updating an existing posting.

    All fields are optional since only fields that need to be changed
    are included in update requests.
    """

    voucher: Optional[IdUrl] = None
    date: Optional[str] = None
    description: Optional[str] = None
    account: Optional[IdUrl] = None
    amortization_account: Optional[IdUrl] = Field(None, alias="amortizationAccount")
    amortization_start_date: Optional[str] = Field(None, alias="amortizationStartDate")
    amortization_end_date: Optional[str] = Field(None, alias="amortizationEndDate")
    customer: Optional[IdUrl] = None
    supplier: Optional[IdUrl] = None
    employee: Optional[IdUrl] = None
    project: Optional[IdUrl] = None
    product: Optional[IdUrl] = None
    department: Optional[IdUrl] = None
    vat_type: Optional[IdUrl] = Field(None, alias="vatType")
    amount: Optional[float] = None
    amount_currency: Optional[float] = Field(None, alias="amountCurrency")
    amount_gross: Optional[float] = Field(None, alias="amountGross")
    amount_gross_currency: Optional[float] = Field(None, alias="amountGrossCurrency")
    currency: Optional[IdUrl] = None
    close_group: Optional[IdUrl] = Field(None, alias="closeGroup")
    invoice_number: Optional[str] = Field(None, alias="invoiceNumber")
    term_of_payment: Optional[str] = Field(None, alias="termOfPayment")
    row: Optional[int] = None
    type: Optional[str] = None
    external_ref: Optional[str] = Field(None, alias="externalRef")
    quantity_amount1: Optional[float] = Field(None, alias="quantityAmount1")
    quantity_type1: Optional[IdUrl] = Field(None, alias="quantityType1")
    quantity_amount2: Optional[float] = Field(None, alias="quantityAmount2")
    quantity_type2: Optional[IdUrl] = Field(None, alias="quantityType2")

    model_config = ConfigDict(populate_by_name=True)


class PostingResponse(TripletexResponse[Posting]):
    """Response wrapper for a list of Posting objects."""
