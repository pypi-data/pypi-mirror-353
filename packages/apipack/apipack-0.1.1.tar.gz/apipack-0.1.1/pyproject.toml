[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "apipack"
version = "0.1.1"
description = "Automated API package generator with LLM integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "APIpack Team", email = "team@apipack.dev"}
]
maintainers = [
    {name = "APIpack Team", email = "team@apipack.dev"}
]
keywords = ["api", "generator", "llm", "mistral", "templates", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "jinja2>=3.0.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "ollama>=0.1.7",
    "docker>=6.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "watchdog>=3.0.0",
    "gitpython>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "isort>=5.12",
]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.2",
    "myst-parser>=2.0",
    "sphinx-autodoc-typehints>=1.23",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0",
    "responses>=0.23.0",
]
deploy = [
    "kubernetes>=26.0",
    "ansible>=8.0",
    "terraform>=1.0",
]
all = [
    "apipack[dev,docs,test,deploy]"
]

[project.urls]
Homepage = "https://github.com/apipack/apipack"
Documentation = "https://apipack.readthedocs.io/"
Repository = "https://github.com/apipack/apipack"
"Bug Tracker" = "https://github.com/apipack/apipack/issues"
Changelog = "https://github.com/apipack/apipack/blob/main/CHANGELOG.md"

[project.scripts]
apipack = "apipack.cli:main"

[project.entry-points."apipack.plugins"]
rest = "apipack.plugins.builtin.rest:RestPlugin"
grpc = "apipack.plugins.builtin.grpc:GrpcPlugin"
graphql = "apipack.plugins.builtin.graphql:GraphQLPlugin"
websocket = "apipack.plugins.builtin.websocket:WebSocketPlugin"
cli = "apipack.plugins.builtin.cli:CliPlugin"

[tool.setuptools]
packages = ["apipack"]
include-package-data = true

[tool.setuptools.package-data]
apipack = [
    "templates/**/*",
    "config/**/*",
    "plugins/builtin/**/*",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | \.tox
  | build
  | dist
  | \.eggs
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ollama.*",
    "docker.*",
    "kubernetes.*",
    "ansible.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=apipack",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["apipack"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]