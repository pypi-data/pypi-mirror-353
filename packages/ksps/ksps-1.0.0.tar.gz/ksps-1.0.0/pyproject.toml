[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ksps"
version = "1.0.0"
description = "KPS - Ksmux Pub Sub: Client Python ultra-performant pour système pub/sub basé sur ksmux"
readme = "README_PYTHON.md"
license = {text = "MIT"}
authors = [
    {name = "Kamal Shkeir", email = "kamalshkeir@gmail.com"}
]
keywords = ["pubsub", "websocket", "realtime", "messaging", "asyncio", "ksps", "ksmux", "kamal"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Framework :: AsyncIO",
]
requires-python = ">=3.11"
dependencies = [
    "websockets>=12.0",
    "orjson>=3.9.10",
    "uvloop>=0.19.0; sys_platform != 'win32'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
mqtt = [
    "asyncio-mqtt>=0.16.1",
]
files = [
    "aiofiles>=23.2.1",
]
all = [
    "ksps[dev,mqtt,files]"
]

[project.urls]
Homepage = "https://github.com/kamalshkeir/bbus"
Repository = "https://github.com/kamalshkeir/bbus"
Documentation = "https://github.com/kamalshkeir/bbus/blob/main/README.md"

[project.scripts]
ksps-test = "ksps.test:main"

[tool.hatch.build.targets.wheel]
packages = ["src/ksps"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
] 