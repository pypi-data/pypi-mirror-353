[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["detector"]

[project]
name = "dart-detection"
version = "0.1.2"
description = "A Python package for automatic dart detection and scoring using computer vision "
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
authors = [
    { name = "David Mall", email = "mall.david@web.de" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Image Recognition",
]
keywords = ["dart", "detection", "computer-vision", "yolo", "scoring"]
dependencies = [
    "numpy>=2.2.6",
    "opencv-python>=4.11.0.86",
    "pydantic>=2.11.5",
    "ultralytics>=8.3.147",
]

[project.scripts]
dart-scorer = "detector.script.image_scorer_demo:main"
calibration-visualizer = "detector.script.visualizer_demo:main"

[project.urls]
Repository = "https://github.com/dmall00/dart-detection"
Issues = "https://github.com/dmall00/dart-detection/issues"
Documentation = "https://github.com/dmall00/dart-detection#readme"

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "pytest>=8.4.0",
    "ruff>=0.11.12",
]

[tool.ruff]
line-length = 140
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "PGH003",
    "T201",
    "D105",
    "D107",
    "D203",
    "D212",
    "UP006",
    "UP007",
    "D400",
    "D406",
    "D407",
    "PLC1901",
    "UP035",
    "COM812", # Conflicts with formatter
]
unfixable = ["F401", "F841"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN001", "ANN002", "ANN003", "D103", "BLE001", "S101", "D103", "INP001"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[[tool.mypy.overrides]]
module = ["ultralytics.*"]
ignore_missing_imports = true


[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = ["tests"]
addopts = "-v --log-cli-level=INFO --log-cli-format='%(asctime)s [%(levelname)8s] %(name)s: %(message)s'"
