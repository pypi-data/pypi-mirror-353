[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "streetscapes"
version = "0.3.2"
requires-python = ">= 3.11"
dependencies = [
    "awkward",
    "black",
    "cloup",
    "contextily",
    "duckdb",
    "ephem",
    "environs",
    "fiona",
    "geodatasets",
    "geopandas",
    "h3",
    "h5netcdf",
    "humanize",
    "huggingface_hub[cli]",
    "ibis-framework[duckdb]",
    "ipykernel",
    "ipywidgets",
    "loguru",
    "matplotlib",
    "numpy",
    "osmnx",
    "pandas",
    "pyarrow",
    "pyproj",
    "rasterio",
    "rich",
    "sam2",
    "seedir",
    "scikit-image",
    "scipy",
    "timezonefinder",
    "torch",
    "torchvision",
    "tqdm",
    "transformers",
]
authors = [
    { name = "Claire Donnelly", email = "c.donnelly@esciencecenter.nl" },
    { name = "Alexander Hadjiivanov", email = "a.hadjiivanov@esciencecenter.nl" },
    { name = "Peter Kalverla", email = "p.kalverla@esciencecenter.nl" },
]
description = "Code for downloading, segmenting and analysing images from Mapillary and KartaView, with the aim of extracting the emissivity and albedo of buildings."
readme = "README.md"
license = { file = "LICENCE.md" }

[project.scripts]
streetscapes = "streetscapes.main:main"

[project.optional-dependencies]
dev = [
    "ruff",
    "py-spy",
    "mike",
    "mkdocs",
    "mkdocstrings[python]",
    "mkdocs-material",
    "mkdocs-jupyter",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

indent-width = 4

[tool.ruff.format]
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
from-first = false
force-single-line = true
force-sort-within-sections = true
length-sort = true
lines-after-imports = 1
order-by-type = true
forced-separate = [
    "typing",
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
    "streetscapes",
]
relative-imports-order = "closest-to-furthest"
