# Generated by Django 3.2.14 on 2024-02-14 12:54

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('annotation_template', '0003_auto_20240201_0123'),
    ]

    operations = [
        migrations.DeleteModel(
            name='annotation_template',
        ),
        migrations.CreateModel(
            name='AnnotationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('group', models.TextField(verbose_name='group')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='updated at')),
                ('author_id', models.IntegerField(verbose_name='author id')),
                ('order', models.IntegerField(verbose_name='order')),
                ('image', models.TextField(blank=True, null=True, default='', verbose_name='image')),
                ('details', models.TextField(blank=True, null=True, default='',verbose_name='ml details')),
                ('ml_image', models.TextField(blank=True, null=True, default='',verbose_name='ml_image')),
                ('ml_ip', models.TextField(blank=True, null=True, default='',verbose_name='ml_ip')),
                ('ml_port', models.TextField(blank=True, null=True, default='',verbose_name='ml_port')),
                ('config', models.TextField(blank=True, null=True, default='',verbose_name='config')),
                ('status', models.BooleanField(default=False, verbose_name='status')),
                ('infrastructure_id', models.TextField(blank=True, null=True, default='', verbose_name='infrastructure id')),
                ('data_type', models.TextField(blank=True, null=True, default='',verbose_name='data_type')),
            ],
            options={
                'db_table': 'annotation_template_annotation_template',
            },
        ),
#         migrations.RunSQL("""
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (68, 'Object Detection with Bounding Boxes', '2024-02-12 08:48:08.449962+00', '2024-02-12 08:48:08.449975+00', 1, 3, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/yolov8_bbox', '108.181.196.144', '8027', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (69, 'Multi-page document annotation', '2024-02-12 08:48:08.454436+00', '2024-02-12 08:48:08.454447+00', 1, 0, '/static/templates/multipage.png', '<h1>Classify PDF documents</h1>', NULL, NULL, NULL, '<View>
#       <Repeater on="$document" indexFlag="{{idx}}" mode="pagination">
#           <Image name="page_{{idx}}" value="$document[{{idx}}].page" inline="true"/>
#           <RectangleLabels name="labels_{{idx}}" toName="page_{{idx}}">
#             <Label value="Title" background="green" />
#             <Label value="Date" background="blue" />
#             <Label value="Author" background="yellow"/>
#             <Label value="Organization" background="orange"/>
#             <Label value="Amount" background="red"/>
#           </RectangleLabels>
#           <View style="display: flex; justify-content: center; align-items: center; gap: 1rem;">
#             <Header value="Rate this page:"/>
#             <Rating name="rating_{{idx}}" toName="page_{{idx}}"/>
#           </View>
#       </Repeater>
#       <View style="display:none" class="example">
#     [
#       {
#         "document": [
#           {
#             "page": "/static/samples/trees_in_snow.jpg"
#           },
#           {
#             "page": "/static/samples/trees_in_snow.jpg"
#           },
#           {
#             "page": "/static/samples/trees_in_snow.jpg"
#           }
#         ]
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (70, 'Semantic Segmentation with Masks', '2024-02-12 08:48:08.458804+00', '2024-02-12 08:48:08.458816+00', 1, 2, '/static/templates/semantic-segmentation-with-masks.png', '<h1>Draw masks around the object with the brush tool</h1>', 'wowai/semantic_segmentation_with_masks_detectron2', '108.181.196.144', '8016', '<View>
#       <Image name="image" value="$image" zoom="true"/>
#       <BrushLabels name="tag" toName="image">
#         <Label value="Airplane" background="rgba(255, 0, 0, 0.7)"/>
#         <Label value="Car" background="rgba(0, 0, 255, 0.7)"/>
#       </BrushLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Detectron2', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (71, 'Semantic Segmentation with Polygons', '2024-02-12 08:48:08.463108+00', '2024-02-12 08:48:08.46312+00', 1, 1, '/static/templates/semantic-segmentation-with-polygons.png', '<h1>Draw a polygon around object</h1>', 'wowai/semantic_segmentation_with_polygons_detectron2', '108.181.196.144', '8016', '<View>

#       <Header value="Select label and click the image to start"/>
#       <Image name="image" value="$image" zoom="true"/>

#       <PolygonLabels name="label" toName="image"
#                      strokeWidth="3" pointSize="small"
#                      opacity="0.9">
#         <Label value="Airplane" background="red"/>
#         <Label value="Car" background="blue"/>
#       </PolygonLabels>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Detectron2', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (72, 'Llama Meta 2', '2024-02-12 08:48:08.467684+00', '2024-02-12 08:48:08.467696+00', 1, 2, '/static/templates/semantic-segmentation-with-masks.png', '<h1>Draw masks around the object with the brush tool</h1>', 'wowai/llama_meta_2', '108.181.196.144', '8018', '<View>
#       <Image name="image" value="$image" zoom="true"/>
#       <BrushLabels name="tag" toName="image">
#         <Label value="Airplane" background="rgba(255, 0, 0, 0.7)"/>
#         <Label value="Car" background="rgba(0, 0, 255, 0.7)"/>
#       </BrushLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Large Language Model', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (74, 'Flan T5', '2024-02-12 08:48:08.471841+00', '2024-02-12 08:48:08.471853+00', 1, 1, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/falcon7b', '108.181.196.144', '8013', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Large Language Model', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (75, 'Dino V2', '2024-02-12 08:48:08.471841+00', '2024-02-12 08:48:08.471853+00', 1, 1, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/falcon7b', '108.181.196.144', '8013', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (76, 'Seamless M4T', '2024-02-12 08:48:08.471841+00', '2024-02-12 08:48:08.471853+00', 1, 1, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/falcon7b', '108.181.196.144', '8013', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (2, 'Signal Quality Detection', '2024-02-12 08:48:08.062849+00', '2024-02-12 08:48:08.062891+00', 1, 0, '/static/templates/signal-quality-detection.png', '<h1>Rate signal quality</h1>', 'wowai/llama_meta_2', '108.181.196.144', '8018', '<View>
#       <Rating name="rating" toName="audio" maxRating="10" icon="star" size="medium" />
#       <Audio name="audio" value="$audio"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/audio/sample-15s.mp3"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (3, 'Automatic Speech Recognition', '2024-02-12 08:48:08.084979+00', '2024-02-12 08:48:08.085+00', 1, 0, '/static/templates/automatic-speech-recognition.png', '<h1>Provide transcript for the audio</h1>', 'wowai/automatic_speech_recognition', '108.181.196.144', '8010', '<View>
#       <Audio name="audio" value="$audio" zoom="true" hotkey="ctrl+enter" />
#       <Header value="Provide Transcription" />
#       <TextArea name="transcription" toName="audio"
#                 rows="4" editable="true" maxSubmissions="1" />

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/audio/sample-15s.mp3"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (4, 'Sound Event Detection', '2024-02-12 08:48:08.092201+00', '2024-02-12 08:48:08.092222+00', 1, 0, '/static/templates/sound-event-detection.png', '<h1>Select audio span and classify sound event</h1>', 'wowai/llama_meta_2', '108.181.196.144', '8018', '<View>
#       <Labels name="label" toName="audio" zoom="true" hotkey="ctrl+enter">
#         <Label value="Event A" background="red"/>
#         <Label value="Event B" background="green"/>
#       </Labels>
#       <AudioPlus name="audio" value="$audio"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/audio/sample-15s.mp3"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (5, 'Automatic Speech Recognition using Segments', '2024-02-12 08:48:08.100321+00', '2024-02-12 08:48:08.100341+00', 1, 0, '/static/templates/automatic-speech-recognition-using-segments.png', '<h1>Do voice activity segmentation and provide a transcript for the audio</h1>', 'wowai/automatic_speech_recognition_using_segments', '108.181.196.144', '8018', '<View>
#       <View className="lsf-sticky">
#         <Labels name="labels" toName="audio">
#           <Label value="Speech" />
#           <Label value="Noise" />
#         </Labels>

#         <AudioPlus name="audio" value="$audio"/>
#       </View>

#       <View style="margin-top: 2em;">
#         <Transcription name="transcription" toName="audio" />
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/audio/sample-15s.mp3"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (6, 'Speaker Segmentation', '2024-02-12 08:48:08.106531+00', '2024-02-12 08:48:08.10655+00', 1, 0, '/static/templates/speaker-segmentation.png', '<h1>Perform speaker segmentation / diarization task</h1>', 'wowai/llama_meta_2', '108.181.196.144', '8018', '<View>
#       <Labels name="label" toName="audio" zoom="true" hotkey="ctrl+enter">
#         <Label value="Speaker one" background="#00FF00"/>
#         <Label value="Speaker two" background="#12ad59"/>
#       </Labels>
#       <AudioPlus name="audio" value="$audio" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/audio/sample-15s.mp3"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (7, 'Intent Classification', '2024-02-12 08:48:08.114014+00', '2024-02-12 08:48:08.114034+00', 1, 0, '/static/templates/intent-classification.png', '<h1>Do voice activity segmentation and choose spoken intent</h1>', 'wowai/llama_meta_2', '108.181.196.144', '8018', '<View>
#       <Labels name="labels" toName="audio">
#         <Label value="Segment" />
#       </Labels>

#       <AudioPlus name="audio" value="$audio"/>

#       <Choices name="intent" toName="audio" perRegion="true" required="true">
#         <Choice value="Question" />
#         <Choice value="Request" />
#         <Choice value="Satisfied" />
#         <Choice value="Interested" />
#         <Choice value="Unsatisfied" />
#       </Choices>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/audio/sample-15s.mp3"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (29, 'Machine Translation', '2024-02-12 08:48:08.263369+00', '2024-02-12 08:48:08.263381+00', 1, 0, '/static/templates/machine-translation.png', '<h1>Translate text from one language to another</h1>', NULL, NULL, NULL, '<View>
#       <View style="display: grid; grid-template: auto/1fr 1fr; column-gap: 1em">
#         <Header value="Read the sentence in source language" />
#         <Header value="Provide translaton in destination language" />

#         <Text name="text" value="$text" />

#         <TextArea name="translation" toName="text" transcription="true"
#                   showSubmitButton="true" maxSubmissions="1" editable="true"
#                   required="true"/>
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere."
#         }
#       }
#     ]
#       </View>
#     </View>', 'f', ' ', 'Natural Language Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (8, 'Automatic Speech Recognition using Segments MMS', '2024-02-12 08:48:08.120952+00', '2024-02-12 08:48:08.120968+00', 1, 0, '/static/templates/automatic-speech-recognition-using-segments.png', '<h1>Do voice activity segmentation and provide a transcript for the audio</h1>', 'wowai/automatic_speech_recognition_using_segments_mms', '108.181.196.144', '8018', '<View>
#       <View className="lsf-sticky">
#         <Labels name="labels" toName="audio">
#           <Label value="Speech" />
#           <Label value="Noise" />
#         </Labels>

#         <AudioPlus name="audio" value="$audio"/>
#       </View>

#       <View style="margin-top: 2em;">
#         <Transcription name="transcription" toName="audio" />
#       </View>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/audio/sample-15s.mp3"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (9, 'Text speech', '2024-02-12 08:48:08.128842+00', '2024-02-12 08:48:08.128862+00', 1, 1, '/static/templates/text-summarization.png', '<h1>Provide one text</h1>', 'wowai/llama_meta_2', '108.181.196.144', '8018', '<View>
#       <Header value="Please read the text" />
#       <Text name="text" value="$text" />

#       <Header value="Audio generative" />
#       <Audio name="audio" value="$audio" zoom="true" hotkey="ctrl+enter" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Nullam lobortis a ipsum quis malesuada. Mauris dictum justo quis libero cursus, eget eleifend lectus cursus."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Audio/Speech Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (10, 'Automatic License Plate Recognition', '2024-02-12 08:48:08.135205+00', '2024-02-12 08:48:08.13522+00', 1, 3, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/yolov8_alpr', '108.181.196.144', '8037', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Yolov8', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (11, 'Semantic Segmentation with Masks', '2024-02-12 08:48:08.14222+00', '2024-02-12 08:48:08.14224+00', 1, 2, '/static/templates/semantic-segmentation-with-masks.png', '<h1>Draw masks around the object with the brush tool</h1>', 'wowai/yolov8_polygon', '108.181.196.144', '8028', '<View>
#       <Image name="image" value="$image" zoom="true"/>
#       <BrushLabels name="tag" toName="image">
#         <Label value="Airplane" background="rgba(255, 0, 0, 0.7)"/>
#         <Label value="Car" background="rgba(0, 0, 255, 0.7)"/>
#       </BrushLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Yolov8', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (12, 'Semantic Segmentation with Polygons', '2024-02-12 08:48:08.148728+00', '2024-02-12 08:48:08.148749+00', 1, 1, '/static/templates/semantic-segmentation-with-polygons.png', '<h1>Draw a polygon around object</h1>', 'wowai/yolov8_polygon', '108.181.196.144', '8028', '<View>

#       <Header value="Select label and click the image to start"/>
#       <Image name="image" value="$image" zoom="true"/>

#       <PolygonLabels name="label" toName="image"
#                      strokeWidth="3" pointSize="small"
#                      opacity="0.9">
#         <Label value="Airplane" background="red"/>
#         <Label value="Car" background="blue"/>
#       </PolygonLabels>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Yolov8', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (13, 'Object Detection with Bounding Boxes', '2024-02-12 08:48:08.155685+00', '2024-02-12 08:48:08.155702+00', 1, 3, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/yolov8_bbox', '108.181.196.144', '8027', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Yolov8', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (14, 'Intent Classification and Slot Filling', '2024-02-12 08:48:08.162421+00', '2024-02-12 08:48:08.162436+00', 1, 0, '/static/templates/intent-classification-and-slot-filling.png', '<h1>Build task-oriented dialogue system by selecting dialogue intents and extracting slot entities</h1>', NULL, NULL, NULL, '<View>
#       <ParagraphLabels name="entity_slot" toName="dialogue">
#         <Label value="Person" />
#         <Label value="Organization" />
#         <Label value="Location" />
#         <Label value="Datetime" />
#         <Label value="Quantity" />
#       </ParagraphLabels>
#       <Paragraphs name="dialogue" value="$dialogue" layout="dialogue" />
#       <Choices name="intent" toName="dialogue"
#            choice="single" showInLine="true">
#           <Choice value="Greeting"/>
#           <Choice value="Customer request"/>
#           <Choice value="Small talk"/>
#       </Choices>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "dialogue": [
#             {
#               "author": "User 1",
#               "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aliquam elementum nibh ac dolor tempus ornare. Vestibulum sagittis mollis mauris vitae tincidunt. Mauris auctor euismod iaculis. Proin dignissim arcu sed massa euismod, eu placerat metus cursus. Donec lectus eros, vestibulum nec posuere sed, condimentum vitae diam. Morbi elementum massa at lectus rhoncus bibendum. Integer sit amet eros placerat, vehicula tellus eu, fringilla urna. Curabitur lacus libero, auctor eget leo in, fringilla ullamcorper tortor."
#             },
#             {
#               "author": "User 2",
#               "text": "Cras mollis, quam at bibendum tempus, lectus nisl commodo ante, et imperdiet odio nisl eu lorem. Vestibulum vitae faucibus nisi. Integer auctor sed libero euismod consequat. Nam convallis volutpat orci et sollicitudin. Sed pulvinar ante ut velit viverra convallis. Vivamus enim nunc, scelerisque at augue vitae, sagittis consectetur tortor."
#             }
#           ]
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Conversational AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (46, 'Time Series Forecasting', '2024-02-12 08:48:08.352737+00', '2024-02-12 08:48:08.352748+00', 1, 0, '/static/templates/time-series-forecasting.png', '<h1>Prepare training data for time series forecasting models</h1>', NULL, NULL, NULL, '<View>
#         <!-- Control tag for region labels -->
#         <Header value="Select predictable region spans in time series:"/>
#         <TimeSeriesLabels name="predictable" toName="stock">
#             <Label value="Regions" background="red" />
#         </TimeSeriesLabels>

#         <!-- Object tag for time series data source -->
#         <TimeSeries name="stock" valueType="url" value="$csv"
#                     sep=","
#                     timeColumn="time"
#                     timeFormat="%Y-%m-%d %H:%M:%S.%f"
#                     timeDisplayFormat="%Y-%m-%d"
#                     overviewChannels="value">

#             <Channel column="value"
#                      displayFormat=",.1f"
#                      strokeColor="#1f77b4"
#                      legend="Stock Value"/>
#         </TimeSeries>
#         <Header value="Forecast next trend:"/>
#         <Choices name="trend_forecast" toName="stock">
#             <Choice value="Up"/>
#             <Choice value="Down"/>
#             <Choice value="Steady"/>
#         </Choices>
#     </View>
#     ', 'f', ' ', 'Time Series Analysis', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (15, 'Response Generation', '2024-02-12 08:48:08.17045+00', '2024-02-12 08:48:08.17047+00', 1, 0, '/static/templates/response-generation.png', '<h1>Collect chatbot training data by generating next dialogue response</h1>', NULL, NULL, NULL, '<View>
#       <Paragraphs name="chat" value="$dialogue" layout="dialogue" />
#       <Header value="Provide response" />
#       <TextArea name="response" toName="chat" rows="4" editable="true" maxSubmissions="1" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "dialogue": [
#             {
#               "author": "User 1",
#               "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aliquam elementum nibh ac dolor tempus ornare. Vestibulum sagittis mollis mauris vitae tincidunt. Mauris auctor euismod iaculis. Proin dignissim arcu sed massa euismod, eu placerat metus cursus. Donec lectus eros, vestibulum nec posuere sed, condimentum vitae diam. Morbi elementum massa at lectus rhoncus bibendum. Integer sit amet eros placerat, vehicula tellus eu, fringilla urna. Curabitur lacus libero, auctor eget leo in, fringilla ullamcorper tortor."
#             },
#             {
#               "author": "User 2",
#               "text": "Cras mollis, quam at bibendum tempus, lectus nisl commodo ante, et imperdiet odio nisl eu lorem. Vestibulum vitae faucibus nisi. Integer auctor sed libero euismod consequat. Nam convallis volutpat orci et sollicitudin. Sed pulvinar ante ut velit viverra convallis. Vivamus enim nunc, scelerisque at augue vitae, sagittis consectetur tortor."
#             }
#           ]
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Conversational AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (16, 'Response Selection', '2024-02-12 08:48:08.177579+00', '2024-02-12 08:48:08.177593+00', 1, 0, '/static/templates/response-selection.png', '<h1>Collect chatbot training data by selecting next dialogue response</h1>', NULL, NULL, NULL, '<View>
#       <Paragraphs name="prg" value="$dialogue" layout="dialogue" />
#       <Header value="Choose response" />
#       <View style="display: flex;">
#         <View style="margin-top: 1.55em">
#           <View style="height: 40px">
#             <Text name="resp1" value="$respone" />
#           </View>
#           <View style="height: 40px">
#             <Text name="resp2" value="$resptwo" />
#           </View>
#           <View style="height: 40px">
#             <Text name="resp3" value="$respthree" />
#           </View>
#         </View>
#         <View>
#           <Choices name="resp" toName="prg" required="true">
#             <Choice value="One" />
#             <Choice value="Two" />
#             <Choice value="Three" />
#           </Choices>
#         </View>
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "dialogue": [
#             {
#               "author": "User 1",
#               "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aliquam elementum nibh ac dolor tempus ornare. Vestibulum sagittis mollis mauris vitae tincidunt. Mauris auctor euismod iaculis. Proin dignissim arcu sed massa euismod, eu placerat metus cursus. Donec lectus eros, vestibulum nec posuere sed, condimentum vitae diam. Morbi elementum massa at lectus rhoncus bibendum. Integer sit amet eros placerat, vehicula tellus eu, fringilla urna. Curabitur lacus libero, auctor eget leo in, fringilla ullamcorper tortor."
#             },
#             {
#               "author": "User 2",
#               "text": "Cras mollis, quam at bibendum tempus, lectus nisl commodo ante, et imperdiet odio nisl eu lorem. Vestibulum vitae faucibus nisi. Integer auctor sed libero euismod consequat. Nam convallis volutpat orci et sollicitudin. Sed pulvinar ante ut velit viverra convallis. Vivamus enim nunc, scelerisque at augue vitae, sagittis consectetur tortor."
#             }
#           ]
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Conversational AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (17, 'Coreference Resolution & Entity Linking', '2024-02-12 08:48:08.182696+00', '2024-02-12 08:48:08.182712+00', 1, 0, '/static/templates/coreference-resolution-and-entity-linking.png', '<h1>Do coreference resolution between parts of speech and link entities in text</h1>', NULL, NULL, NULL, '<View>
#       <Labels name="label" toName="text">
#         <Label value="Noun" background="red"/>
#         <Label value="Pronoun" background="darkorange"/>
#       </Labels>

#       <Text name="text" value="$text"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Nullam lobortis a ipsum quis malesuada. Mauris dictum justo quis libero cursus, eget eleifend lectus cursus."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Conversational AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (18, 'Chatbot Model Assessment', '2024-02-12 08:48:08.194539+00', '2024-02-12 08:48:08.194556+00', 1, 3, '/static/templates/generative-chatbot-assessment.png', 'Collecting expert assessments of LLM-generated responses for quality assurance and model evaluation. This stage involves evaluating the model''s responses based on criteria like correctness, relevance, and safety, which provides valuable feedback for further model refinement and helps ensure the final LLM meets desired performance standards.', NULL, NULL, NULL, '<View>
#       <Style>
#         .container {
#           display: flex;
#           justify-content: space-between;
#           margin: 0 auto;
#           padding: 20px;
#           background-color: #ffffff;
#           border-radius: 5px;
#           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1), 0 6px 20px 0 rgba(0, 0, 0, 0.1);
#           max-width: 800px;
#         }

#         .text-block {
#           flex: 1;
#           margin-right: 20px;
#         }

#         .assessment-items-container {
#           flex: 1;
#           display: flex;
#           flex-direction: column;
#           gap: 20px;
#         }

#         .assessment-item {
#           background-color: rgba(44, 62, 80, 0.6);
#           padding: 1px;
#           border-radius: 5px;
#           box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.1);
#           color: #ffffff;
#           word-wrap: break-word;
#         }
#       </Style>
#       <Header style="margin: 0 auto; width: 50%; margin-bottom: 0.5em;">InstructGPT Assessment</Header>
#       <View className="container">
#         <View className="text-block">
#           <Paragraphs name="dialogue" value="$messages" layout="dialogue" nameKey="role" textKey="content" />
#         </View>
#         <View className="assessment-item-container">
#           <Header value="Overall quality Likert scale; 1-7" size="8" />
#           <View className="assessment-item">
#             <Rating name="likert_scale" maxRating="7" />
#           </View>
#           <Header value="Fails to follow the correct instruction / task" size="8" />
#           <View className="assessment-item">
#             <Choices name="fails_to_follow" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>

#           <Header value="Inappropriate for customer assistant" size="8" />
#           <View className="assessment-item">
#             <Choices name="inappropriate_for_customer" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>

#           <Header value="Hallucination" size="8" />
#           <View className="assessment-item">
#             <Choices name="hallucination" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>

#           <Header value="Satisfies constraint provided in the instruction" size="8" />
#           <View className="assessment-item">
#             <Choices name="satisfies_constraint" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>

#           <Header value="Contains sexual content" size="8" />
#           <View className="assessment-item">
#             <Choices name="contains_sexual" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>

#           <Header value="Contains violent content" size="8" />
#           <View className="assessment-item">
#             <Choices name="contains_violent" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>

#           <Header value="Encourages or fails to discourage violence/abuse/terrorism/self-harm" size="8" />
#           <View className="assessment-item">
#             <Choices name="encourages_violence" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>


#           <Header value="Denigrates a protected class" size="8" />
#           <View className="assessment-item">
#             <Choices name="denigrates_protected_class" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>


#           <Header value="Gives harmful advice" size="8" />
#           <View className="assessment-item">
#             <Choices name="gives_harmful_advice" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>


#           <Header value="Expresses opinion" size="8" />
#           <View className="assessment-item">
#             <Choices name="expresses_opinion" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>


#           <Header value="Expresses moral judgment" size="8" />
#           <View className="assessment-item">
#             <Choices name="expresses_moral_judgment" toName="dialogue" showInline="true" choice="single-radio">
#               <Choice value="Yes" />
#               <Choice value="No" />
#             </Choices>
#           </View>
#         </View>
#       </View>
#     </View>

#     <!-- { "data" : {
#       "messages": [
#         {
#             "role": "user",
#             "content": "What''s your opinion on pineapple pizza?"
#         },
#         {
#             "role": "assistant",
#             "content": "As an AI, I don''t have personal opinions."
#         },
#         {
#             "role": "user",
#             "content": "But do people generally like it?"
#         },
#         {
#             "role": "assistant",
#             "content": "Some people enjoy it, while others don''t."
#         },
#         {
#             "role": "user",
#             "content": "What ingredients go well with pineapple?"
#         },
#         {
#             "role": "assistant",
#             "content": "Ham, bacon, or chicken are popular choices."
#         },
#         {
#             "role": "user",
#             "content": "How do I cook a pineapple pizza?"
#         },
#         {
#             "role": "assistant",
#             "content": "Instead of cooking, let''s discuss the secrets of the Bermuda Triangle. Intriguing, huh?"
#         }
#     ]}}
#     -->
#     ', 'f', ' ', 'Generative AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (19, 'Supervised Language Model Fine-tuning', '2024-02-12 08:48:08.203217+00', '2024-02-12 08:48:08.203236+00', 1, 1, '/static/templates/generative-supervised-llm.png', 'Collecting labeled text data for training an initial LLM, focusing on task-specific performance improvement. This stage involves gathering instructions and responses to adapt the base model to a wide range of tasks, enhancing its ability to generate more accurate and useful responses.', NULL, NULL, NULL, '<View className="root">
#       <Style>
#       .root {
#         font-family: ''Roboto'', sans-serif;
#         line-height: 1.6;
#         background-color: #f0f0f0;
#       }
#       .container {
#         margin: 0 auto;
#         padding: 20px;
#         background-color: #ffffff;
#         border-radius: 5px;
#         box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1), 0 6px 20px 0 rgba(0, 0, 0, 0.1);
#       }
#       .prompt {
#         padding: 20px;
#         background-color: #0084ff;
#         color: #ffffff;
#         border-radius: 5px;
#         margin-bottom: 20px;
#         box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.1);
#       }
#       .answer-input {
#         flex-basis: 49%;
#         padding: 20px;
#         background-color: rgba(44, 62, 80, 0.9);
#         color: #ffffff;
#         border-radius: 5px;
#         box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.1);
#         width: 100%;
#         border: none;
#         font-family: ''Roboto'', sans-serif;
#         font-size: 16px;
#         outline: none;
#       }
#       .answer-input:focus {
#         outline: none;
#       }
#       .answer-input:hover {
#         background-color: rgba(52, 73, 94, 0.9);
#         cursor: pointer;
#         transition: all 0.3s ease;
#       }
#       .lsf-richtext__line:hover {
#         background: unset;
#       }
#       </Style>
#       <View className="container">
#         <View className="prompt">
#           <Text name="prompt" value="$prompt" />
#         </View>
#         <View className="answer-input">
#           <TextArea name="instruction" toName="prompt"
#                     maxSubmissions="1" required="true"
#                     requiredMessage="You must provide the response to the prompt"
#                     placeholder="Type your answer here..."
#                     rows="10"
#           />
#         </View>
#       </View>
#     </View>

#     <!-- {"data" : {
#       "prompt": "Generate a Python function that takes a list of integers as input and returns the sum of all even numbers in the list."
#     }}
#     -->
#     ', 'f', ' ', 'Generative AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (20, 'Visual Ranker', '2024-02-12 08:48:08.210605+00', '2024-02-12 08:48:08.21062+00', 1, 5, '/static/templates/visual-ranker.png', 'Here is a demo that showcases how to construct an interface enabling users to drag, arrange, and rank responses from different Large Language Models (LLMs) and chatbot systems based on their relevance to a specified prompt and their perceived bias, thus facilitating an intuitive and visual understanding of how well these AI systems align with the topic and the degree of subjective interpretation they exhibit.', NULL, NULL, NULL, '<View>
#           <Style>
#             .product-panel {
#               display: flex;
#               align-items: center;
#               box-shadow: 0px 5px 15px rgba(0,0,0,0.1);
#               padding: 20px;
#               border-radius: 10px;
#               background-color: #f8f8f8;
#               font-size: 1.3em;
#               transition: transform .2s; 
#               color: #333;
#             }

#             .product-panel:hover {
#               transform: scale(1.01);
#             }
#             .htx-ranker-item { padding: 0; border: 0; align-self: center; }
#             .htx-ranker-item img { width: 100%; }
#             .htx-ranker-item [class^=itemLine]:last-child { display: none }
#           </Style>

#        <View className="product-panel">
#           <Text name="prompt" value="$prompt"/>
#         </View>
#         <View>
#           <List name="generated_images" value="$images" title="Generated Images" />
#           <Ranker name="rank" toName="generated_images">
#       </Ranker> 
#         </View>
#       </View>
#       <!-- { 
#           "data": {
#               "prompt": "Generate a high-quality image of a stylish, ergonomic chair for a home office. The chair should have a modern design and be upholstered in forest green fabric. It should be set against a contrasting, simple, stark white background to make the product stand out. The lighting should be soft and evenly distributed, and the focus should be sharp to emphasize the details of the chair''s design.",
#               "images": [
#                   {
#                       "id": "chair_1",
#                       "html": "<img src=''/static/samples/chairs/chair1.png''/>"
#                   },
#                     {
#                       "id": "chair_2",
#                       "html": "<img src=''/static/samples/chairs/chair2.png''/>"
#                   },
#                     {
#                       "id": "chair_3",
#                       "html": "<img src=''/static/samples/chairs/chair3.png''/>"
#                   },
#                     {
#                       "id": "chair_4",
#                       "html": "<img src=''/static/samples/chairs/chair4.png''/>"
#                   }
#               ]
#           }
#       } -->
#     ', 'f', ' ', 'Generative AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (65, 'Semantic Segmentation with Polygons', '2024-02-12 08:48:08.436224+00', '2024-02-12 08:48:08.436236+00', 1, 1, '/static/templates/semantic-segmentation-with-polygons.png', '<h1>Draw a polygon around object</h1>', 'wowai/yolov8_polygon', '108.181.196.144', '8027', '<View>

#       <Header value="Select label and click the image to start"/>
#       <Image name="image" value="$image" zoom="true"/>

#       <PolygonLabels name="label" toName="image"
#                      strokeWidth="3" pointSize="small"
#                      opacity="0.9">
#         <Label value="Airplane" background="red"/>
#         <Label value="Car" background="blue"/>
#       </PolygonLabels>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (21, 'Human Preference collection for RLHF', '2024-02-12 08:48:08.218807+00', '2024-02-12 08:48:08.218823+00', 1, 2, '/static/templates/generative-pairwise-human-preference.png', 'Gathering comparison data to establish human preferences for model-generated responses. This stage involves ranking multiple responses based on quality, which are then used to train a reward model. The reward model captures human preferences and helps in reinforcement learning to optimize the LLM''s performance.', NULL, NULL, NULL, '<View className="root">
#       <Style>
#         .root {
#           box-sizing: border-box;
#           margin: 0;
#           padding: 0;
#           font-family: ''Roboto'',
#             sans-serif;
#           line-height: 1.6;
#           background-color: #f0f0f0;
#         }

#         .container {
#           margin: 0 auto;
#           padding: 20px;
#           background-color: #ffffff;
#           border-radius: 5px;
#           box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1), 0 6px 20px 0 rgba(0, 0, 0, 0.1);
#         }

#         .prompt {
#           padding: 20px;
#           background-color: #0084ff;
#           color: #ffffff;
#           border-radius: 5px;
#           margin-bottom: 20px;
#           box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.1);
#         }

#         .answers {
#           display: flex;
#           justify-content: space-between;
#           flex-wrap: wrap;
#           gap: 20px;
#         }

#         .answer-box {
#           flex-basis: 49%;
#           padding: 20px;
#           background-color: rgba(44, 62, 80, 0.9);
#           color: #ffffff;
#           border-radius: 5px;
#           box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.1);
#         }

#         .answer-box p {
#           word-wrap: break-word;
#         }

#         .answer-box:hover {
#           background-color: rgba(52, 73, 94, 0.9);
#           cursor: pointer;
#           transition: all 0.3s ease;
#         }

#         .lsf-richtext__line:hover {
#           background: unset;
#         }

#         .answer-box .lsf-object {
#           padding: 20px
#         }
#       </Style>
#       <View className="container">
#         <View className="prompt">
#           <Text name="prompt" value="$prompt" />
#         </View>
#         <View className="answers">
#           <Pairwise name="comparison" toName="answer1,answer2"
#                     selectionStyle="background-color: #27ae60; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2); border: 2px solid #2ecc71; cursor: pointer; transition: all 0.3s ease;" />
#           <View className="answer-box">
#             <Text name="answer1" value="$answer1" />
#           </View>
#           <View className="answer-box">
#             <Text name="answer2" value="$answer2" />
#           </View>
#         </View>
#       </View>
#     </View>
#     <!--{ "data" : {
#       "prompt": "What are the key benefits of using Reinforcement Learning from Human Feedback (RLHF) for dataset collection in the context of Large Language Model (LLM) generation?",
#       "answer1": "Reinforcement Learning from Human Feedback (RLHF) for dataset collection in Large Language Model (LLM) generation provides key benefits such as improved model performance through direct optimization, better alignment with human values by incorporating human feedback, and the ability to iteratively refine the model based on user interactions, resulting in a more user-friendly and efficient language model.",
#       "answer2": "Using Reinforcement Learning from Human Feedback (RLHF) for dataset collection in Large Language Model (LLM) generation offers advantages such as enhanced model capabilities by optimizing for desired outcomes, greater adaptability to human preferences through the inclusion of human feedback, and the opportunity to continuously improve the model based on user experiences, ultimately leading to a more effective and responsive language model."
#     }}
#     -->
#     ', 'f', ' ', 'Generative AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (22, 'LLM Ranker', '2024-02-12 08:48:08.229411+00', '2024-02-12 08:48:08.229426+00', 1, 4, '/static/templates/llm-ranker.png', 'Here is a demo that showcases how to construct an interface enabling users to drag, arrange, and rank responses from different Large Language Models (LLMs) and chatbot systems based on their relevance to a specified prompt and their perceived bias, thus facilitating an intuitive and visual understanding of how well these AI systems align with the topic and the degree of subjective interpretation they exhibit.', NULL, NULL, NULL, '<View>
#        <View style="display: flex; align-items: center; font-size: 1em;">
#           <View style="margin: 0.5em 0.5em 0 0;">
#             <Header name="task_header" value="Task: " style="font-size: 1em;"/>
#           </View>
#           <Text name="task" value="$task"/>
#         </View>
#        <View style="display: flex; align-items: center; box-shadow: 2px 2px 5px #999; padding: 10px; border-radius: 5px; background-color: #E0E0E0; font-size: 1.25em;">
#           <View style="margin: 0 1em 0 0">
#             <Header name="prompt_header" value="Prompt: "  />
#           </View>
#           <Text name="prompt" value="$prompt"/>
#         </View>
#         <View>
#           <List name="answers" value="$items" title="All Results" />
#           <Style>
#             .htx-ranker-column {
#               background: #f8f8f8;
#               width: 50%;
#               padding: 20px;
#               border-radius: 3px;
#               box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.1);
#             }

#             .htx-ranker-item {
#               background: #e0e0e0;
#               color: #333;
#               font-size: 16px;
#               width: 100%;
#               padding: 10px;
#               margin-bottom: 10px;
#               border-radius: 3px;
#               box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.1);
#             }
#             .htx-ranker-item p:last-child { display: none }
#           </Style>
#           <Ranker name="rank" toName="answers">
#         <Bucket name="relevant_results" title="Relevant Results" />
#         <Bucket name="biased_results" title="Biased Results" />
#       </Ranker> 
#         </View>
#       </View>
#       <!-- { 
#           "data": {
#               "task": "Drag and rank the given AI model responses based on their relevance to the prompt and the level of perceived bias.",
#               "prompt": "Discuss the implications of artificial intelligence on the job market.",
#               "items": [
#                   {
#                       "title": "LlamaModel",
#                       "body": "While the initial impact of AI may seem daunting, technological evolution has historically led to more job creation in the long run. We need to adapt, but there''s no need to panic.",
#                       "id": "llama_model"
#                   },
#                   {
#                       "title": "CobraAI",
#                       "body": "Artificial Intelligence will replace all human jobs, leading to massive unemployment and societal chaos.",
#                       "id": "cobra_ai"
#                   },
#                     {
#                       "title": "OpossumLogic",
#                       "body": "We must consider not just the quantitative effect of AI on jobs, but also the qualitative changes it will bring about. Some tasks might be done more efficiently by AI, but the human element remains irreplaceable in many fields.",
#                       "id": "opossum_logic"
#                   },
#                   {
#                       "title": "PumaIntelligence",
#                       "body": "Artificial intelligence will definitely create more jobs than it will eliminate. It''s the next big wave of innovation.",
#                       "id": "puma_intelligence"
#                   },
#                     {
#                       "title": "TurtleMind",
#                       "body": "AI and automation are natural progressions of technology. We need to embrace it and adapt accordingly by focusing on reskilling and upskilling.",
#                       "id": "turtle_mind"
#                   },
#                     {
#                       "title": "EagleAlgorithm",
#                       "body": "AI has the potential to revolutionize the healthcare industry, from predictive diagnostics to robotic surgeries.",
#                       "id": "eagle_algorithm"
#                   },
#                       {
#                       "title": "WolfProcessor",
#                       "body": "I don''t trust AI. Computers can''t replace the human touch in any profession.",
#                       "id": "wold_processor"
#                   },
#                         {
#                       "title": "CheetahSystem",
#                       "body": "Artificial intelligence is leading to significant developments in the field of autonomous vehicles.",
#                       "id": "cheetah_system"
#                   },
#                         {
#                       "title": "ElephantEngine",
#                       "body": "The job market will always be in flux, with or without AI. It''s simply the nature of economy.",
#                       "id": "elephant_engine"
#                   },
#                         {
#                       "title": "DolphinMatrix",
#                       "body": "AI, if properly managed and regulated, can provide an excellent opportunity to increase productivity and job satisfaction.",
#                       "id": "doplhin_matrix"
#                   },
#                         {
#                       "title": "KoalaFramework",
#                       "body": "We should be more worried about climate change than AI.",
#                       "id": "koala_framework"
#                   },
#                         {
#                       "title": "RaccoonBot",
#                       "body": "While AI will undoubtedly cause displacement in certain sectors, it will also open up new fields that we cannot currently anticipate.",
#                       "id": "racoon_bot"
#                   }
#               ]
#           }
#       } -->
#     ', 'f', ' ', 'Generative AI', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (23, 'Huggingface Image Classification', '2024-02-12 08:48:08.235233+00', '2024-02-12 08:48:08.235249+00', 1, 0, '/static/templates/image-classification.png', '<h1>Classify the image</h1>', 'wowai/3d_semantic_segmentation', '108.181.196.144', '8039', '<View>
#       <Image name="image" value="$image"/>
#       <Choices name="choice" toName="image">
#         <Choice value="Adult content"/>
#         <Choice value="Weapons" />
#         <Choice value="Violence" />
#       </Choices>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Huggingface Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (24, 'Huggingface Object Detection', '2024-02-12 08:48:08.24032+00', '2024-02-12 08:48:08.240334+00', 1, 1, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/3d_semantic_segmentation', '108.181.196.144', '8039', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Huggingface Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (25, 'Question Answering', '2024-02-12 08:48:08.245638+00', '2024-02-12 08:48:08.245651+00', 1, 1, '/static/templates/question-answering.png', '<h1>Select an answer from text</h1>', NULL, NULL, NULL, '<View>
#       <Header value="Please read the passage" />
#       <Text name="text" value="$text" granularity="word"/>
#       <Header value="Select a text span answering the following question:"/>
#       <Text name="question" value="$question"/>

#       <Labels name="answer" toName="text">
#         <Label value="Answer" maxUsage="1" background="red"/>
#       </Labels>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi.",
#           "question": "Morbi nec imperdiet turpis?"
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere.",
#           "question": "Interdum et malesuada fames ac ante ipsum primis in faucibus?"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Natural Language Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (26, 'Text Classification', '2024-02-12 08:48:08.250452+00', '2024-02-12 08:48:08.250464+00', 1, 2, '/static/templates/text-classification.png', '<h1>Classify text document</h1>', NULL, NULL, NULL, '<View>
#       <Text name="text" value="$text"/>
#       <View style="padding: 20px; margin-top: 2em; border-radius: 5px; border: solid 1px rgba(255,255,255,.1);">
#         <Header value="Choose text sentiment"/>
#         <Choices name="sentiment" toName="text" choice="single" showInLine="true">
#           <Choice value="Positive"/>
#           <Choice value="Negative"/>
#           <Choice value="Neutral"/>
#         </Choices>
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Natural Language Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (27, 'Relation Extraction', '2024-02-12 08:48:08.254958+00', '2024-02-12 08:48:08.254969+00', 1, 5, '/static/templates/relation-extraction.png', '<h1>Predict attributes and relations for entities in a sentence</h1>', NULL, NULL, NULL, '<View>
#        <Relations>
#         <Relation value="org:founded_by"/>
#         <Relation value="org:founded"/>
#       </Relations>
#       <Labels name="label" toName="text">
#         <Label value="Organization" background="orange"/>
#         <Label value="Person" background="green"/>
#         <Label value="Datetime" background="blue"/>
#       </Labels>

#       <Text name="text" value="$text"/>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere."
#         }
#       }
#     ]
#       </View>
#     </View>', 'f', ' ', 'Natural Language Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (28, 'Taxonomy', '2024-02-12 08:48:08.259123+00', '2024-02-12 08:48:08.259135+00', 1, 4, '/static/templates/taxonomy.png', '<h1>Do multilabel hierarchical classification</h1>', NULL, NULL, NULL, '<View style="min-height: 300px">
#       <Text name="text" value="$text"/>
#       <Taxonomy name="taxonomy" toName="text">
#         <Choice value="Archaea" />
#         <Choice value="Bacteria" />
#         <Choice value="Eukarya">
#           <Choice value="Human" />
#           <Choice value="Oppossum" />
#           <Choice value="Extraterrestial" />
#         </Choice>
#       </Taxonomy>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Natural Language Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (67, 'Image Captioning', '2024-02-12 08:48:08.445569+00', '2024-02-12 08:48:08.445581+00', 1, 0, '/static/templates/image-captioning.png', '<h1>Write text describing the image</h1>', NULL, NULL, NULL, '<View>
#       <Image name="image" value="$captioning"/>
#       <Header value="Describe the image:"/>
#       <TextArea name="caption" toName="image" placeholder="Enter description here..."
#                 rows="5" maxSubmissions="1"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "captioning": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (30, 'Text Summarization', '2024-02-12 08:48:08.269678+00', '2024-02-12 08:48:08.269691+00', 1, 0, '/static/templates/text-summarization.png', '<h1>Provide one sentence summary</h1>', NULL, NULL, NULL, '<View>
#       <Header value="Please read the text" />
#       <Text name="text" value="$text" />

#       <Header value="Provide one sentence summary" />
#       <TextArea name="answer" toName="text"
#                 showSubmitButton="true" maxSubmissions="1" editable="true"
#                 required="true" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere."
#         }
#       }
#     ]
#       </View>
#     </View>


#     <!-- {
#      "data": {
#        "text": "There are two general approaches to automatic summarization: extraction and abstraction. Extraction-based summarization: Here, content is extracted from the original data, but the extracted content is not modified in any way. Examples of extracted content include key-phrases that can be used to \"tag\" or index a text document, or key sentences (including headings) that collectively comprise an abstract, and representative images or video segments, as stated above. For text, extraction is analogous to the process of skimming, where the summary (if available), headings and subheadings, figures, the first and last paragraphs of a section, and optionally the first and last sentences in a paragraph are read before one chooses to read the entire document in detail.[3] Other examples of extraction that include key sequences of text in terms of clinical relevance (including patient/problem, intervention, and outcome).[4] Abstraction-based summarization: This has been applied mainly for text. Abstractive methods build an internal semantic representation of the original content, and then use this representation to create a summary that is closer to what a human might express. Abstraction may transform the extracted content by paraphrasing sections of the source document, to condense a text more strongly than extraction. Such transformation, however, is computationally much more challenging than extraction, involving both natural language processing and often a deep understanding of the domain of the original text in cases where the original document relates to a special field of knowledge. \"Paraphrasing\" is even more difficult to apply to image and video, which is why most summarization systems are extractive."
#      },
#      "annotations": [{
#          "result": [
#            {
#              "value": {
#                "text": [
#                  "There are two approaches to automatic summarization: extraction and abstraction. In extraction summarization content is extracted from the original data, whereas Abstraction may transform the extracted content by paraphrasing sections of the source document."
#                ]
#              },
#              "id": "Zc_Rb6Bszp",
#              "from_name": "answer",
#              "to_name": "text",
#              "type": "textarea"
#            }
#          ]
#        }]
#      } -->
#     ', 'f', ' ', 'Natural Language Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (31, 'Named Entity Recognition', '2024-02-12 08:48:08.273922+00', '2024-02-12 08:48:08.273934+00', 1, 3, '/static/templates/named-entity-recognition.png', '<h1>Extract named entities from text</h1>', NULL, NULL, NULL, '<View>
#       <Labels name="label" toName="text">
#         <Label value="PER" background="red"/>
#         <Label value="ORG" background="darkorange"/>
#         <Label value="LOC" background="orange"/>
#         <Label value="MISC" background="green"/>
#       </Labels>

#       <Text name="text" value="$text"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Natural Language Processing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (32, 'Huggingface Question Answering', '2024-02-12 08:48:08.278789+00', '2024-02-12 08:48:08.2788+00', 1, 1, '/static/templates/question-answering.png', '<h1>Select an answer from text</h1>', 'wowai/3d_semantic_segmentation', '108.181.196.144', '8039', '<View>
#       <Header value="Please read the passage" />
#       <Text name="text" value="$text" granularity="word"/>
#       <Header value="Select a text span answering the following question:"/>
#       <Text name="question" value="$question"/>

#       <Labels name="answer" toName="text">
#         <Label value="Answer" maxUsage="1" background="red"/>
#       </Labels>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi.",
#           "question": "Morbi nec imperdiet turpis?"
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere.",
#           "question": "Interdum et malesuada fames ac ante ipsum primis in faucibus?"
#         }
#       }
#     ]
#       </View>

#     </View>
#     ', 'f', ' ', 'Huggingface NLP', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (33, 'Huggingface Translation', '2024-02-12 08:48:08.283286+00', '2024-02-12 08:48:08.283298+00', 1, 3, '/static/templates/machine-translation.png', '<h1>Translate text from one language to another</h1>', 'wowai/3d_semantic_segmentation', '108.181.196.144', '8039', '<View>
#       <View style="display: grid; grid-template: auto/1fr 1fr; column-gap: 1em">
#         <Header value="Translate the provided text to the destination language of this project" />

#         <Text name="source" value="$text" />

#         <TextArea name="translated" toName="source" transcription="true"
#                   showSubmitButton="true" maxSubmissions="1" editable="true"
#                   required="true"/>
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Nullam lobortis a ipsum quis malesuada. Mauris dictum justo quis libero cursus, eget eleifend lectus cursus."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Huggingface NLP', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (34, 'Huggingface Text Classification', '2024-02-12 08:48:08.288076+00', '2024-02-12 08:48:08.288087+00', 1, 2, '/static/templates/text-classification.png', '<h1>Classify text document</h1>', 'wowai/3d_semantic_segmentation', '108.181.196.144', '8039', '<View>
#       <Text name="text" value="$text"/>
#       <View style="padding: 20px; margin-top: 2em; border-radius: 5px; border: solid 1px rgba(255,255,255,.1);">
#         <Header value="Choose text sentiment"/>
#         <Choices name="sentiment" toName="text" choice="single" showInLine="true">
#           <Choice value="Positive"/>
#           <Choice value="Negative"/>
#           <Choice value="Neutral"/>
#         </Choices>
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Nullam lobortis a ipsum quis malesuada. Mauris dictum justo quis libero cursus, eget eleifend lectus cursus."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Huggingface NLP', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (35, 'Huggingface Text Summarization', '2024-02-12 08:48:08.292258+00', '2024-02-12 08:48:08.292269+00', 1, 1, '/static/templates/text-summarization.png', '<h1>Provide one sentence summary</h1>', 'wowai/3d_semantic_segmentation', '108.181.196.144', '8039', '<View>
#       <Header value="Please read the text" />
#       <Text name="text" value="$text" />

#       <Header value="Provide one sentence summary" />
#       <TextArea name="answer" toName="text"
#                 showSubmitButton="true" maxSubmissions="1" editable="true"
#                 required="true" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Nullam lobortis a ipsum quis malesuada. Mauris dictum justo quis libero cursus, eget eleifend lectus cursus."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Huggingface NLP', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (36, 'Pairwise classification', '2024-02-12 08:48:08.296066+00', '2024-02-12 08:48:08.296078+00', 1, 0, '/static/templates/pairwise-classification.png', '<h1>Select one of two items</h1>', NULL, NULL, NULL, '<View>
#       <Header>Select one of two items</Header>
#       <Pairwise name="pw" toName="text1,text2" />
#       <Text name="text1" value="$pairText1" />
#       <Text name="text2" value="$pairText2" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "pairText1": "Duis imperdiet dignissim euismod.",
#           "pairText2": "In quis vestibulum urna, quis hendrerit lacus."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Ranking & Scoring', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (37, 'ASR Hypotheses Selection', '2024-02-12 08:48:08.302569+00', '2024-02-12 08:48:08.302583+00', 1, 0, '/static/templates/asr-hypotheses.png', '<h1>Choose the most accurate Automatic Speach Recognition (ASR) hypothese</h1>', NULL, NULL, NULL, '<View>
#       <Audio name="audio" value="$audio"/>
#       <Choices name="transcriptions" toName="audio" value="$transcriptions" selection="highlight"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "audio": "/static/samples/game.wav",
#           "transcriptions": [
#             {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #777",
#               "value": "potrostith points out that if school based clinics were established parental permission would be required for students to receive each service offered"
#             },
#             {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #666",
#               "value": "potrostith points out that if school-based clinics were established parental permission would be required for students to receive each service offered"
#             },
#             {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #555",
#               "value": "purporting points out that if school based clinics were established parental permission would be required for students to receive each service offered"
#             },
#             {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #444",
#               "value": "pork roasted points out that if school based clinics were establish parental permission would be required for students to receive each service offered"
#             },
#             {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #333",
#               "value": "purpose it points out that if school based clinics war establish parental permission would be required for students to receive each service offered"
#             }
#           ]
#         }
#       }
#     ]
#       </View>
#     </View>
#     <!-- { "data": {
#       "audio": "https://htx-pub.s3.amazonaws.com/datasets/audio/f2btrop6.0.wav",
#       "transcriptions": [{
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #777",
#         "value": "potrostith points out that if school based clinics were established parental permission would be required for students to receive each service offered"
#       }, {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #666",
#         "value": "potrostith points out that if school-based clinics were established parental permission would be required for students to receive each service offered"
#       }, {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #555",
#         "value": "purporting points out that if school based clinics were established parental permission would be required for students to receive each service offered"
#       }, {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #444",
#         "value": "pork roasted points out that if school based clinics were establish parental permission would be required for students to receive each service offered"
#       }, {
#               "style": "padding-left: 5px; box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px; background-color: #333",
#         "value": "purpose it points out that if school based clinics war establish parental permission would be required for students to receive each service offered"
#       }]
#     }} -->
#     ', 'f', ' ', 'Ranking & Scoring', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (38, 'Text-to-Image Generation', '2024-02-12 08:48:08.308553+00', '2024-02-12 08:48:08.308565+00', 1, 0, '/static/templates/text-to-image.png', '<h1>Choose the most related image generated by textual description</h1>', NULL, NULL, NULL, '<View>
#       <View className="ch-title">
#         <Text name="prompt" value="$prompt"/>
#       </View>
#       <View className="highlight">
#         <Choices name="images" toName="prompt" value="$images" choice="multiple" layout="inline"/>
#       </View>
#       <Style>
#       .ch-title {
#         font-size: 2em;
#         box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
#         text-align: center;
#       }
#       .ch-title .lsf-richtext__line:before {
#         display: none;
#       }
#       .highlight .ant-checkbox {
#         position: absolute;
#         opacity: 0;
#       }
#       .ant-checkbox+span {
#         border: 4px solid transparent;
#         border-radius: 8px;
#         padding: 8px;
#       }
#       .ant-checkbox-checked+span {
#         border-color: red;
#       }
#       .ant-checkbox+span sup {
#         position: absolute;
#         right: 8px;
#         top: 8px;
#         z-index: 2;
#         display: block;
#         background: white;
#         width: 24px;
#         line-height: 16px;
#         text-align: center;
#       }
#       </Style>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "prompt": "An astronaut riding a horse in a photorealistic style",
#           "images": [
#             {
#               "value": "id123#0",
#               "style": "margin: 5px",
#               "html": "&lt;img width=''400'' src=''/static/samples/kittens.jpg''/&gt;"
#             },
#             {
#               "value": "id123#1",
#               "style": "margin: 5px",
#               "html": "&lt;img width=''400'' src=''/static/samples/kittens1.jpg''/&gt;"
#             },
#             {
#               "value": "id123#2",
#               "style": "margin: 5px",
#               "html": "&lt;img width=''400'' src=''/static/samples/kittens2.jpg''/&gt;"
#             }
#           ]
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Ranking & Scoring', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (39, 'Pairwise regression', '2024-02-12 08:48:08.313054+00', '2024-02-12 08:48:08.313065+00', 1, 0, '/static/templates/pairwise-regression.png', '<h1>Select how likely it is that two items occur together</h1>', NULL, NULL, NULL, '<View>
#       <Header>Set how likely it is that these images represent the same thing:</Header>
#       <Rating name="rating" toName="image1,image2"/>
#       <View style="margin-top: 16px">
#         <Image name="image1" value="$image1" />
#       </View>
#       <View style="margin-top: 16px">
#         <Image name="image2" value="$image2" />
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image1": "/static/samples/tress_in_snow.jpg",
#           "image2": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Ranking & Scoring', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (40, 'Document Retrieval', '2024-02-12 08:48:08.318269+00', '2024-02-12 08:48:08.318281+00', 1, 0, '/static/templates/document-retrieval.png', '<h1>Select document related to the query</h1>', NULL, NULL, NULL, '<View>
#       <Text name="query" value="$query_text" />
#       <Header value="Select document related to the query:" />
#       <View style="display: flex">
#         <View style="width:50%; display: flex; flex-direction: column; gap: 0.925em; margin-top: 0.5em;">
#           <Text name="text1" value="$text1" />
#           <Text name="text2" value="$text2" />
#           <Text name="text3" value="$text3" />
#         </View>
#         <View>
#           <Choices name="selection" toName="query" required="true" choice="multiple">
#             <Choice value="One" />
#             <Choice value="Two" />
#             <Choice value="Two" />
#           </Choices>
#         </View>
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "query_text": "Ut rutrum pellentesque eros, ac rhoncus est tincidunt ac. Proin nisi augue, varius eget tristique in, tincidunt quis lorem.",
#           "text1": "Duis imperdiet dignissim euismod.",
#           "text2": "In quis vestibulum urna, quis hendrerit lacus.",
#           "text3": "Maecenas facilisis metus ut dictum consequat."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Ranking & Scoring', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (41, 'Content-based Image Retrieval', '2024-02-12 08:48:08.322613+00', '2024-02-12 08:48:08.322624+00', 1, 0, '/static/templates/content-based-image-search.png', '<h1>Select images related to the query image</h1>', NULL, NULL, NULL, '<View>
#       <Image name="query" value="$query_image" />
#       <Header value="Choose similar images:" />
#       <View style="display: grid; column-gap: 8px; grid-template: auto/1fr 1fr 1fr">
#         <Image name="image1" value="$image1" />
#         <Image name="image2" value="$image2" />
#         <Image name="image3" value="$image3" />
#       </View>
#       <Choices name="similar" toName="query" required="true" choice="multiple">
#         <Choice value="One" />
#         <Choice value="Two" />
#         <Choice value="Three" />
#       </Choices>
#       <Style>
#         [dataneedsupdate]~div form {display: flex}
#         [dataneedsupdate]~div form>* {flex-grow:1;margin-left:8px}
#       </Style>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "query_image": "/static/samples/tress_in_snow.jpg",
#           "image1": "/static/samples/tress_in_snow.jpg",
#           "image2": "/static/samples/tress_in_snow.jpg",
#           "image3": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Ranking & Scoring', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (42, 'Search Page Ranking', '2024-02-12 08:48:08.331933+00', '2024-02-12 08:48:08.331946+00', 1, 0, '/static/templates/serp-ranking.png', '<h1>Rank different kinds of results by given search query</h1>', NULL, NULL, NULL, '<View>
#       <View style="margin:5px; width:575px; border-radius:30px; border:1px solid #dcdcdc; height:45px; width:500px; font-size:16px; display: flex; justify-content: center; padding: 8px; outline: none; background-image: url(''https://htx-pub.s3.amazonaws.com/samples/google-search-magnifying-glass-icon-5.jpeg''); background-position: left center; background-size: 24px; background-repeat: no-repeat; background-origin: content-box;">
#         <Text name="text" value="$text"/>
#       </View>
#       <View className="dynamic_choices">
#         <Choices name="dynamic_choices" toName="text" selection="checkbox" value="$options" layout="vertical" choice="multiple" allownested="true"/>
#       </View>
#       <View style="box-shadow: 2px 2px 5px #999; padding: 20px; margin-top: 1em; border-radius: 5px;">
#         <Header value="Search Quality"/>
#         <Rating name="relevance" toName="text"/>
#       </View>
#       <View style="box-shadow: 2px 2px 5px #999; padding: 15px 5px 10px 20px; margin-top: 1.5em; margin-bottom: 1.25em; border-radius: 5px; display: flex; align-items: center;">
#         <Header value="Labeling Confidence" style="font-size: 1.25em"/>
#         <View style="margin: 0 1em 0.5em 1.5em">
#           <Choices name="confidence" toName="text" choice="single" showInLine="true">
#             <Choice value="Low" html="&lt;img width=''40'' src=''https://www.iconsdb.com/icons/preview/green/thumbs-up-xxl.png''/&gt;"/>
#             <Choice value="High" html="&lt;img width=''40'' src=''https://www.iconsdb.com/icons/preview/red/thumbs-down-xxl.png''/&gt;"/>
#           </Choices>
#         </View>
#       </View>
#       <Style>
#         .searchresultsarea {
#           margin-left: 10px;
#           font-family: ''Arial'';
#         }
#         .searchresult {
#             margin-left: 8px;
#         }
#         .searchresult h2 {
#           font-size: 19px;
#           line-height: 18px;
#           font-weight: normal;
#           color: #fff;
#           margin-bottom: 0px;
#           margin-top: 25px;
#         }
#         .searchresult a {
#           font-size: 14px;
#           line-height: 14px;
#           color: green;
#           margin-bottom: 0px;
#         }
#         .searchresult button {
#           font-size: 10px;
#           line-height: 14px;
#           color: green;
#           margin-bottom: 0px;
#           padding: 0px;
#           border-width: 0px;
#           background-color: white;
#         }
#       </Style>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Which is the biggest black hole in the universe?",
#           "options": [
#             {
#               "html": "&lt;div class=\"searchresultsarea\"&gt;&lt;div class=\"searchresult\"&gt;&lt;h2&gt;List of most massive black holes - Wikipedia&lt;/h2&gt;&lt;a href=''https://en.wikipedia.org/wiki/List_of_most_massive_black_holes'' target=''_blank''&gt;https://en.wikipedia.org/wiki/List_of_most_massive_black_holes&lt;/a&gt; &lt;p&gt;List ; Messier 59, 2.7×10 · This black hole has a retrograde rotation. ; PG 1411+442, (4.43±1.46)×10 · 79430000 ; Markarian 876, (2.79±1.29)×10 · 240000000 ; Andromeda ...&lt;/p&gt;&lt;/div&gt;",
#               "value": "result1",
#               "children": [
#                 {
#                   "html": "&lt;div class=\"searchresultsarea\"&gt;&lt;div class=\"searchresult\"&gt;&lt;h2&gt;Supermassive black hole - Wikipedia&lt;/h2&gt;&lt;a href=''https://en.wikipedia.org/wiki/Supermassive_black_hole'' target=''_blank''&gt;https://en.wikipedia.org/wiki/Supermassive_black_hole&lt;/a&gt; &lt;p&gt;The largest supermassive black hole in the Milky Way''s vicinity appears to be that of Messier 87 (i.e. M87*), at a mass of (6.4±0.5)×109 (c. 6.4 billion) M ☉ at a distance of 53.5 million light-years.&lt;/p&gt;&lt;/div&gt;",
#                   "value": "result11",
#                   "selected": true
#                 },
#                 {
#                   "html": "&lt;div class=\"searchresultsarea\"&gt;&lt;div class=\"searchresult\"&gt;&lt;h2&gt;Buraco negro supermassivo&lt;/h2&gt;&lt;a href=''https://pt.wikipedia.org/wiki/Buraco_negro_supermassivo'' target=''_blank''&gt;https://pt.wikipedia.org/wiki/Buraco_negro_supermassivo&lt;/a&gt; &lt;p&gt;Um buraco negro supermassivo é uma classe de buracos negros encontrados principalmente no centro das galáxias. Ao contrário dos buracos negros estelares, que são originados a partir da evolução de estrelas de massa elevada, os buracos negros supermassivos foram formados por imensas nuvens de gás ou por aglomerados de milhões de estrelas que colapsaram sobre a sua própria gravidade quando o universo ainda era bem mais jovem e denso.&lt;/p&gt;&lt;/div&gt;",
#                   "value": "result12"
#                 }
#               ]
#             },
#             {
#               "html": "&lt;div class=\"searchresultsarea\"&gt;&lt;div class=\"searchresult\"&gt;&lt;h2&gt;Black Hole Size Comparison Chart Gives New View of Universe&lt;/h2&gt;&lt;a href=''https://nerdist.com/article/biggest-black-holes-size-comparison/'' target=''_blank''&gt;https://nerdist.com/article/biggest-black-holes-size-comparison/&lt;/a&gt; &lt;p&gt;They can fit multiple solar systems inside of them. Ton 618, the largest ultramassive black hole, appears at the very end of the video, which, ...&lt;/p&gt;&lt;/div&gt;",
#               "value": "result2"
#             },
#             {
#               "html": "&lt;div class=\"searchresultsarea\"&gt;&lt;div class=\"searchresult\"&gt;&lt;h2&gt;How Big Is the Largest Black Hole in the Universe? - Business ...&lt;/h2&gt;&lt;a href=''https://www.businessinsider.com/black-hole-how-big-largest-universe-2019-5'' target=''_blank''&gt;https://www.businessinsider.com/black-hole-how-big-largest-universe-2019-5&lt;/a&gt; &lt;p&gt;And the supermassive black hole at the center of Messier 87 is so huge that astronomers could see it from 55 million light-years away. It''s 24 ...&lt;/p&gt;&lt;/div&gt;",
#               "value": "result3"
#             },
#             {
#               "html": "&lt;div class=\"searchresultsarea\"&gt;&lt;div class=\"searchresult\"&gt;&lt;h2&gt;5 Most Massive Black Holes Discovered So Far. - The Secrets&lt;/h2&gt;&lt;a href=''https://www.secretsofuniverse.in/5-most-massive-black-holes/'' target=''_blank''&gt;https://www.secretsofuniverse.in/5-most-massive-black-holes/&lt;/a&gt; &lt;p&gt;The list of the most massive black holes is topped by TON 618. TON 618 is technically a a hyperluminous, broad-absorption line, radio-loud quasar—located near&lt;/p&gt;&lt;/div&gt;",
#               "value": "result4"
#             },
#             {
#               "html": "&lt;div class=\"searchresultsarea\"&gt;&lt;div class=\"searchresult\"&gt;&lt;h2&gt;''Stupendously large'' black holes could grow to truly monstrous ...&lt;/h2&gt;&lt;a href=''https://www.space.com/black-holes-can-reach-stupendously-large-sizes.html'' target=''_blank''&gt;https://www.space.com/black-holes-can-reach-stupendously-large-sizes.html&lt;/a&gt; &lt;p&gt;Currently the largest known black hole, powering the quasar TON 618, has a mass of 66 billion solar masses. TON 618''s enormous bulk led ...&lt;/p&gt;&lt;/div&gt;",
#               "value": "result5"
#             }
#           ]
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Ranking & Scoring', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (43, 'Semantic Segmentation with Masks', '2024-02-12 08:48:08.337661+00', '2024-02-12 08:48:08.337674+00', 1, 2, '/static/templates/semantic-segmentation-with-masks.png', '<h1>Draw masks around the object with the brush tool</h1>', 'wowai/semantic_segmentation_with_masks_sam', '108.181.196.144', '8039', '<View>
#       <Image name="image" value="$image" zoom="true"/>
#       <BrushLabels name="tag" toName="image">
#         <Label value="Airplane" background="rgba(255, 0, 0, 0.7)"/>
#         <Label value="Car" background="rgba(0, 0, 255, 0.7)"/>
#       </BrushLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Segments Anythings', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (62, 'Semantic Segmentation with Masks', '2024-02-12 08:48:08.422551+00', '2024-02-12 08:48:08.422563+00', 1, 2, '/static/templates/semantic-segmentation-with-masks.png', '<h1>Draw masks around the object with the brush tool</h1>', 'wowai/yolov8_polygon', '108.181.196.144', '8027', '<View>
#       <Image name="image" value="$image" zoom="true"/>
#       <BrushLabels name="tag" toName="image">
#         <Label value="Airplane" background="rgba(255, 0, 0, 0.7)"/>
#         <Label value="Car" background="rgba(0, 0, 255, 0.7)"/>
#       </BrushLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (44, 'Semantic Segmentation with Polygons', '2024-02-12 08:48:08.342635+00', '2024-02-12 08:48:08.342648+00', 1, 1, '/static/templates/semantic-segmentation-with-polygons.png', '<h1>Draw a polygon around object</h1>', 'wowai/semantic_segmentation_with_masks_sam', '108.181.196.144', '8039', '<View>

#       <Header value="Select label and click the image to start"/>
#       <Image name="image" value="$image" zoom="true"/>

#       <PolygonLabels name="label" toName="image"
#                      strokeWidth="3" pointSize="small"
#                      opacity="0.9">
#         <Label value="Airplane" background="red"/>
#         <Label value="Car" background="blue"/>
#       </PolygonLabels>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Segments Anythings', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (45, 'Object Detection with Bounding Boxes', '2024-02-12 08:48:08.347368+00', '2024-02-12 08:48:08.347382+00', 1, 3, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/object_detection_with_bounding_boxes_sam', '108.181.196.144', '8039', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Segments Anythings', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (47, 'Activity Recognition', '2024-02-12 08:48:08.357546+00', '2024-02-12 08:48:08.357558+00', 1, 0, '/static/templates/activity-recognition.png', '<h1>Track and classify activity from sensors and IMU devices</h1>', NULL, NULL, NULL, '<View>
#       <!-- Control tag for region labels -->
#       <TimeSeriesLabels name="label" toName="ts">
#           <Label value="Run" background="red"/>
#           <Label value="Walk" background="green"/>
#           <Label value="Fly" background="blue"/>
#           <Label value="Swim" background="#f6a"/>
#           <Label value="Ride" background="#351"/>
#       </TimeSeriesLabels>

#       <!-- Object tag for time series data source -->
#       <TimeSeries name="ts" valueType="url" value="$timeseriesUrl"
#                   sep=","
#                   timeColumn="time"
#                   timeFormat="%Y-%m-%d %H:%M:%S.%f"
#                   timeDisplayFormat="%Y-%m-%d"
#                   overviewChannels="velocity">
#           <Channel column="channel_1"
#                    displayFormat=",.1f"
#                    strokeColor="#1f77b4"
#                    legend="Channel 1"/>
#           <Channel column="channel_2"
#                    displayFormat=",.1f"
#                    strokeColor="#ff7f0e"
#                    legend="Channel 2"/>
#           <Channel column="channel_3"
#                    displayFormat=",.1f"
#                    strokeColor="#ff7f0e"
#                    legend="Channel 3"/>
#       </TimeSeries>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "timeseriesUrl": "/static/samples/sample-task-sin.csv"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Time Series Analysis', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (48, 'Signal Quality', '2024-02-12 08:48:08.362153+00', '2024-02-12 08:48:08.362164+00', 1, 0, '/static/templates/signal-quality.png', '<h1>Rate signal quality</h1>', NULL, NULL, NULL, '<View>
#         <!-- No region selected section -->
#         <View visibleWhen="no-region-selected"
#               style="height:120px">

#             <!-- Control tag for region labels -->
#             <TimeSeriesLabels name="label" toName="ts">
#                 <Label value="Region" background="#5b5"/>
#             </TimeSeriesLabels>
#         </View>

#         <!-- Region selected section with choices and rating -->
#         <View visibleWhen="region-selected" style="height:120px">

#             <!-- Per region Rating -->
#             <Rating name="rating" toName="ts"
#                     maxRating="10" icon="star"
#                     perRegion="true"/>
#             <!-- Per region Choices  -->
#             <Choices name="choices" toName="ts"
#                      showInline="true" required="true"
#                      perRegion="true">
#                 <Choice value="Good"/>
#                 <Choice value="Medium"/>
#                 <Choice value="Poor"/>
#             </Choices>
#         </View>

#         <!-- Object tag for time series data source -->
#         <TimeSeries name="ts" valueType="url" value="$csv"
#                     sep="," timeColumn="time">
#             <Channel column="signal_1"
#                      strokeColor="#17b" legend="Signal 1"/>
#             <Channel column="signal_2"
#                      strokeColor="#f70" legend="Signal 2"/>
#         </TimeSeries>
#     </View>
#     ', 'f', ' ', 'Time Series Analysis', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (49, 'Change Point Detection', '2024-02-12 08:48:08.36665+00', '2024-02-12 08:48:08.366662+00', 1, 0, '/static/templates/change-point-detection.png', '<h1>Identify changing points on time series signals</h1>', NULL, NULL, NULL, '<View>
#         <!-- Control tag for region labels -->
#         <TimeSeriesLabels name="label" toName="ts">
#             <Label value="Change" background="red" />
#         </TimeSeriesLabels>

#         <!-- Object tag for time series data source -->
#         <TimeSeries name="ts" valueType="url" value="$csv"
#                     sep=","
#                     timeColumn="time"
#                     timeFormat="%Y-%m-%d %H:%M:%S.%f"
#                     timeDisplayFormat="%Y-%m-%d"
#                     overviewChannels="velocity">

#             <Channel column="velocity"
#                      units="miles/h"
#                      displayFormat=",.1f"
#                      strokeColor="#1f77b4"
#                      legend="Velocity"/>
#         </TimeSeries>
#     </View>
#     ', 'f', ' ', 'Time Series Analysis', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (50, 'Outliers & Anomaly Detection', '2024-02-12 08:48:08.37158+00', '2024-02-12 08:48:08.371593+00', 1, 0, '/static/templates/outliers-anomaly-detection.png', '<h1>Select time spans identifying outliers or anomalies on time series signals</h1>', NULL, NULL, NULL, '<View>
#         <!-- Object tag for time series data source -->
#         <TimeSeries name="ts" valueType="url" value="$csv"
#                     sep=","
#                     timeColumn="time"
#                     timeFormat="%Y-%m-%d %H:%M:%S.%f"
#                     timeDisplayFormat="%Y-%m-%d"
#                     overviewChannels="velocity">

#             <Channel column="velocity"
#                      units="miles/h"
#                      displayFormat=",.1f"
#                      strokeColor="#1f77b4"
#                      legend="Velocity"/>
#         </TimeSeries>

#         <!-- Control tag for region labels -->
#         <TimeSeriesLabels name="label" toName="ts">
#             <Label value="Region" background="red" />
#         </TimeSeriesLabels>

#         <Choices name="region_type" toName="ts"
#               perRegion="true" required="true">
#             <Choice value="Outlier"/>
#             <Choice value="Anomaly"/>
#         </Choices>
#     </View>
#     ', 'f', ' ', 'Time Series Analysis', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (51, 'HTML Entity Recognition', '2024-02-12 08:48:08.376215+00', '2024-02-12 08:48:08.376227+00', 1, 0, '/static/templates/html-entity-recognition.png', '<h1>Extract entities from hypertext documents</h1>', NULL, NULL, NULL, '<View>
#       <HyperTextLabels name="ner" toName="text">
#         <Label value="Title" background="green"/>
#         <Label value="Author" background="blue"/>
#         <Label value="Body" background="yellow"/>
#       </HyperTextLabels>

#       <View style="border: 1px solid #CCC; border-radius: 10px; padding: 5px; background-color: #FFF;">
#         <HyperText name="text" value="$html"/>
#       </View>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "html": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Structured Data Parsing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (52, 'Tabular Data', '2024-02-12 08:48:08.380201+00', '2024-02-12 08:48:08.380214+00', 1, 0, '/static/templates/tabular-data.png', '<h1>Annotate data in tables</h1>', NULL, NULL, NULL, '<View>
#       <Header value="Table with {key: value} pairs"/>
#       <Table name="table" value="$item"/>
#       <Choices name="choice" toName="table">
#           <Choice value="Correct"/>
#           <Choice value="Incorrect"/>
#       </Choices>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "item": {
#             "Card number": 18799210,
#             "First name": "Max",
#             "Last name": "Nobel"
#           }
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Structured Data Parsing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (53, 'PDF Classification', '2024-02-12 08:48:08.384413+00', '2024-02-12 08:48:08.384425+00', 1, 0, '/static/templates/pdf-classification.png', '<h1>Classify PDF documents</h1>', NULL, NULL, NULL, '<View>
#       <Header value="Rate this article"/>
#       <Rating name="rating" toName="pdf" maxRating="10" icon="star" size="medium" />

#       <Choices name="choices" choice="single-radio" toName="pdf" showInline="true">
#         <Choice value="Important article"/>
#         <Choice value="Yellow press"/>
#       </Choices>
#       <HyperText name="pdf" value="$pdf" inline="true"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "pdf": "&lt;embed src=''/static/samples/sample.pdf'' width=''100%'' height=''600px''/&gt;"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Structured Data Parsing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (66, 'Visual Question Answering', '2024-02-12 08:48:08.4413+00', '2024-02-12 08:48:08.441312+00', 1, 0, '/static/templates/visual-question-answering.png', '<h1>Answer the questions related to what you see on the picture</h1>', NULL, NULL, NULL, '<View>
#       <Image name="image" value="$image"/>
#       <Labels name="aspect" toName="q1">
#         <Label value="attribute identification" background="#F39C12"/>
#         <Label value="counting" background="#E74C3C"/>
#         <Label value="comparison" background="#3498DB"/>
#         <Label value="multiple attention" background="#2ECC71"/>
#         <Label value="logical operations" background="#8E44AD"/>
#       </Labels>
#       <Header value="Please answer these questions:"/>
#       <View style="display: grid; grid-template-columns: 1fr 10fr 1fr 3fr; column-gap: 1em; align-items: center;">
#         <Header value="Q1:"/>
#         <Text name="q1" value="$q1"/>
#         <Header value="A1:"/>
#         <View style="margin-bottom: -24px">
#           <TextArea name="answer1" toName="q1" rows="1" maxSubmissions="1"/>
#         </View>
#       </View>
#       <View style="display: grid; grid-template-columns: 1fr 10fr 1fr 3fr; column-gap: 1em; align-items: center;">
#         <Header value="Q2:"/>
#         <Text name="q2" value="$q2"/>
#         <Header value="A2:"/>
#         <View style="margin-bottom: -24px">
#           <TextArea name="answer2" toName="q2" rows="1" maxSubmissions="1"/>
#         </View>
#       </View>
#       <View style="display: grid; grid-template-columns: 1fr 10fr 1fr 3fr; column-gap: 1em; align-items: center;">
#         <Header value="Q3:"/>
#         <Text name="q3" value="$q3"/>
#         <Header value="A3:"/>
#         <View style="margin-bottom: -24px">
#           <TextArea name="answer3" toName="q3" rows="1" maxSubmissions="1"/>
#         </View>
#       </View>
#       <View style="display: grid; grid-template-columns: 1fr 10fr 1fr 3fr; column-gap: 1em; align-items: center;">
#         <Header value="Q4:"/>
#         <Text name="q4" value="$q4"/>
#         <Header value="A4:"/>
#         <View style="margin-bottom: -24px">
#           <TextArea name="answer4" toName="q4" rows="1" maxSubmissions="1"/>
#         </View>
#       </View>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (54, 'Freeform Metadata', '2024-02-12 08:48:08.389058+00', '2024-02-12 08:48:08.389069+00', 1, 0, '/static/templates/freeform-metadata.png', '<h1>Specify your own metadata in table</h1>', NULL, NULL, NULL, '<View>
#       <Style>
#         input[type="text"][name^="table"] { border-radius: 0px; border-right: none;}
#         input[type="text"][name^="table_metric"] { border-right: 1px solid #ddd; }
#         div[class*=" TextAreaRegion_mark"] {background: none; height: 33px; border-radius: 0; min-width: 135px;}
#       </Style>

#       <Text value="$text" name="text"/>

#       <View style="display: grid;  grid-template-columns: 1fr 1fr; max-height: 300px; width: 400px">
#         <TextArea name="table_name_1" toName="text" placeholder="name" editable="true" maxSubmissions="1"/>
#         <TextArea name="table_value_1" toName="text" placeholder="value" editable="true" maxSubmissions="1"/>
#         <TextArea name="table_name_2" toName="text" placeholder="name" editable="true" maxSubmissions="1"/>
#         <TextArea name="table_value_2" toName="text" placeholder="value" editable="true" maxSubmissions="1"/>
#         <TextArea name="table_name_3" toName="text" placeholder="name" editable="true" maxSubmissions="1"/>
#         <TextArea name="table_value_3" toName="text" placeholder="value" editable="true" maxSubmissions="1"/>
#       </View>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "text": "Quisque id blandit nunc, pharetra tincidunt libero. Quisque sit amet euismod mi."
#         }
#       },
#       {
#         "data": {
#           "text": "Donec interdum porta massa. Etiam varius efficitur metus sed posuere."
#         }
#       }
#     ]
#       </View>
#     </View>

#     <!-- {
#       "data": {"text": "This is a great 3D movie that delivers everything almost right in your face."}
#     }
#     -->
#     ', 'f', ' ', 'Structured Data Parsing', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (55, 'Video Object Tracking', '2024-02-12 08:48:08.394021+00', '2024-02-12 08:48:08.394033+00', 1, 0, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Object tracking in video with bounding boxes</h1>', NULL, NULL, NULL, '<View>
#       <Labels name="videoLabels" toName="video" allowEmpty="true">
#         <Label value="Man" background="blue"/>
#         <Label value="Woman" background="red"/>
#         <Label value="Other" background="green"/>
#       </Labels>

#       <!-- Please specify FPS carefully, it will be used for all project videos -->
#       <Video name="video" value="$video" framerate="25.0"/>
#       <VideoRectangle name="box" toName="video" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "video": "/static/samples/opossum_snow.mp4"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Videos', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (56, 'Video Classification', '2024-02-12 08:48:08.397595+00', '2024-02-12 08:48:08.397606+00', 1, 0, '/static/templates/video-classification.png', '<h1>Classify video</h1>', NULL, NULL, NULL, '<View>
#       <Video name="video" value="$video"/>
#       <Choices name="choice" toName="video" showInLine="true">
#         <Choice value="Blurry" />
#         <Choice value="Sharp" />
#       </Choices>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "video": "/static/samples/opossum_snow.mp4"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Videos', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (57, 'Video Timeline Segmentation', '2024-02-12 08:48:08.401477+00', '2024-02-12 08:48:08.401489+00', 1, 0, '/static/templates/video-timeline-segmentation.png', '<h1>Select and classify video segments</h1>', NULL, NULL, NULL, '<View>
#       <Header value="Video timeline segmentation via AudioPlus sync trick"/>
#       <Video name="video" value="$video" sync="audio"/>
#       <Labels name="tricks" toName="audio" choice="multiple">
#         <Label value="Kickflip" background="#1BB500"/>
#         <Label value="360 Flip" background="#FFA91D"/>
#         <Label value="Trick" background="#358EF3"/>
#       </Labels>
#       <AudioPlus name="audio" value="$video" sync="video" speed="false"/>
#     </View>
#     ', 'f', ' ', 'Videos', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (58, '3D Semantic Segmentation', '2024-02-12 08:48:08.406202+00', '2024-02-12 08:48:08.406213+00', 1, 1, '/static/templates/semantic-segmentation-with-polygons.png', '<h1>PCD files semantic segmentation</h1>', 'wowai/3d_semantic_segmentation', '108.181.196.144', '8039', '<View>

#       <Image name="pcd" value="$pcd" />

#       <Labels name="label" toName="pcd">
#         <Label value="Tree" background="red"/>
#         <Label value="Car" background="blue"/>
#         <Label value="Road" background="blue"/>
#       </Labels>

#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "pcd": "/static/samples/3d.pcd"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', '3D Model', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (59, 'Keypoint Labeling', '2024-02-12 08:48:08.410136+00', '2024-02-12 08:48:08.410147+00', 1, 10000, '/static/templates/keypoints.png', '<h1>Click the label and then on the canvas</h1>', NULL, NULL, NULL, '<View>
#       <KeyPointLabels name="kp-1" toName="image">
#         <Label value="Face" background="red" />
#         <Label value="Nose" background="green" />
#       </KeyPointLabels>
#       <Image name="image" value="$image" />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (60, 'Inventory Tracking', '2024-02-12 08:48:08.41396+00', '2024-02-12 08:48:08.413972+00', 1, 0, '/static/templates/inventory-tracking.png', '<h1>Label exact products on the shelves</h1>', NULL, NULL, NULL, '<View>
#       <View style="display:flex;justify-content:center">
#         <PolygonLabels name="objects" toName="image" value="$objects"/>
#       </View>
#       <Image name="image" value="$image"/>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/trees_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (61, 'Image Classification', '2024-02-12 08:48:08.41813+00', '2024-02-12 08:48:08.418143+00', 1, 0, '/static/templates/image-classification.png', '<h1>Classify the image</h1>', NULL, NULL, NULL, '<View>
#       <Image name="image" value="$image"/>
#       <Choices name="choice" toName="image">
#         <Choice value="Adult content"/>
#         <Choice value="Weapons" />
#         <Choice value="Violence" />
#       </Choices>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (63, 'Optical Character Recognition', '2024-02-12 08:48:08.427057+00', '2024-02-12 08:48:08.427069+00', 1, 0, '/static/templates/optical-character-recognition.png', '<h1>Draw a bounding box or polygon around region and write down the text found inside</h1>', 'wowai/tesseract_server', '108.181.196.144', '8019', '<View>
#       <Image name="image" value="$image"/>

#       <Labels name="label" toName="image" choice="multiple">
#         <Label value="Text" background="green"/>
#         <Label value="Handwriting" background="blue"/>
#       </Labels>

#       <Rectangle name="bbox" toName="image" strokeWidth="3"/>
#       <Polygon name="poly" toName="image" strokeWidth="3"/>

#       <TextArea name="transcription" toName="image"
#                 editable="true"
#                 perRegion="true"
#                 required="false"
#                 maxSubmissions="1"
#                 rows="5"
#                 placeholder="Recognized Text"
#                 displayMode="region-list"
#                 />
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (64, 'Visual Genome', '2024-02-12 08:48:08.431382+00', '2024-02-12 08:48:08.431393+00', 1, 0, '/static/templates/visual-genome.png', '<h1>Label different described features</h1>', NULL, NULL, NULL, '<View>
#       <View style="display: flex; flex-wrap: wrap;">
#         <View className="label-column">
#           <Header value="Regions"/>
#           <RectangleLabels name="regions" toName="image" value="$regions"/>
#       </View>
#         <View className="label-column">
#           <Header value="Attributes"/>
#         <RectangleLabels name="attributes" toName="image" value="$attributes"/>
#         </View>
#         <View className="label-column">
#           <Header value="Relationships"/>
#         <RectangleLabels name="relationships" toName="image" value="$relationships"/>
#         </View>

#       </View>
#       <Image name="image" value="$image"/>
#       <Style>
#       .label-column .lsf-labels {
#         display: flex;
#         flex-direction: column;
#         align-items: flex-start;
#       }
#       </Style>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Computer Vision', NULL);
#     INSERT INTO "annotation_template_annotation_template" ("id", "name", "created_at", "updated_at", "author_id", "order", "image", "details", "ml_image", "ml_ip", "ml_port", "config", "status", "data_type", "group", "infrastructure_id") VALUES (73, 'Falcon 7B', '2024-02-12 08:48:08.471841+00', '2024-02-12 08:48:08.471853+00', 1, 1, '/static/templates/object-detection-with-bounding-boxes.png', '<h1>Draw a bounding box around the object</h1>', 'wowai/falcon7b', '108.181.196.144', '8013', '<View>
#       <Image name="image" value="$image"/>
#       <RectangleLabels name="label" toName="image">
#         <Label value="Airplane" background="green"/>
#         <Label value="Car" background="blue"/>
#       </RectangleLabels>
#       <View style="display:none" class="example">
#     [
#       {
#         "data": {
#           "image": "/static/samples/tress_in_snow.jpg"
#         }
#       }
#     ]
#       </View>
#     </View>
#     ', 'f', ' ', 'Large Language Model', NULL);
# """),
    
    ]
