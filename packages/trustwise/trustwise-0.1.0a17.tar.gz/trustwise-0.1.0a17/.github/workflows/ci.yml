name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add permissions at the workflow level
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"
    
    - name: Run tests with tox
      run: |
        tox -e py${{ matrix.python-version == '3.11' && '311' || '312' }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"
    
    - name: Run linting with tox
      run: |
        tox -e lint

  docs-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          uv pip install --system -e ".[dev]"
      - name: Build documentation with tox
        run: |
          tox -e docs
      - name: Upload built docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/_build/html

  docs-deploy:
    needs: docs-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: docs-html
          path: docs/_build/html
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  trivy-scan:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner (filesystem)
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln,secret,misconfig,license'
          output: 'trivy-results.txt'
      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.txt
      - name: Publish Trivy Output to Summary
        run: |
          if [[ -s trivy-results.txt ]]; then
            {
              echo "### Trivy Security Scan Output"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```'
              cat trivy-results.txt
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi
