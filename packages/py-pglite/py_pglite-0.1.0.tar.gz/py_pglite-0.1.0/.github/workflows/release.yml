name: Release to PyPI

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  test-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "22"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install types-psutil

    - name: Run full test suite
      run: |
        pytest examples/ --cov=py_pglite -v

    - name: Lint and type check
      run: |
        ruff check py_pglite/
        ruff format --check py_pglite/
        mypy py_pglite/

    - name: Test package build
      run: |
        pip install build
        python -m build
        pip install dist/*.whl

  release:
    runs-on: ubuntu-latest
    needs: test-release
    environment: 
      name: pypi
      url: https://pypi.org/project/py-pglite/
    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  create-github-release:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Build package for release assets
      run: |
        python -m pip install --upgrade pip build
        python -m build

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(steps.extract_version.outputs.version, 'rc') || contains(steps.extract_version.outputs.version, 'beta') || contains(steps.extract_version.outputs.version, 'alpha') }}
        body: |
          ## Changes in v${{ steps.extract_version.outputs.version }}
          
          See the full changelog for details.
          
          ## Installation
          
          ```bash
          pip install py-pglite==${{ steps.extract_version.outputs.version }}
          ```
          
          ## PyPI Release
          ðŸ“¦ [View on PyPI](https://pypi.org/project/py-pglite/${{ steps.extract_version.outputs.version }}/) 