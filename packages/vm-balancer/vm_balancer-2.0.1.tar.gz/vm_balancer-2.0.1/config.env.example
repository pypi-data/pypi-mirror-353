# VMManager 6 Auto-Balancer Configuration
# Copy this file to .env and set your values

# VMManager connection settings
VMMANAGER_HOST=https://your-vmmanager-host.com
VMMANAGER_USERNAME=admin
VMMANAGER_PASSWORD=your_password

# Balance settings
BALANCE_INTERVAL=600  # Check interval in seconds (10 minutes)
CLUSTER_IDS=1,2,3  # Comma-separated cluster IDs to process (empty = all clusters)
MAX_MIGRATIONS_PER_CYCLE=1  # Maximum number of VM migrations per cycle
MIGRATION_TIMEOUT=3600  # Migration timeout in seconds (60 minutes)

# Threshold settings for load balancing
CPU_OVERLOAD_THRESHOLD=7.0  # CPU allocation ratio threshold for overloaded nodes
MEMORY_OVERLOAD_THRESHOLD=70.0  # Memory usage percentage threshold for overloaded nodes
CPU_TARGET_THRESHOLD=6.0  # CPU allocation ratio threshold for target nodes
MEMORY_TARGET_THRESHOLD=80.0  # Memory usage percentage threshold for target nodes

# Node exclusion settings
EXCLUDE_SOURCE_NODES=  # Comma-separated node names or IDs to exclude as migration sources
EXCLUDE_TARGET_NODES=  # Comma-separated node names or IDs to exclude as migration targets

# Logging
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR

# SSL verification (set to true for production)
VERIFY_SSL=false

# SSH monitoring settings (for real-time load average)
SSH_ENABLED=false  # Enable SSH monitoring for load average
SSH_USERNAME=  # SSH username for node monitoring (optional, will use API data if available)
SSH_PRIVATE_KEY_PATH=  # Path to SSH private key file (for key-based authentication)
SSH_PASSWORD=  # SSH password (for password-based authentication)
SSH_TIMEOUT=10  # SSH connection timeout in seconds
SSH_HOSTS_MAPPING=  # JSON mapping of node names to SSH hostnames (optional, API IP will be used by default)

# SSH Authentication Examples:
# RECOMMENDED: Key-based authentication (more secure)
# SSH_USERNAME=root  # Fallback username if API doesn't provide ssh_user
# SSH_PRIVATE_KEY_PATH=/root/.ssh/id_rsa  # Path to private key
# SSH_PASSWORD=  # Leave empty for key-based auth
#
# ALTERNATIVE: Password-based authentication
# SSH_USERNAME=root  # Fallback username if API doesn't provide ssh_user
# SSH_PRIVATE_KEY_PATH=  # Leave empty for password auth
# SSH_PASSWORD=your_ssh_password  # SSH password
#
# PRIORITY SYSTEM:
# 1. SSH Load Average (if SSH enabled and working)
# 2. API vCPU Allocation Ratio (fallback)
#
# AUTO-CONFIGURATION:
# - SSH host/IP: extracted from API field 'ip'
# - SSH port: extracted from API field 'port' (default: 22)
# - SSH username: extracted from API field 'ssh_user'
# SSH_PRIVATE_KEY_PATH=
# SSH_PASSWORD=your_ssh_password
#
# Note: API provides IP, port, and username automatically from /vm/v3/node endpoint
# SSH_HOSTS_MAPPING is only needed if you want to override API-provided IPs

# Telegram notifications (optional)
TELEGRAM_BOT_TOKEN=  # Telegram bot token for notifications
TELEGRAM_CHAT_ID=  # Telegram chat ID for notifications

# Example usage:
# python vm_balancer.py --once --dry-run  # Test run without actual migrations
# python vm_balancer.py --interval 300    # Run every 5 minutes
# python vm_balancer.py --cluster-ids 1 2 # Process only clusters with IDs 1 and 2
# python vm_balancer.py --ssh-enabled --notifications  # Enable SSH monitoring and Telegram notifications
# python vm_balancer.py --ssh-enabled --ssh-password mypassword  # SSH with password authentication
# python vm_balancer.py --ssh-enabled --ssh-private-key /path/to/key  # SSH with key authentication
