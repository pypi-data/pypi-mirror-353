name: Manual PyPI Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 2.0.1)'
        required: true
        type: string
      environment:
        description: 'Environment to publish to'
        required: true
        default: 'pypi'
        type: choice
        options:
          - pypi
          - testpypi

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -r requirements.txt

    - name: Update version
      run: |
        # Update version in setup.py
        sed -i 's/version="[^"]*"/version="${{ github.event.inputs.version }}"/' setup.py
        # Update version in pyproject.toml
        sed -i 's/version = "[^"]*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml

    - name: Build package
      run: |
        rm -rf dist/ build/ src/*.egg-info/
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Publish to PyPI
      if: github.event.inputs.environment == 'pypi'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Publish to Test PyPI
      if: github.event.inputs.environment == 'testpypi'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*

    - name: Create Git Tag
      if: github.event.inputs.environment == 'pypi'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
