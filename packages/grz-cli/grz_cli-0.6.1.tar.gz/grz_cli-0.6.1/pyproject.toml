[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grz-cli"
description = "Tool for validation, encryption and upload of MV submissions to GDCs."
readme = "README.md"
license = "MIT"
authors = [
    { name = "Koray Kirli", email = "koraykirli@gmail.com" },
    { name = "Mathias Lesche", email = "mathias.lesche@tu-dresden.de" },
    { name = "Florian R. HÃ¶lzlwimmer", email = "git.ich@frhoelzlwimmer.de" },
    { name = "Till Hartmann", email = "till.hartmann@bih-charite.de" },
    { name = "Thomas Sell", email = "thomas.sell@bih-charite.de" },
]
dynamic = ["version"]
dependencies = [
    "boto3 >=1.36,<2",
    "click >=8.1.7,<9",
    "crypt4gh >=1.7,<2",
    "jsonschema >=4.23.0,<5",
    "pyyaml >=6.0.2,<7",
    "tqdm >=4.66.5,<5",
    "pydantic >=2.9.2,<2.10",
    "pydantic-settings >=2.9.0,<2.10",
    "platformdirs >=4.3.6,<5",
    "grz-pydantic-models >=1.3.0",
    "pysam ==0.23.*",
    "rich ==13.*",
    "requests >=2.32.3,<3"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent"
]
requires-python = ">=3.12"
keywords = ["GRZ", "GDC", "S3"]


[tool.setuptools.dynamic]
version = { attr = "grz_cli.__version__" }

[project.urls]
"Homepage" = "https://codebase.helmholtz.cloud/grz-mv-genomseq/grz-cli"

[project.scripts]
grz-cli = "grz_cli.cli:main"

[project.optional-dependencies]
test = [
    "pytest >=8.3.3,<9",
    "pytest-cov >=5.0.0,<6",
    "pytest-mock >=3.14.0,<4",
    "moto[s3] >=5.0.16,<6",
    "pytest-sugar >=1.0.0,<2",
    "ruff >=0.9.6,<1",
    "numpy >=2.1.2,<3",
    "responses ==0.25.*"
]

[dependency-groups]
test = [
    "pytest",
    "pytest-mock",
    "pytest-cov",
    "pytest-sugar",
    "moto[s3]",
    "numpy"
]
lint = [
    "ruff",
    "types-pyyaml",
    "types-tqdm",
    "pydantic",
    "pyrefly",
]

[tool.ruff]
exclude = [
    ".git",
    ".devcontainer",
    "__pycache__",
    "build",
    "dist",
    "out"
]
line-length = 120
src = [
    "src",
    "tests"
]
target-version = "py310"

[tool.ruff.lint]
fixable = [
    "UP",
    "I",
    "D",
]
ignore = [
    "E111",
    "E114",
    "E116",
    "PLW",
    "RUF001",
    "RUF010",
    "RUF012",
    "N818",
    "B008",
    "PLR2004",
    "D200",
    "D205",
    "D400",
    "D401",
    "D107",
    "D206",
    "D300",
    "UP040",
]
select = [
    "C90",
    "F",
    "I",
    "S",
    "B",
    "N",
    "UP",
    "PL",
    "RUF",
    "SIM",
    "D",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S",
    "SIM",
    "PLR",
    "B011",
    "D103"
]
"__init__.py" = [
    "D",
]
"src/grz_cli/models/**.py" = [
    "D100",
    "D101",
    "D102",
    "N805"
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.tox]
requires = ["tox>=4.23"]
env_list = ["format-check", "lints", "pyrefly", "3.12", "3.13"]
allowlist_externals = ["pytest", "ruff"]
isolated_build = true

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
description = "run unit tests"
dependency_groups = ["test"]
commands = [["pytest", { replace = "posargs", default = ["tests"], extend = true }]]

[tool.tox.env."format-check"]
runner = "uv-venv-lock-runner"
skip_install = true
dependency_groups = ["lint"]
commands = [["ruff", "format", "--check"]]

[tool.tox.env."lints"]
runner = "uv-venv-lock-runner"
skip_install = true
dependency_groups = ["lint"]
commands = [["ruff", "check"]]

[tool.tox.env."pyrefly"]
runner = "uv-venv-lock-runner"
skip_install = false
dependency_groups = ["lint"]
commands = [["pyrefly", "check"]]

[tool.uv]
dev-dependencies = [
    "datamodel-code-generator>=0.26.2",
    "pyrefly>=0.16.0,<0.17.0",
    "ruff>=0.9.6",
    "tox>=4.23.2",
    "tox-uv>=1.20.1",
    "types-pyyaml>=6.0.12.20240917",
    "types-tqdm>=4.66.0.20240417",
]

[tool.pyrefly]
project_includes = ["src"]
python_version = "3.12.0"
use_untyped_imports = false
ignore_missing_source = false

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
