import datetime
from numpy import datetime64
from numpy import float64
from numpy import float32
from numpy import int32  # int
from numpy import int64  # long

# Pandas data types to impose them when creating a dataframe
# rather than having it guess from the data.

domain_dataframe_column_types = {
    # table names here
    "care_site": {
        "care_site_id": int64,
        "care_site_name": str,
        "place_of_service_concept_id": int32,
        "location_id": int64,
        "care_site_source_value": str,
        "place_of_service_source_value": str,
        "filename": str,
    },
    "location": {
        "location_id": int64,
        "address_1": str,
        "address_2": str,
        "city": str,
        "state": str,
        "zip": str,
        "county": str,
        "location_source_value": str,
        "filename": str,
    },
    "provider": {
        "provider_id": int64,
        "provider_name": str,
        "npi": str,
        "dea": str,
        "specialty_concept_id": int32,
        "care_site_id": int64,
        "year_of_birth": int32,
        "gender_concept_id": int32,
        "provider_source_value": str,
        "specialty_source_value": str,
        "specialty_source_concept_id": int32,
        "gender_source_value": str,
        "gender_source_concept_id": int32,
        "filename": str,
    },
    "person": {
        "person_id": int64,
        "gender_concept_id": int32,
        "year_of_birth": int32,
        "month_of_birth": int32,
        "day_of_birth": int32,
        "birth_datetime": datetime.datetime,
        "race_concept_id": int32,
        "ethnicity_concept_id": int32,
        "location_id": int64,
        "provider_id": int64,
        "care_site_id": int64,
        "person_source_value": str,
        "gender_source_value": str,
        "gender_source_concept_id": int32,
        "race_source_value": str,
        "race_source_concept_id": int32,
        "ethnicity_source_value": str,
        "ethnicity_source_concept_id": int32,
        "filename": str,
    },
    "visit_occurrence": {
        "visit_occurrence_id": int64,
        "person_id": int64,
        "visit_concept_id": int32,
        "visit_start_date": datetime.date,
        "visit_start_datetime": datetime.datetime,
        "visit_end_date": datetime.date,
        "visit_end_datetime": datetime.datetime,
        "visit_type_concept_id": int32,
        "provider_id": int64,
        "care_site_id": int64,
        "visit_source_value": str,
        "visit_source_concept_id": int32,
        "admitting_source_value": str,
        "admitting_source_concept_id": int32,
        "discharge_to_concept_id": int32,
        "discharge_to_source_value": str,
        "preceding_visit_occurrence_id": int64,
        "filename": str,
    },
    "measurement": {
        "measurement_id": int64,
        "person_id": int64,
        "measurement_concept_id": int32,
        "measurement_date": datetime.date,
        "measurement_datetime": datetime.datetime,
        "measurement_time": str,
        "measurement_type_concept_id": int32,
        "operator_concept_id": int32,
        "value_as_number": float32,
        "value_as_concept_id": int32,
        "unit_concept_id": int32,
        "range_low": float32,
        "range_high": float32,
        "provider_id": int64,
        "visit_occurrence_id": int64,
        "visit_detail_id": int64,
        "measurement_source_value": str,
        "measurement_source_concept_id": int32,
        "unit_source_value": str,
        "value_source_value": str,
        "filename": str,
    },
    "observation": {
        "observation_id": int64,
        "person_id": int64,
        "observation_concept_id": int32,
        "observation_date": datetime.date,
        "observation_datetime": datetime.datetime,
        "observation_type_concept_id": int32,
        "value_as_number": float32,
        "value_as_string": str,
        "value_as_concept_id": int32,
        "qualifier_concept_id": int32,
        "unit_concept_id": int32,
        "provider_id": int64,
        "visit_occurrence_id": int64,
        "visit_detail_id": int64,
        "observation_source_value": str,
        "observation_source_concept_id": int32,
        "unit_source_value": str,
        "qualifier_source_value": str,
        "filename": str,
    },
    "condition_occurrence": {
        "condition_occurrence_id": int64,
        "person_id": int64,
        "condition_concept_id": int32,
        "condition_start_date": datetime.date,
        "condition_start_datetime": datetime.datetime,
        "condition_end_date": datetime.date,
        "condition_end_datetime": datetime.datetime,
        "condition_type_concept_id": int32,
        "condition_status_concept_id": int32,
        "stop_reason": str,
        "provider_id": int64,
        "visit_occurrence_id": int64,
        "visit_detail_id": int64,
        "condition_source_value": str,
        "condition_source_concept_id": int32,
        "condition_status_source_value": str,
        "filename": str,
    },
    "procedure_occurrence": {
        "procedure_occurrence_id": int64,
        "person_id": int64,
        "procedure_concept_id": int32,
        "procedure_date": datetime.date,
        "procedure_datetime": datetime.datetime,
        "procedure_type_concept_id": int32,
        "modifier_concept_id": int32,
        "quantity": int32,
        "provider_id": int64,
        "visit_occurrence_id": int64,
        "visit_detail_id": int64,
        "procedure_source_value": str,
        "procedure_source_concept_id": int32,
        "modifier_source_value": str,
        "filename": str,
    },
    "drug_exposure": {
        "drug_exposure_id": int64,
        "person_id": int64,
        "drug_concept_id": int32,
        "drug_exposure_start_date": datetime.date,
        "drug_exposure_start_datetime": datetime.datetime,
        "drug_exposure_end_date": datetime.date,
        "drug_exposure_end_datetime": datetime.datetime,
        "verbatim_end_date": datetime.date,
        "drug_type_concept_id": int32,
        "stop_reason": str,
        "refills": int32,
        "quantity": float32,
        "days_supply": int32,
        "sig": str,
        "route_concept_id": int32,
        "lot_number": str,
        "provider_id": int64,
        "visit_occurrence_id": int64,
        "visit_detail_id": int64,
        "drug_source_value": str,
        "drug_source_concept_id": int32,
        "route_source_value": str,
        "dose_unit_source_value": str,
        "filename": str,
    },
    "device_exposure": {
        "device_concept_id": int32,
        "person_id": int64,
        "device_concept_id": int32,
        "device_exposure_start_date": datetime.date,
        "device_exposure_start_datetime": datetime.datetime,
        "device_exposure_end_date": datetime.date,
        "device_exposure_end_datetime": datetime.datetime,
        "device_type_concept_id": int32,
        "unique_device_id": str,
        "quantity": int32,
        "provider_id": int64,
        "visit_occurrence_id": int64,
        "visit_detail_id": int64,
        "device_source_value": str,
        "device_source_concept_id": int32,
    },
}
