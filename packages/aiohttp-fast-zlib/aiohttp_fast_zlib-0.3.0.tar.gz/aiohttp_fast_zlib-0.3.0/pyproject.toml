[project]
name = "aiohttp-fast-zlib"
version = "0.3.0"
license = "Apache-2.0"
description = "Use the fastest installed zlib compatible library with aiohttp"
authors = [{ name = "J. Nick Koston", email = "nick@koston.org" }]
readme = "README.md"
requires-python = ">=3.9"
dynamic = ["classifiers", "dependencies", "optional-dependencies"]

[project.urls]
"Repository" = "https://github.com/bluetooth-devices/aiohttp-fast-zlib"
"Bug Tracker" = "https://github.com/bluetooth-devices/aiohttp-fast-zlib/issues"
"Changelog" = "https://github.com/bluetooth-devices/aiohttp-fast-zlib/blob/main/CHANGELOG.md"

[tool.poetry]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
]
packages = [
    { include = "aiohttp_fast_zlib", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = ">=3.9.0"
isal = {version = ">=1.6.1", optional = true}
zlib_ng = {version = ">=0.4.3", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = ">=7,<9"
pytest-cov = ">=3,<7"

[tool.poetry.extras]
isal = ["isal"]
zlib_ng = ["zlib_ng"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "src/aiohttp_fast_zlib/__init__.py:__version__",
]
build_command = "pip install poetry && poetry build"

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    "chore*",
    "ci*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=aiohttp_fast_zlib --cov-report=term-missing:skip-covered"
pythonpath = ["src"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
    'if __name__ == "__main__":',
]

[tool.ruff]
target-version = "py38"
line-length = 88
ignore = [
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `__init__`
    "D401", # First line of docstring should be in imperative mood
]
select = [
    "B",   # flake8-bugbear
    "D",   # flake8-docstrings
    "C4",  # flake8-comprehensions
    "S",   # flake8-bandit
    "F",   # pyflake
    "E",   # pycodestyle
    "W",   # pycodestyle
    "UP",  # pyupgrade
    "I",   # isort
    "RUF", # ruff specific
]

[tool.ruff.per-file-ignores]
"tests/**/*" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "S101",
]
"setup.py" = ["D100"]
"conftest.py" = ["D100"]

[tool.ruff.isort]
known-first-party = ["aiohttp_fast_zlib", "tests"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
    'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"
