[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false
name = "foobar"
version = "0.1.0"
description = "A fabulous project."
license = "MIT"
authors = ["John Doe <john.doe@example.com>"]
maintainers = ["Dohn Joe <dohn.joe@example.com>", "Johd Noe"]
readme = "README.md"
keywords = [
    "foo",
    "bar",
    "foobar",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
homepage = "https://homepage.example.com"
repository = "https://repository.example.com"
documentation = "https://docs.example.com"

# Package metadata
packages = [
    { include = "packages-sdist-wheel" },
    { include = "packages-sdist-wheel-2", format = [] },
    { include = "packages-sdist-wheel-3/**/*.py", format = ["sdist", "wheel"] },
    { include = "packages-sdist", format = "sdist" },
    { include = "packages-sdist-2", format = ["sdist"] },
    { include = "packages-wheel", format = "wheel" },
    { include = "packages-wheel-2", format = ["wheel"] },
    { include = "packages-from", from = "from" },
    { include = "packages-to", to = "to" },
    { include = "packages-from-to", from = "from", to = "to" },
    { include = "packages-glob-to/**/*.py", to = "to" },
    { include = "packages-glob-from-to/**/*.py", from = "from", to = "to" },
]
include = [
    "include-sdist-wheel",
    { path = "include-sdist-wheel-2" },
    { path = "include-sdist-wheel-3", format = [] },
    { path = "include-sdist-wheel-4", format = ["sdist", "wheel"] },
    { path = "include-sdist", format = "sdist" },
    { path = "include-sdist-2", format = ["sdist"] },
    { path = "include-wheel", format = "wheel" },
    { path = "include-wheel-2", format = ["wheel"] },
]
exclude = [
    "exclude-sdist-wheel",
    "exclude-sdist-wheel-2",
]

[tool.poetry.dependencies]
# Python version
python = "^3.11"  # ~=3.11

# Caret
caret = "^1.2.3"  # >=1.2.3,<2
caret-2 = "^1.2"  # >=1.2.0,<2 or ~=1.2
caret-3 = "^1"  # >=1.0.0,<2
caret-4 = "^0.2.3"  # >=0.2.3,<0.3
caret-5 = "^0.0.3"  # >=0.0.3,<0.0.4
caret-6 = "^0.0"  # >=0.0.0,<0.1
caret-7 = "^0"  # >=0.0.0,<1
caret-8 = "^1.2.3.4"  # >=1.2.3.4,<2
caret-9 = "^0.1.2.3"  # >=0.1.2.3,<0.2
caret-pre-release = "^1.2.3b1"  # >=1.2.3b1,<2

# Tilde
tilde = "~1.2.3"  # >=1.2.3,<1.3.0 or ~=1.2.3
tilde-2 = "~1.2"  # >=1.2.0,<1.3
tilde-3 = "~1"  # >=1.0.0,<2
tilde-4 = "~1.2.3.4"  # >=1.2.3.4,<1.3.0.0 or ~=1.2.3.4
tilde-pre-release = "~1.2.3b1"  # >=1.2.3b1,<1.3 or ~=1.2.3

# Almost PEP 440
exact = "1.2.3"  # ==1.2.3
exact-2 = "=1.2.3"  # ==1.2.3
star = "*"  # (no version specifier)
star-2 = "1.*"  # ==1.*
star-3 = "1.2.*"  # ==1.2.*

# PEP 440
pep440 = ">=1.2.3"  # >=1.2.3 (already compliant)

# Tables
with-version-only = { version = "1.2.3" }
with-extras = { version = "1.2.3", extras = ["asyncio", "postgresql_asyncpg"] }
with-markers = { version = "1.2.3", markers = "python_version <= '3.11' or sys_platform == 'win32'" }
with-platform = { version = "1.2.3", platform = "darwin" }
with-markers-python-platform = { version = "1.2.3", python = "~3.11", platform = "darwin", markers = "platform_python_implementation == 'CPython' or platform_python_implementation == 'Jython'", additional_key = "foobar" }
with-source = { version = "1.2.3", source = "supplemental" }

python-restricted = { version = "1.2.3", python = "^3.11" }
python-restricted-2 = { version = "1.2.3", python = "~3.11" }
python-restricted-3 = { version = "1.2.3", python = ">3.11" }
python-restricted-4 = { version = "1.2.3", python = ">=3.11" }
python-restricted-5 = { version = "1.2.3", python = "<3.11" }
python-restricted-6 = { version = "1.2.3", python = "<=3.11" }
python-restricted-7 = { version = "1.2.3", python = ">3.11,<3.13" }
python-restricted-with-source = { version = "1.2.3", python = ">3.11,<3.13", source = "supplemental" }

# Going wild
whitespaces = "    ^   3.2   "
whitespaces-2 = { version = "     >   3.11,     <=     3.13    " }

# Extras and optional
dep-in-extra = { version = "1.2.3" }
optional-in-extra = { version = "1.2.3", optional = true }
optional-not-in-extra = { version = "1.2.3", optional = true }

# Path
local-package = { path = "package/" }
local-package-2 = { path = "package/dist/package-0.1.0.tar.gz", develop = false }
local-package-editable = { path = "editable-package/", develop = true }

# URL
url-dep = { url = "https://example.com/package-0.0.1.tar.gz" }

# Git
git = { git = "https://example.com/foo/bar" }
git-branch = { git = "https://example.com/foo/bar", branch = "foo" }
git-rev = { git = "https://example.com/foo/bar", rev = "1234567" }
git-tag = { git = "https://example.com/foo/bar", tag = "v1.2.3" }
git-subdirectory = { git = "https://example.com/foo/bar", subdirectory = "directory" }

# Multiple constraints
multiple-constraints-python-version = [
    { python = ">=3.11", version = ">=2" },
    { python = "<3.11", version = "<2" },
]
multiple-constraints-platform-version = [
    { platform = "darwin", version = ">=2" },
    { platform = "linux", version = "<2" },
]
multiple-constraints-markers-version = [
    { markers = "platform_python_implementation == 'CPython'", version = ">=2" },
    { markers = "platform_python_implementation != 'CPython'", version = "<2" },
]
multiple-constraints-python-platform-markers-version = [
    { python = ">=3.11", platform = "darwin", markers = "platform_python_implementation == 'CPython'", version = ">=2" },
    { python = "<3.11", platform = "linux", markers = "platform_python_implementation != 'CPython'", version = "<2" },
]
multiple-constraints-python-source  = [
    { python = ">=3.11", url = "https://example.com/foo-1.2.3-py3-none-any.whl" },
    { python = "<3.11", git = "https://example.com/foo/bar", tag = "v1.2.3" },
]
multiple-constraints-platform-source  = [
    { platform = "darwin", url = "https://example.com/foo-1.2.3-py3-none-any.whl" },
    { platform = "linux", git = "https://example.com/foo/bar", tag = "v1.2.3" },
]
multiple-constraints-markers-source = [
    { markers = "platform_python_implementation == 'CPython'", url = "https://example.com/foo-1.2.3-py3-none-any.whl" },
    { markers = "platform_python_implementation != 'CPython'", git = "https://example.com/foo/bar", tag = "v1.2.3" },
]
multiple-constraints-python-platform-markers-source  = [
    { python = ">=3.11", platform = "darwin", markers = "platform_python_implementation == 'CPython'", url = "https://example.com/foo-1.2.3-py3-none-any.whl" },
    { python = "<3.11", platform = "linux", markers = "platform_python_implementation != 'CPython'", source = "supplemental" },
]

[tool.poetry.extras]
extra = ["dep-in-extra"]
extra-2 = ["dep-in-extra", "optional-in-extra"]
extra-with-non-existing-dependencies = ["non-existing-dependency"]

[tool.poetry.dev-dependencies]
dev-legacy = "1.2.3"
dev-legacy-2 = "1.2.3"

[tool.poetry.group.dev.dependencies]
dev-dep = "1.2.3"

[tool.poetry.group.typing.dependencies]
typing-dep = "1.2.3"

[tool.poetry.urls]
"First link" = "https://first.example.com"
"Another link" = "https://another.example.com"

[tool.poetry.scripts]
console-script = "foo:run"
# Although it's possible to set `extras`, it doesn't seem to actually do
# anything (https://github.com/python-poetry/poetry/issues/6892).
console-script-2 = { callable = "bar:run", extras = ["extra"] }

[tool.poetry.plugins.console_scripts]
console-script-2 = "override_bar:run"
console-script-3 = "foobar:run"

[tool.poetry.plugins.gui_scripts]
gui-script = "gui:run"

[tool.poetry.plugins.some-scripts]
a-script = "a_script:run"
another-script = "another_script:run"

[tool.poetry.plugins.other-scripts]
a-script = "another_script:run"
yet-another-script = "yet_another_scripts:run"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "secondary"
url = "https://secondary.example.com/simple/"
priority = "secondary"

[[tool.poetry.source]]
name = "supplemental"
url = "https://supplemental.example.com/simple/"
priority = "supplemental"

[[tool.poetry.source]]
name = "explicit"
url = "https://explicit.example.com/simple/"
priority = "explicit"

[[tool.poetry.source]]
name = "default"
url = "https://default.example.com/simple/"
priority = "default"

[tool.ruff]
fix = true

[tool.ruff.lint]
# This comment should be preserved.
fixable = ["I", "UP"]

[tool.ruff.format]
preview = true
