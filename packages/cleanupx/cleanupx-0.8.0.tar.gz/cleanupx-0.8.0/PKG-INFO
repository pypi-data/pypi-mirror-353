Metadata-Version: 2.4
Name: cleanupx
Version: 0.8.0
Summary: Comprehensive AI-powered file processing and organization tool
Home-page: https://github.com/lukeslp/cleanupx
Author: Luke Steuber
Author-email: Luke Steuber <luke@lukesteuber.com>
License: MIT
Project-URL: Homepage, https://lukesteuber.com
Project-URL: Documentation, https://github.com/lukeslp/cleanupx#readme
Project-URL: Repository, https://github.com/lukeslp/cleanupx
Project-URL: Bug Tracker, https://github.com/lukeslp/cleanupx/issues
Project-URL: Changelog, https://github.com/lukeslp/cleanupx/blob/main/CHANGELOG.md
Project-URL: Author Website, https://lukesteuber.com
Project-URL: Assistant Platform, https://assisted.site
Project-URL: Newsletter, https://lukesteuber.substack.com/
Project-URL: Support, https://usefulai.lemonsqueezy.com/buy/bf6ce1bd-85f5-4a09-ba10-191a670f74af
Keywords: file-processing,ai,deduplication,organization,cleanup,images,accessibility,privacy,automation,cli,productivity,utilities,xai,machine-learning
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Topic :: System :: Archiving
Classifier: Topic :: System :: Filesystems
Classifier: Topic :: Utilities
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Multimedia :: Graphics
Classifier: Topic :: Text Processing
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Classifier: Environment :: Console
Classifier: Natural Language :: English
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.31.0
Requires-Dist: python-dotenv>=0.15.0
Requires-Dist: rich>=13.7.0
Requires-Dist: inquirer>=3.4.0
Requires-Dist: pillow>=10.0.0
Requires-Dist: backoff>=2.2.0
Provides-Extra: ai
Requires-Dist: openai>=1.0.0; extra == "ai"
Provides-Extra: documents
Requires-Dist: PyPDF2>=3.0.1; extra == "documents"
Requires-Dist: python-docx>=1.1.2; extra == "documents"
Provides-Extra: images
Requires-Dist: pyheif>=0.7.1; extra == "images"
Provides-Extra: archives
Requires-Dist: rarfile>=4.0; extra == "archives"
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: flake8>=4.0.0; extra == "dev"
Requires-Dist: build>=0.8.0; extra == "dev"
Requires-Dist: twine>=4.0.0; extra == "dev"
Provides-Extra: all
Requires-Dist: openai>=1.0.0; extra == "all"
Requires-Dist: PyPDF2>=3.0.1; extra == "all"
Requires-Dist: python-docx>=1.1.2; extra == "all"
Requires-Dist: pyheif>=0.7.1; extra == "all"
Requires-Dist: rarfile>=4.0; extra == "all"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# cleanupx - Comprehensive File Processing Tool

**Version 0.8.0** - Prerelease

A powerful, AI-enhanced file organization and processing framework with comprehensive capabilities for code analysis, image processing, file deduplication, and privacy utilities.

## üéØ What's New in v0.8 (Prerelease)

- **üèóÔ∏è Complete Reorganization**: Clean modular structure with core functionality separated from storage
- **üöÄ Enhanced Performance**: Streamlined imports and optimized processing
- **üîÑ Backward Compatibility**: All existing commands continue to work
- **üì¶ Unified Architecture**: Consolidated scattered functionality into organized modules
- **üîí SSL Ready**: Full HTTPS support with proper certificate configuration
- **üéØ Consistent Branding**: Unified "cleanupx" naming throughout the project

## üìÅ Project Structure

```
cleanupx/
‚îú‚îÄ‚îÄ cleanupx.py                 # Main CLI interface
‚îú‚îÄ‚îÄ cleanupx_core/              # Core functionality
‚îÇ   ‚îú‚îÄ‚îÄ api/                    # XAI API integration  
‚îÇ   ‚îú‚îÄ‚îÄ processors/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ integrated/         # New comprehensive processing
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ legacy/             # Backward compatibility
‚îÇ   ‚îî‚îÄ‚îÄ utils/                  # Common utilities
‚îú‚îÄ‚îÄ storage/                    # Non-core functionality archive
‚îÇ   ‚îú‚îÄ‚îÄ legacy_methods/         # Original processing methods
‚îÇ   ‚îú‚îÄ‚îÄ dev_tools/              # Development utilities
‚îÇ   ‚îî‚îÄ‚îÄ documentation/          # Archive documentation
‚îî‚îÄ‚îÄ test/                       # Test files
```

## üöÄ Quick Start

### Installation

```bash
# Install from PyPI (recommended)
pip install cleanupx

# Or install prerelease version
pip install --pre cleanupx

# Or clone from source
git clone https://github.com/lukeslp/cleanupx.git
cd cleanupx
pip install -r requirements.txt

# Set up environment (optional for AI features)
echo "XAI_API_KEY=your-xai-api-key" > .env
```

### Basic Usage

```bash
# Check system status
cleanupx --help

# Run file deduplication
cleanupx deduplicate --dir test

# Process images for accessibility
cleanupx images --dir test  

# Comprehensive processing with all features
cleanupx comprehensive --dir test

# Privacy: scramble filenames
cleanupx scramble --dir test
```

## üõ†Ô∏è Features

### Core Processing
- **File Deduplication**: Smart duplicate detection and organization
- **Code Analysis**: Extract and analyze code snippets
- **File Organization**: Categorize and organize files by type and content
- **Citation Processing**: Extract and format citations from documents

### AI-Powered Features
- **X.AI Integration**: Advanced AI processing with retry logic
- **Image Alt Text**: Generate accessibility descriptions for images
- **Content Analysis**: AI-powered content understanding and categorization
- **Smart Deduplication**: Intelligent duplicate detection beyond simple hashing

### Privacy & Utility
- **Filename Scrambling**: Randomize filenames for privacy/testing
- **Rename Logging**: Track and reverse filename changes
- **Rich CLI Interface**: Beautiful terminal output with progress bars
- **Comprehensive Logging**: Detailed operation logs

## üìã Available Commands

### Primary Commands
```bash
comprehensive    # Full processing with all features
images          # AI-powered image processing and alt text generation  
scramble        # Privacy-focused filename scrambling
```

### Legacy Commands (Backward Compatible)
```bash
deduplicate     # Find and process duplicate files
extract         # Extract important code snippets  
organize        # Organize and rename files
all             # Run all legacy processing steps
```

## üîß Configuration

### Environment Variables
```bash
# Required for AI features
XAI_API_KEY=your-xai-api-key

# Optional configurations
CLEANUP_OUTPUT_DIR=custom_output_directory
CLEANUP_LOG_LEVEL=INFO
```

### Dependencies

#### Core Requirements
```
requests>=2.31.0        # HTTP requests
rich>=13.7.0           # Beautiful console output  
inquirer>=3.4.0        # Interactive prompts
pillow>=10.0.0         # Image processing
PyPDF2>=3.0.1          # PDF processing
python-docx>=1.1.2     # Word document processing
```

#### Optional Dependencies
```
openai                 # OpenAI API fallback
PyHEIF                # HEIC/HEIF image support
rarfile               # RAR archive processing
```

## üèóÔ∏è Architecture

### Modular Design
cleanupx is built with a clean, modular architecture:

- **`cleanupx_core/`**: Core functionality with stable APIs
- **`storage/`**: Non-essential functionality for experimentation
- **Processors**: Specialized processing modules for different file types
- **API Layer**: Unified interface for AI service integration

### Key Benefits
1. **Clean Separation**: Core vs. experimental functionality
2. **Backward Compatibility**: Legacy commands continue to work
3. **Extensible**: Easy to add new processors and features
4. **Production Ready**: Robust error handling and logging
5. **Organized Output**: Centralized output management

## üìä Supported File Types

- **Images**: `.jpg`, `.jpeg`, `.png`, `.gif`, `.webp`, `.bmp`, `.tiff`
- **Code**: `.py`, `.js`, `.html`, `.css`, `.md`, `.txt`, `.json`, `.yaml`
- **Documents**: `.pdf`, `.doc`, `.docx`, `.rtf`, `.pptx`
- **Archives**: `.zip`, `.tar`, `.gz` (with optional RAR support)
- **All Others**: Categorized and processed appropriately

## üö¶ Status Check

```bash
# Verify module status
python3 -c "import cleanupx_core; cleanupx_core.print_status()"
```

Expected output:
```
cleanupx Core v0.8.0
  Integrated Processors: ‚úì
  XAI API Support: ‚úì  
  Legacy Processors: ‚úì
  Module Path: /path/to/cleanupx_core
```

## üîç Examples

### Basic File Organization
```bash
# Organize a downloads directory
cleanupx organize --dir ~/Downloads

# Find duplicates in a project
cleanupx deduplicate --dir ~/Projects/MyProject
```

### AI-Enhanced Processing
```bash
# Generate alt text for all images
cleanupx images --dir ./photos

# Comprehensive AI analysis
cleanupx comprehensive --dir ./documents
```

### Privacy & Testing
```bash
# Scramble filenames for privacy
cleanupx scramble --dir ./sensitive_data

# Note: Scrambling creates a log file to reverse changes
```

## üõ†Ô∏è Development

### Module Status
The reorganized architecture provides:
- **Stable Core**: `cleanupx_core/` for production functionality
- **Experimental Storage**: `storage/` for development and testing
- **Clear APIs**: Well-defined interfaces between modules
- **Easy Testing**: Modular design enables easy unit testing

### Contributing
1. Core functionality goes in `cleanupx_core/`
2. Experimental features start in `storage/dev_tools/`
3. All changes must maintain backward compatibility
4. Add comprehensive tests for new features

## üìù License & Credits

**MIT License** by Luke Steuber  

### üîó Connect & Support

| Platform | Link |
|----------|------|
| üåê **Website** | [lukesteuber.com](https://lukesteuber.com) |
| üõ†Ô∏è **Playground** | [assisted.site](https://assisted.site/) |
| üìß **Email** | [luke@lukesteuber.com](mailto:luke@lukesteuber.com) |
| üê¶ **Bluesky** | [@lukesteuber.com](https://bsky.app/profile/lukesteuber.com) |
| üíº **LinkedIn** | [lukesteuber](https://www.linkedin.com/in/lukesteuber/) |
| üíª **GitHub** | [lukeslp](https://github.com/lukeslp) |
| üß† **LlamaLine** | [AI CLI Tool](https://github.com/lukeslp/llamaline) |
| ‚úâÔ∏è **Newsletter** | [Substack](https://lukesteuber.substack.com/) |
| ‚òï **Support** | [Tip Jar](https://usefulai.lemonsqueezy.com/buy/bf6ce1bd-85f5-4a09-ba10-191a670f74af) |  

## üéØ What's Next

1. **Performance Optimization**: Profile and optimize processing speeds
2. **Enhanced AI Features**: More sophisticated content analysis
3. **Web Interface**: Browser-based processing dashboard
4. **API Server**: REST API for remote processing
5. **Plugin System**: Custom processor plugins

---

**Version**: 0.8.0 - Prerelease  
**Last Updated**: June 6, 2025  
**Status**: üöß Prerelease - Testing & Feedback Welcome
