[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cleanupx"
dynamic = ["version"]
authors = [
    {name = "Luke Steuber", email = "luke@lukesteuber.com"},
]
description = "Comprehensive AI-powered file processing and organization tool"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: System :: Archiving",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Text Processing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
]
keywords = [
    "file-processing", "ai", "deduplication", "organization", 
    "cleanup", "images", "accessibility", "privacy", "automation",
    "cli", "productivity", "utilities", "xai", "machine-learning"
]
dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=0.15.0",
    "rich>=13.7.0",
    "inquirer>=3.4.0",
    "pillow>=10.0.0",
    "backoff>=2.2.0",
]

[project.optional-dependencies]
ai = [
    "openai>=1.0.0",
]
documents = [
    "PyPDF2>=3.0.1",
    "python-docx>=1.1.2",
]
images = [
    "pyheif>=0.7.1",
]
archives = [
    "rarfile>=4.0",
]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "build>=0.8.0",
    "twine>=4.0.0",
]
all = [
    "openai>=1.0.0",
    "PyPDF2>=3.0.1",
    "python-docx>=1.1.2",
    "pyheif>=0.7.1",
    "rarfile>=4.0",
]

[project.scripts]
cleanupx = "cleanupx:main"
cleanupx-status = "cleanupx_core:print_status"

[project.urls]
Homepage = "https://lukesteuber.com"
Documentation = "https://github.com/lukeslp/cleanupx#readme"
Repository = "https://github.com/lukeslp/cleanupx"
"Bug Tracker" = "https://github.com/lukeslp/cleanupx/issues"
Changelog = "https://github.com/lukeslp/cleanupx/blob/main/CHANGELOG.md"
"Author Website" = "https://lukesteuber.com"
"Assistant Platform" = "https://assisted.site"
Newsletter = "https://lukesteuber.substack.com/"
Support = "https://usefulai.lemonsqueezy.com/buy/bf6ce1bd-85f5-4a09-ba10-191a670f74af"

[tool.setuptools.dynamic]
version = {attr = "cleanupx_core.__version__"}

[tool.setuptools]
packages = ["cleanupx_core", "cleanupx_core.api", "cleanupx_core.processors", "cleanupx_core.processors.integrated", "cleanupx_core.processors.legacy", "cleanupx_core.utils"]
py-modules = ["cleanupx"]

[tool.setuptools.package-data]
cleanupx_core = ["*.md", "*.txt", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | storage
)/
'''

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "storage",
] 