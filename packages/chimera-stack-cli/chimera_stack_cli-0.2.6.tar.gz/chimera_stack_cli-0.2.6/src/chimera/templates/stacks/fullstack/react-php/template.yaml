name: "React PHP Fullstack"
version: "1.0.0"
description: "Complete fullstack development environment with React frontend, PHP backend, and choice of database"
type: "stack"

# Stack composition
stack:
  default_database: mysql
  frontend:
    framework: "react"
    version: "18"
    dev_server: true
  backend:
    api_prefix: "/api"
    cors_origin: "http://localhost:${FRONTEND_PORT}"

# Define available variants
variants:
  - mysql
  - mariadb
  - postgresql

# Components
components:
  database:
    source: "base/database/${DB_ENGINE}"
    required: true
  core_welcome:
    source: "base/core/welcome"
    required: true
  backend:
    source: "base/backend/php"
    required: true
  frontend:
    type: "frontend"
    framework: "react"
    required: true
    config:
      port_range: "3000-3999"
      env_prefix: "FRONTEND"
      dev_server:
        host: "0.0.0.0"
        port: "${FRONTEND_PORT}"

# Welcome page configuration
welcome_page:
  sections:
    - title: "Frontend (React)"
      service: "frontend"
      url: "http://localhost:${FRONTEND_PORT}"
      dev_server: true
    - title: "Backend API"
      service: "backend"
      url: "http://localhost:${WEB_PORT}/api"
    - title: "Database"
      service: "db"
      port: "${DB_PORT}"
      type: "${DB_CONNECTION}"
      credentials:
        database: "${DB_DATABASE}"
        username: "${DB_USERNAME}"
        password: "${DB_PASSWORD}"
    - title: "Database Admin"
      service: "db_admin"
      url: "http://localhost:${ADMIN_PORT}"
      variant_specific:
        postgresql: "pgAdmin"
        mysql: "phpMyAdmin"
        mariadb: "phpMyAdmin"

# Additional services
services:
  db_admin:
    type: "web"
    port_range: "8080-8099"
    required: false
    env_prefix: "ADMIN"
    depends_on: ["database"]
    variant_specific:
      postgresql:
        image: "dpage/pgadmin4"
        env:
          PGADMIN_DEFAULT_EMAIL: "admin@example.com"
          PGADMIN_DEFAULT_PASSWORD: "${DB_PASSWORD}"
      mysql:
        image: "phpmyadmin/phpmyadmin"
        env:
          PMA_HOST: "db"
          PMA_PORT: "3306"
      mariadb:
        image: "phpmyadmin/phpmyadmin"
        env:
          PMA_HOST: "db"
          PMA_PORT: "3306"

# Files to be generated/processed
files:
  - source: "docker-compose.yml.j2"
    target: "docker-compose.yml"
    jinja: true
  - source: "frontend/env.template"
    target: "frontend/.env"
  - source: "README.md"
    target: "README.md"

# Network configuration
network:
  name: "app-network"
  driver: "bridge"

# Post-creation hooks
post_create:
  - working_dir: "backend"
    command: "composer install || echo 'Skipping composer install'"

# Declarative cleanup
post_copy:
  # Remove variant compose files - now using unified file
  - remove: "docker-compose.mysql.yml"
  - remove: "docker-compose.mariadb.yml"
  - remove: "docker-compose.postgresql.yml"
  # NOTE: Keep canonical docker-compose.yml; it is rendered from the *.j2 template above.

  # Delete empty or obsolete directories
  - remove_dir: "database"
  - remove_dir: "www"
  # Update upstream name in welcome nginx config to match backend service
  - patch_file:
      path: "docker/nginx/conf.d/default.conf"
      replace: "fastcgi_pass php:9000;"
      with: "fastcgi_pass backend:9000;"

# Tags for searching
tags:
  - react
  - vite
  - tailwind
  - php
  - mysql
  - mariadb
  - postgresql
  - fullstack
  - api
  - development
