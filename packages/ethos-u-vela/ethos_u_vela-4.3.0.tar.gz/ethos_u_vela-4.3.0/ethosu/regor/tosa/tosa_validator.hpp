//
// SPDX-FileCopyrightText: Copyright 2023-2025 Arm Limited and/or its affiliates <open-source-office@arm.com>
//
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the License); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an AS IS BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Automatically generated by tosaValidationGenerator for TOSA Specification 0.80.0
// Do not edit.

#pragma once

#include "include/graphapi.hpp"

#include <functional>
#include <stdexcept>

namespace GraphApi
{
struct GraphOperation;
}  // namespace GraphApi

namespace regor
{
class Operation;
class Graph;
}  // namespace regor

namespace tosa
{
namespace validator
{

enum class Level
{
    Levelnone,
    Level8K,
};

struct Context
{
    uint32_t version = GraphApi::VERSION_TOSA_0_80;
    int32_t profile = GraphApi::PROFILE_BASELINE;
    Level level = Level::Level8K;
    std::function<const regor::Graph *(const char *)> GetGraph;
};

void ValidateOperator_Version_0_80_0_Profile_BI(const GraphApi::GraphOperation *graphOp, const Context &context);
void ValidateOperator_Version_0_60_0_Profile_BI(const GraphApi::GraphOperation *graphOp, const Context &context);
void ValidateOperator(const GraphApi::GraphOperation *graphOp, const Context &context = Context{});

}  // namespace validator
}  // namespace tosa
