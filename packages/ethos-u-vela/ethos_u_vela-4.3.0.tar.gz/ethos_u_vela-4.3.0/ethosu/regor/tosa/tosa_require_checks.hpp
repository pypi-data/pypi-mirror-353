//
// SPDX-FileCopyrightText: Copyright 2023-2024 Arm Limited and/or its affiliates <open-source-office@arm.com>
//
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the License); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an AS IS BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Generated by tosaValidationGenerator for TOSA Specification 0.60.0
// Do not edit.

#pragma once

#include "tosa/tosa_validator.hpp"

namespace tosa
{
namespace validator
{
namespace checks
{
// Checks for TOSA Specification 0.60.0
void RequireCheck_25jhgrylo2an5(const regor::Operation *op, const Context &context);
void RequireCheck_35z4hcgn21c8p(const regor::Operation *op, const Context &context);
void RequireCheck_2v5c1x79g8j7o(const regor::Operation *op, const Context &context);
void RequireCheck_3k2pr9vozq62t(const regor::Operation *op, const Context &context);
void RequireCheck_27adsuj7sthvo(const regor::Operation *op, const Context &context);
void RequireCheck_3o6eotvyt76cz(const regor::Operation *op, const Context &context);
void RequireCheck_31n0oq4yculbk(const regor::Operation *op, const Context &context);
void RequireCheck_2apk8ly9uthz6(const regor::Operation *op, const Context &context);
}  // namespace checks
}  // namespace validator
}  // namespace tosa
namespace tosa
{
namespace validator
{
namespace checks
{
// Checks for TOSA specification 0.80.0
void RequireCheck_7uc4ey0qoi0f(const regor::Operation *op, const Context &context);
void RequireCheck_32ckjbsfiesgu(const regor::Operation *op, const Context &context);
void RequireCheck_1h6xoevynk8a0(const regor::Operation *op, const Context &context);
void RequireCheck_2f51h19mqfhr8(const regor::Operation *op, const Context &context);
void RequireCheck_1oaur42wgph0t(const regor::Operation *op, const Context &context);
void RequireCheck_3dbpm758kyex1(const regor::Operation *op, const Context &context);
void RequireCheck_3ah9e1mnk126p(const regor::Operation *op, const Context &context);
void RequireCheck_2e13btqfr98am(const regor::Operation *op, const Context &context);
void RequireCheck_lt5trq6bbw9w(const regor::Operation *op, const Context &context);
void RequireCheck_1nuiu459z8num(const regor::Operation *op, const Context &context);
void RequireCheck_182ljbxwn59zs(const regor::Operation *op, const Context &context);
void RequireCheck_2pd0619ns6vtd(const regor::Operation *op, const Context &context);
void RequireCheck_54sthn768s68(const regor::Operation *op, const Context &context);
void RequireCheck_7uvvy4pqp2pj(const regor::Operation *op, const Context &context);
void RequireCheck_2wyo0jz6whe2p(const regor::Operation *op, const Context &context);
void RequireCheck_8hliqs7zbosu(const regor::Operation *op, const Context &context);
}  // namespace checks
}  // namespace validator
}  // namespace tosa
