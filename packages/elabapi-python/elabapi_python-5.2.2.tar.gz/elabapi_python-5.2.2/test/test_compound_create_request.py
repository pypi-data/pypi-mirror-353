# coding: utf-8

"""
    eLabFTW REST API v2 Documentation

    This document describes all available endpoints and methods for eLabFTW's API version 2. 

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from elabapi_python.models.compound_create_request import CompoundCreateRequest

class TestCompoundCreateRequest(unittest.TestCase):
    """CompoundCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CompoundCreateRequest:
        """Test CompoundCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CompoundCreateRequest`
        """
        model = CompoundCreateRequest()
        if include_optional:
            return CompoundCreateRequest(
                action = 'create',
                name = '',
                inchi = '',
                inchi_key = '',
                smiles = '',
                molecular_formula = '',
                cas_number = '',
                iupac_name = '',
                pubchem_cid = 56,
                is_corrosive = True,
                is_serious_health_hazard = True,
                is_explosive = True,
                is_flammable = True,
                is_gas_under_pressure = True,
                is_hazardous2env = True,
                is_hazardous2health = True,
                is_oxidising = True,
                is_toxic = True
            )
        else:
            return CompoundCreateRequest(
                action = 'create',
        )
        """

    def testCompoundCreateRequest(self):
        """Test CompoundCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
