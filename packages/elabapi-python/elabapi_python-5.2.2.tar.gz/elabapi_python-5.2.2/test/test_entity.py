# coding: utf-8

"""
    eLabFTW REST API v2 Documentation

    This document describes all available endpoints and methods for eLabFTW's API version 2. 

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from elabapi_python.models.entity import Entity

class TestEntity(unittest.TestCase):
    """Entity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Entity:
        """Test Entity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Entity`
        """
        model = Entity()
        if include_optional:
            return Entity(
                body = '<h1>Section title</h1><p>Main text of resource</p>',
                canread = '{"base": 20, "teams": [], "users": [1], "teamgroups": [1]}',
                canwrite = '{"base": 20, "teams": [], "users": [1], "teamgroups": [1]}',
                category = 3,
                var_date = '',
                content_type = 1,
                custom_id = 56,
                metadata = elabapi_python.models.metadata.metadata(
                    elabftw = elabapi_python.models.metadata_elabftw.metadata_elabftw(
                        display_main_text = True, 
                        extra_fields_groups = [
                            elabapi_python.models.metadata_elabftw_extra_fields_groups_inner.metadata_elabftw_extra_fields_groups_inner(
                                id = 56, 
                                name = '', )
                            ], ), 
                    extra_fields = {
                        'key' : elabapi_python.models.metadata_extra_fields_value.metadata_extra_fields_value(
                            type = 'allow_multi_values', 
                            value = '', 
                            group_id = 56, 
                            description = '', )
                        }, ),
                rating = 56,
                state = 56,
                status = 1,
                tags = '',
                title = 'Untitled',
                template = 56,
                userid = 56,
                access_key = '',
                body_html = '',
                category_color = '',
                category_title = '',
                comments = [
                    elabapi_python.models.comment.comment(
                        id = 56, 
                        created_at = '', 
                        item_id = 56, 
                        comment = '', 
                        userid = 56, 
                        modified_at = '', 
                        fullname = '', 
                        firstname = '', 
                        lastname = '', 
                        orcid = '', )
                    ],
                compounds = [
                    elabapi_python.models.compound.compound(
                        id = 14, 
                        created_at = '2025-05-17T15:39:15Z', 
                        created_by = 1, 
                        modified_at = '2025-05-17T15:39:15Z', 
                        modified_by = 1, 
                        userid = 1, 
                        team = 1, 
                        state = 1, 
                        name = '2,4-Dichloroanisole', 
                        molecular_formula = 'C7H6Cl2O', 
                        cas_number = '553-82-2', 
                        ec_number = '', 
                        chebi_id = '', 
                        chembl_id = '', 
                        dea_number = '', 
                        drugbank_id = '', 
                        dsstox_id = '', 
                        hmdb_id = '', 
                        inchi = 'InChI=1S/C7H6Cl2O/c1-10-7-3-2-5(8)4-6(7)9/h2-4H,1H3', 
                        inchi_key = 'CICQUFBZCADHHX-UHFFFAOYSA-N', 
                        iupac_name = '2,4-dichloro-1-methoxybenzene', 
                        kegg_id = '', 
                        metabolomics_wb_id = '', 
                        molecular_weight = 177.02, 
                        nci_code = '', 
                        nikkaji_number = '', 
                        pharmgkb_id = '', 
                        pharos_ligand_id = '', 
                        pubchem_cid = 11119, 
                        rxcui = '', 
                        smiles = 'COC1=C(C=C(C=C1)Cl)Cl', 
                        unii = '', 
                        wikidata = '', 
                        wikipedia = '', 
                        is_corrosive = True, 
                        is_explosive = True, 
                        is_flammable = True, 
                        is_gas_under_pressure = True, 
                        is_hazardous2env = True, 
                        is_hazardous2health = True, 
                        is_serious_health_hazard = True, 
                        is_oxidising = True, 
                        is_toxic = True, 
                        is_radioactive = True, 
                        is_antibiotic = True, 
                        is_antibiotic_precursor = True, 
                        is_drug = True, 
                        is_drug_precursor = True, 
                        is_explosive_precursor = True, 
                        is_cmr = True, 
                        is_nano = True, 
                        is_controlled = True, 
                        is_ed2health = True, 
                        is_ed2env = True, 
                        is_pbt = True, 
                        is_pmt = True, 
                        is_vpvb = True, 
                        is_vpvm = True, 
                        fp2_base64 = '', 
                        userid_human = 'Toto Le sysadmin', 
                        team_name = 'Alpha', 
                        has_fingerprint = True, )
                    ],
                created_at = '',
                elabid = '',
                exclusive_edit_mode = elabapi_python.models.exclusive_edit_mode.exclusive_edit_mode(
                    locked_by = 56, 
                    locked_by_human = '', 
                    locked_at = '', 
                    is_stale = 56, ),
                experiments_links = [
                    elabapi_python.models.link.link(
                        entityid = 56, 
                        title = '', 
                        is_bookable = 56, 
                        link_state = 56, 
                        category_color = '', 
                        category_title = '', 
                        status_color = '', 
                        status_title = '', 
                        custom_id = 56, 
                        page = '', 
                        type = '', )
                    ],
                firstname = '',
                fullname = '',
                has_attachement = 56,
                id = 56,
                items_links = [
                    elabapi_python.models.link.link(
                        entityid = 56, 
                        title = '', 
                        is_bookable = 56, 
                        link_state = 56, 
                        category_color = '', 
                        category_title = '', 
                        status_color = '', 
                        status_title = '', 
                        custom_id = 56, 
                        page = '', 
                        type = '', )
                    ],
                lastchangeby = 56,
                lastname = '',
                locked = 56,
                lockedby = 56,
                locked_at = '',
                modified_at = '',
                next_step = '',
                orcid = '',
                page = '',
                recent_comment = '',
                related_experiments_links = [
                    elabapi_python.models.link.link(
                        entityid = 56, 
                        title = '', 
                        is_bookable = 56, 
                        link_state = 56, 
                        category_color = '', 
                        category_title = '', 
                        status_color = '', 
                        status_title = '', 
                        custom_id = 56, 
                        page = '', 
                        type = '', )
                    ],
                related_items_links = [
                    elabapi_python.models.link.link(
                        entityid = 56, 
                        title = '', 
                        is_bookable = 56, 
                        link_state = 56, 
                        category_color = '', 
                        category_title = '', 
                        status_color = '', 
                        status_title = '', 
                        custom_id = 56, 
                        page = '', 
                        type = '', )
                    ],
                sharelink = '',
                status_color = '',
                status_title = '',
                steps = [
                    elabapi_python.models.step.step(
                        id = 56, 
                        item_id = 56, 
                        body = '', 
                        ordering = 56, 
                        finished = 56, 
                        finished_time = '', 
                        deadline = '', 
                        deadline_notif = 56, )
                    ],
                tags_id = '',
                team = 56,
                timestamped = 56,
                timestampedby = 56,
                timestamped_at = '',
                type = '',
                up_item_id = 56,
                uploads = [
                    elabapi_python.models.upload.upload(
                        id = 56, 
                        real_name = '', 
                        long_name = '', 
                        comment = '', 
                        item_id = 56, 
                        userid = '', 
                        type = '', 
                        created_at = '', 
                        hash = '', 
                        hash_algorithm = '', 
                        storage = 56, 
                        filesize = 56, 
                        state = 56, 
                        immutable = 56, 
                        fullname = '', )
                    ]
            )
        else:
            return Entity(
        )
        """

    def testEntity(self):
        """Test Entity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
