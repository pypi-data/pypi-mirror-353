# coding: utf-8

"""
    eLabFTW REST API v2 Documentation

    This document describes all available endpoints and methods for eLabFTW's API version 2. 

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from elabapi_python.models.compound import Compound

class TestCompound(unittest.TestCase):
    """Compound unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Compound:
        """Test Compound
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Compound`
        """
        model = Compound()
        if include_optional:
            return Compound(
                id = 14,
                created_at = '2025-05-17T15:39:15Z',
                created_by = 1,
                modified_at = '2025-05-17T15:39:15Z',
                modified_by = 1,
                userid = 1,
                team = 1,
                state = 1,
                name = '2,4-Dichloroanisole',
                molecular_formula = 'C7H6Cl2O',
                cas_number = '553-82-2',
                ec_number = '',
                chebi_id = '',
                chembl_id = '',
                dea_number = '',
                drugbank_id = '',
                dsstox_id = '',
                hmdb_id = '',
                inchi = 'InChI=1S/C7H6Cl2O/c1-10-7-3-2-5(8)4-6(7)9/h2-4H,1H3',
                inchi_key = 'CICQUFBZCADHHX-UHFFFAOYSA-N',
                iupac_name = '2,4-dichloro-1-methoxybenzene',
                kegg_id = '',
                metabolomics_wb_id = '',
                molecular_weight = 177.02,
                nci_code = '',
                nikkaji_number = '',
                pharmgkb_id = '',
                pharos_ligand_id = '',
                pubchem_cid = 11119,
                rxcui = '',
                smiles = 'COC1=C(C=C(C=C1)Cl)Cl',
                unii = '',
                wikidata = '',
                wikipedia = '',
                is_corrosive = True,
                is_explosive = True,
                is_flammable = True,
                is_gas_under_pressure = True,
                is_hazardous2env = True,
                is_hazardous2health = True,
                is_serious_health_hazard = True,
                is_oxidising = True,
                is_toxic = True,
                is_radioactive = True,
                is_antibiotic = True,
                is_antibiotic_precursor = True,
                is_drug = True,
                is_drug_precursor = True,
                is_explosive_precursor = True,
                is_cmr = True,
                is_nano = True,
                is_controlled = True,
                is_ed2health = True,
                is_ed2env = True,
                is_pbt = True,
                is_pmt = True,
                is_vpvb = True,
                is_vpvm = True,
                fp2_base64 = '',
                userid_human = 'Toto Le sysadmin',
                team_name = 'Alpha',
                has_fingerprint = True
            )
        else:
            return Compound(
        )
        """

    def testCompound(self):
        """Test Compound"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
