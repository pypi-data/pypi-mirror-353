[build-system]
requires = ["setuptools >= 61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flatexpy"
version = "0.0.1"
dependencies = []
requires-python = ">=3.9"
authors = [
  {name = "Tomohito Amano", email = "amanotomohito040@gmail.com"}
]
maintainers = [
  {name = "Tomohito Amano", email = "amanotomohito040@gmail.com"}
]
description = "A LaTeX flattening utility for academic paper submission"
readme = "README.md"
license = {text = "MIT"}
keywords = ["latex", "flattening", "academic", "publishing", "tex", "document-processing"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Education",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Text Processing :: Markup :: LaTeX",
  "Topic :: Scientific/Engineering",
  "Topic :: Utilities",
  "Environment :: Console",
]

[project.urls]
Homepage = "https://github.com/ToAmano/flatexpy"
Documentation = "https://github.com/ToAmano/flatexpy#readme"
Repository = "https://github.com/ToAmano/flatexpy"
"Bug Tracker" = "https://github.com/ToAmano/flatexpy/issues"
Changelog = "https://github.com/ToAmano/flatexpy/blob/main/CHANGELOG.md"

[project.scripts]
flatexpy = "flatexpy_core:main"

[project.optional-dependencies]
dev = [
    "pytest >= 7.0",
    "pytest-cov >= 4.0",
    "black >= 23.0",
    "isort >= 5.12",
    "flake8 >= 6.0",
    "mypy >= 1.0",
    "pre-commit >= 3.0",
]
test = [
    "pytest >= 7.0",
    "pytest-cov >= 4.0",
]
docs = [
    "sphinx >= 6.0",
    "sphinx-rtd-theme >= 1.0",
]

[tool.setuptools.packages.find]
where = ["flatexpy"]

[tool.setuptools.package-dir]
"" = "flatexpy"

[tool.setuptools.package-data]
flatexpy = ["py.typed"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["flatexpy"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    # "--cov=flatexpy",
    # "--cov-report=term-missing",
    # "--cov-report=html",
    # "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["flatexpy"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
max-complexity = 10
select = ["C", "E", "F", "W", "B", "B950"]

# Legacy pylint configuration (keeping for compatibility)
[tool.pylint]
disable = ["C0114", "C0115", "C0116"]
max-line-length = 88
