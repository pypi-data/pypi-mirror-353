# coding: utf-8

"""
    Immich

    Immich API

    The version of the OpenAPI document: 1.134.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from immich_python_sdk.models.user_admin_response_dto import UserAdminResponseDto

class TestUserAdminResponseDto(unittest.TestCase):
    """UserAdminResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserAdminResponseDto:
        """Test UserAdminResponseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserAdminResponseDto`
        """
        model = UserAdminResponseDto()
        if include_optional:
            return UserAdminResponseDto(
                avatar_color = 'primary',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                email = '',
                id = '',
                is_admin = True,
                license = immich_python_sdk.models.user_license.UserLicense(
                    activated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    activation_key = '', 
                    license_key = '', ),
                name = '',
                oauth_id = '',
                profile_changed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                profile_image_path = '',
                quota_size_in_bytes = 56,
                quota_usage_in_bytes = 56,
                should_change_password = True,
                status = 'active',
                storage_label = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return UserAdminResponseDto(
                avatar_color = 'primary',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                email = '',
                id = '',
                is_admin = True,
                license = immich_python_sdk.models.user_license.UserLicense(
                    activated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    activation_key = '', 
                    license_key = '', ),
                name = '',
                oauth_id = '',
                profile_changed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                profile_image_path = '',
                quota_size_in_bytes = 56,
                quota_usage_in_bytes = 56,
                should_change_password = True,
                status = 'active',
                storage_label = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testUserAdminResponseDto(self):
        """Test UserAdminResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
