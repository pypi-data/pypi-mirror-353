# coding: utf-8

"""
    Immich

    Immich API

    The version of the OpenAPI document: 1.134.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from immich_python_sdk.models.system_config_job_dto import SystemConfigJobDto

class TestSystemConfigJobDto(unittest.TestCase):
    """SystemConfigJobDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SystemConfigJobDto:
        """Test SystemConfigJobDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SystemConfigJobDto`
        """
        model = SystemConfigJobDto()
        if include_optional:
            return SystemConfigJobDto(
                background_task = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                face_detection = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                library = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                metadata_extraction = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                migration = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                notifications = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                search = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                sidecar = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                smart_search = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                thumbnail_generation = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                video_conversion = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, )
            )
        else:
            return SystemConfigJobDto(
                background_task = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                face_detection = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                library = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                metadata_extraction = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                migration = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                notifications = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                search = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                sidecar = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                smart_search = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                thumbnail_generation = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
                video_conversion = immich_python_sdk.models.job_settings_dto.JobSettingsDto(
                    concurrency = 1, ),
        )
        """

    def testSystemConfigJobDto(self):
        """Test SystemConfigJobDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
