# coding: utf-8

"""
    Immich

    Immich API

    The version of the OpenAPI document: 1.134.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from immich_python_sdk.models.asset_response_dto import AssetResponseDto

class TestAssetResponseDto(unittest.TestCase):
    """AssetResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssetResponseDto:
        """Test AssetResponseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssetResponseDto`
        """
        model = AssetResponseDto()
        if include_optional:
            return AssetResponseDto(
                checksum = '',
                device_asset_id = '',
                device_id = '',
                duplicate_id = '',
                duration = '',
                exif_info = immich_python_sdk.models.exif_response_dto.ExifResponseDto(
                    city = '', 
                    country = '', 
                    date_time_original = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = '', 
                    exif_image_height = 1.337, 
                    exif_image_width = 1.337, 
                    exposure_time = '', 
                    f_number = 1.337, 
                    file_size_in_byte = 56, 
                    focal_length = 1.337, 
                    iso = 1.337, 
                    latitude = 1.337, 
                    lens_model = '', 
                    longitude = 1.337, 
                    make = '', 
                    model = '', 
                    modify_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    orientation = '', 
                    projection_type = '', 
                    rating = 1.337, 
                    state = '', 
                    time_zone = '', ),
                file_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                file_modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                has_metadata = True,
                id = '',
                is_archived = True,
                is_favorite = True,
                is_offline = True,
                is_trashed = True,
                library_id = '',
                live_photo_video_id = '',
                local_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                original_file_name = '',
                original_mime_type = '',
                original_path = '',
                owner = immich_python_sdk.models.user_response_dto.UserResponseDto(
                    avatar_color = null, 
                    email = '', 
                    id = '', 
                    name = '', 
                    profile_changed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    profile_image_path = '', ),
                owner_id = '',
                people = [
                    immich_python_sdk.models.person_with_faces_response_dto.PersonWithFacesResponseDto(
                        birth_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        color = '', 
                        faces = [
                            immich_python_sdk.models.asset_face_without_person_response_dto.AssetFaceWithoutPersonResponseDto(
                                bounding_box_x1 = 56, 
                                bounding_box_x2 = 56, 
                                bounding_box_y1 = 56, 
                                bounding_box_y2 = 56, 
                                id = '', 
                                image_height = 56, 
                                image_width = 56, 
                                source_type = null, )
                            ], 
                        id = '', 
                        is_favorite = True, 
                        is_hidden = True, 
                        name = '', 
                        thumbnail_path = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                resized = True,
                stack = immich_python_sdk.models.asset_stack_response_dto.AssetStackResponseDto(
                    asset_count = 56, 
                    id = '', 
                    primary_asset_id = '', ),
                tags = [
                    immich_python_sdk.models.tag_response_dto.TagResponseDto(
                        color = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        name = '', 
                        parent_id = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value = '', )
                    ],
                thumbhash = '',
                type = 'IMAGE',
                unassigned_faces = [
                    immich_python_sdk.models.asset_face_without_person_response_dto.AssetFaceWithoutPersonResponseDto(
                        bounding_box_x1 = 56, 
                        bounding_box_x2 = 56, 
                        bounding_box_y1 = 56, 
                        bounding_box_y2 = 56, 
                        id = '', 
                        image_height = 56, 
                        image_width = 56, 
                        source_type = null, )
                    ],
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                visibility = 'archive'
            )
        else:
            return AssetResponseDto(
                checksum = '',
                device_asset_id = '',
                device_id = '',
                duration = '',
                file_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                file_modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                has_metadata = True,
                id = '',
                is_archived = True,
                is_favorite = True,
                is_offline = True,
                is_trashed = True,
                local_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                original_file_name = '',
                original_path = '',
                owner_id = '',
                thumbhash = '',
                type = 'IMAGE',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                visibility = 'archive',
        )
        """

    def testAssetResponseDto(self):
        """Test AssetResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
