# coding: utf-8

"""
    Immich

    Immich API

    The version of the OpenAPI document: 1.134.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from immich_python_sdk.models.user_preferences_response_dto import UserPreferencesResponseDto

class TestUserPreferencesResponseDto(unittest.TestCase):
    """UserPreferencesResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserPreferencesResponseDto:
        """Test UserPreferencesResponseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserPreferencesResponseDto`
        """
        model = UserPreferencesResponseDto()
        if include_optional:
            return UserPreferencesResponseDto(
                download = immich_python_sdk.models.download_response.DownloadResponse(
                    archive_size = 56, 
                    include_embedded_videos = True, ),
                email_notifications = immich_python_sdk.models.email_notifications_response.EmailNotificationsResponse(
                    album_invite = True, 
                    album_update = True, 
                    enabled = True, ),
                folders = immich_python_sdk.models.folders_response.FoldersResponse(
                    enabled = True, 
                    sidebar_web = True, ),
                memories = immich_python_sdk.models.memories_response.MemoriesResponse(
                    enabled = True, ),
                people = immich_python_sdk.models.people_response.PeopleResponse(
                    enabled = True, 
                    sidebar_web = True, ),
                purchase = immich_python_sdk.models.purchase_response.PurchaseResponse(
                    hide_buy_button_until = '', 
                    show_support_badge = True, ),
                ratings = immich_python_sdk.models.ratings_response.RatingsResponse(
                    enabled = True, ),
                shared_links = immich_python_sdk.models.shared_links_response.SharedLinksResponse(
                    enabled = True, 
                    sidebar_web = True, ),
                tags = immich_python_sdk.models.tags_response.TagsResponse(
                    enabled = True, 
                    sidebar_web = True, )
            )
        else:
            return UserPreferencesResponseDto(
                download = immich_python_sdk.models.download_response.DownloadResponse(
                    archive_size = 56, 
                    include_embedded_videos = True, ),
                email_notifications = immich_python_sdk.models.email_notifications_response.EmailNotificationsResponse(
                    album_invite = True, 
                    album_update = True, 
                    enabled = True, ),
                folders = immich_python_sdk.models.folders_response.FoldersResponse(
                    enabled = True, 
                    sidebar_web = True, ),
                memories = immich_python_sdk.models.memories_response.MemoriesResponse(
                    enabled = True, ),
                people = immich_python_sdk.models.people_response.PeopleResponse(
                    enabled = True, 
                    sidebar_web = True, ),
                purchase = immich_python_sdk.models.purchase_response.PurchaseResponse(
                    hide_buy_button_until = '', 
                    show_support_badge = True, ),
                ratings = immich_python_sdk.models.ratings_response.RatingsResponse(
                    enabled = True, ),
                shared_links = immich_python_sdk.models.shared_links_response.SharedLinksResponse(
                    enabled = True, 
                    sidebar_web = True, ),
                tags = immich_python_sdk.models.tags_response.TagsResponse(
                    enabled = True, 
                    sidebar_web = True, ),
        )
        """

    def testUserPreferencesResponseDto(self):
        """Test UserPreferencesResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
