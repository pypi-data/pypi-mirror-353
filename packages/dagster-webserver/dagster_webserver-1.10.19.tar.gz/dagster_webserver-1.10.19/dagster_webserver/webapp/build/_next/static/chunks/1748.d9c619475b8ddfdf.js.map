{"version":3,"file":"static/chunks/1748.d9c619475b8ddfdf.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/resources/ResourceTabs.tsx","webpack://_N_E/../ui-core/src/resources/ResourceRoot.tsx"],"sourcesContent":["import {Box, Tabs, Tag} from '@dagster-io/ui-components';\nimport {useRouteMatch} from 'react-router-dom';\n\nimport {TabLink} from '../ui/TabLink';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nconst titles: {[key: string]: string} = {\n  configuration: 'Configuration',\n  uses: 'Uses',\n};\n\nexport const ResourceTabs = (props: {\n  repoAddress: RepoAddress;\n  resourceName: string;\n  numUses: number;\n}) => {\n  const {repoAddress, resourceName, numUses} = props;\n\n  const match = useRouteMatch<{tab?: string; selector: string}>([\n    '/locations/:repoPath/resources/:name/:tab?',\n  ]);\n\n  const active = (match?.params.tab && titles[match?.params.tab]) || 'Configuration';\n\n  return (\n    <>\n      <Tabs size=\"large\" selectedTabId={active}>\n        <TabLink\n          key=\"configuration\"\n          id=\"Configuration\"\n          title=\"Configuration\"\n          to={workspacePathFromAddress(repoAddress, `/resources/${resourceName}`)}\n        />\n        <TabLink\n          key=\"uses\"\n          id=\"Uses\"\n          title={\n            <Box flex={{gap: 4, alignItems: 'center'}}>\n              Uses\n              <Tag intent=\"none\" minimal={true}>\n                {numUses}\n              </Tag>\n            </Box>\n          }\n          to={workspacePathFromAddress(repoAddress, `/resources/${resourceName}/uses`)}\n        />\n      </Tabs>\n    </>\n  );\n};\n","import {\n  Alert,\n  Box,\n  ButtonLink,\n  CaptionMono,\n  Colors,\n  Group,\n  Heading,\n  Icon,\n  MiddleTruncate,\n  Mono,\n  NonIdealState,\n  Page,\n  PageHeader,\n  SplitPanelContainer,\n  Subheading,\n  Table,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, useParams, useRouteMatch} from 'react-router-dom';\n\nimport {ResourceTabs} from './ResourceTabs';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  ResourceDetailsFragment,\n  ResourceRootQuery,\n  ResourceRootQueryVariables,\n} from './types/ResourceRoot.types';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetLink} from '../assets/AssetLink';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {Loading} from '../ui/Loading';\nimport {Markdown} from '../ui/Markdown';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nconst remapName = (inName: string): string => {\n  if (inName === 'StringSourceType') {\n    return 'String';\n  } else if (inName === 'IntSourceType') {\n    return 'Int';\n  } else if (inName === 'BoolSourceType') {\n    return 'Bool';\n  }\n  return inName;\n};\n\nexport const succinctType = (resourceType: string | undefined): string | null => {\n  return resourceType?.split('.').pop() || null;\n};\n\nconst resourceDisplayName = (\n  resource: undefined | {name: string; resourceType: string},\n): string | null => {\n  if (!resource) {\n    return null;\n  }\n  return resource.name.startsWith('_nested_')\n    ? succinctType(resource?.resourceType)\n    : resource.name;\n};\n\nconst SectionHeader = (props: {children: React.ReactNode}) => {\n  return (\n    <Box padding={{left: 24, vertical: 16}} background={Colors.backgroundLight()} border=\"all\">\n      {props.children}\n    </Box>\n  );\n};\n\n// Strip leading tabs from the lines produced for the resource description, since they\n// break markdown formatting.\nconst removeLeadingTabs = (input: string) => {\n  const lines = input.split('\\n');\n  return lines.map((line) => line.replace(/^    /, '')).join('\\n');\n};\n\nexport const ResourceRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {repoAddress} = props;\n  const {resourceName} = useParams<{resourceName: string}>();\n\n  useDocumentTitle(`Resource: ${resourceName}`);\n\n  const resourceSelector = {\n    ...repoAddressToSelector(repoAddress),\n    resourceName,\n  };\n  const queryResult = useQuery<ResourceRootQuery, ResourceRootQueryVariables>(RESOURCE_ROOT_QUERY, {\n    variables: {\n      resourceSelector,\n    },\n  });\n\n  const displayName =\n    (queryResult.data?.topLevelResourceDetailsOrError.__typename === 'ResourceDetails' &&\n      resourceDisplayName(queryResult.data?.topLevelResourceDetailsOrError)) ||\n    resourceName;\n\n  const numUses =\n    queryResult.data?.topLevelResourceDetailsOrError.__typename === 'ResourceDetails'\n      ? queryResult.data.topLevelResourceDetailsOrError.parentResources.length +\n        queryResult.data.topLevelResourceDetailsOrError.assetKeysUsing.length +\n        queryResult.data.topLevelResourceDetailsOrError.jobsOpsUsing.length +\n        queryResult.data.topLevelResourceDetailsOrError.schedulesUsing.length +\n        queryResult.data.topLevelResourceDetailsOrError.sensorsUsing.length\n      : 0;\n\n  const tab = useRouteMatch<{tab?: string}>(['/locations/:repoPath/resources/:name/:tab?'])?.params\n    .tab;\n\n  return (\n    <Page style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader\n        title={<Heading>{displayName}</Heading>}\n        tags={\n          <Tag icon=\"resource\">\n            Resource in <RepositoryLink repoAddress={repoAddress} />\n          </Tag>\n        }\n        tabs={\n          <ResourceTabs repoAddress={repoAddress} resourceName={resourceName} numUses={numUses} />\n        }\n      />\n      <Loading queryResult={queryResult} allowStaleData={true}>\n        {({topLevelResourceDetailsOrError}) => {\n          if (topLevelResourceDetailsOrError.__typename !== 'ResourceDetails') {\n            let message: string | null = null;\n            if (topLevelResourceDetailsOrError.__typename === 'PythonError') {\n              message = topLevelResourceDetailsOrError.message;\n            }\n\n            return (\n              <Alert\n                intent=\"warning\"\n                title={\n                  <Group direction=\"row\" spacing={4}>\n                    <div>Could not load resource.</div>\n                    {message && (\n                      <ButtonLink\n                        color={Colors.linkDefault()}\n                        underline=\"always\"\n                        onClick={() => {\n                          showCustomAlert({\n                            title: 'Python error',\n                            body: message,\n                          });\n                        }}\n                      >\n                        View error\n                      </ButtonLink>\n                    )}\n                  </Group>\n                }\n              />\n            );\n          }\n\n          const resourceTypeSuccinct = succinctType(topLevelResourceDetailsOrError.resourceType);\n\n          return (\n            <div style={{height: '100%', display: 'flex'}}>\n              <SplitPanelContainer\n                identifier=\"resource-explorer\"\n                firstInitialPercent={50}\n                firstMinSize={400}\n                first={\n                  <Box padding={{bottom: 48}} style={{overflowY: 'auto'}}>\n                    {tab === 'uses' ? (\n                      <ResourceUses\n                        resourceDetails={topLevelResourceDetailsOrError}\n                        repoAddress={repoAddress}\n                        numUses={numUses}\n                      />\n                    ) : (\n                      <ResourceConfig\n                        resourceDetails={topLevelResourceDetailsOrError}\n                        repoAddress={repoAddress}\n                      />\n                    )}\n                  </Box>\n                }\n                second={\n                  <Box padding={{bottom: 48}} style={{overflowY: 'auto'}}>\n                    <Box\n                      flex={{gap: 4, direction: 'column'}}\n                      margin={{left: 24, right: 12, vertical: 16}}\n                    >\n                      <Heading>{displayName}</Heading>\n                      <Tooltip content={topLevelResourceDetailsOrError.resourceType || ''}>\n                        <Mono>{resourceTypeSuccinct}</Mono>\n                      </Tooltip>\n                    </Box>\n                    <Box\n                      border=\"top-and-bottom\"\n                      background={Colors.backgroundLight()}\n                      padding={{vertical: 8, horizontal: 24}}\n                      style={{fontSize: '12px', fontWeight: 500}}\n                    >\n                      Description\n                    </Box>\n                    <Box padding={{horizontal: 24, vertical: 16}}>\n                      {topLevelResourceDetailsOrError.description ? (\n                        <Markdown>\n                          {removeLeadingTabs(topLevelResourceDetailsOrError.description)}\n                        </Markdown>\n                      ) : (\n                        'None'\n                      )}\n                    </Box>\n                  </Box>\n                }\n              />\n            </div>\n          );\n        }}\n      </Loading>\n    </Page>\n  );\n};\n\nconst ResourceConfig = (props: {\n  resourceDetails: ResourceDetailsFragment;\n  repoAddress: RepoAddress;\n}) => {\n  const {resourceDetails, repoAddress} = props;\n\n  const configuredValues = Object.fromEntries(\n    resourceDetails.configuredValues.map((cv) => [cv.key, {value: cv.value, type: cv.type}]),\n  );\n  const nestedResources = resourceDetails.nestedResources;\n\n  return (\n    <>\n      {nestedResources.length > 0 && (\n        <Box>\n          <SectionHeader>\n            <Subheading>Resource dependencies</Subheading>\n          </SectionHeader>\n          <Table>\n            <thead>\n              <tr>\n                <th style={{width: 120}}>Key</th>\n                <th style={{width: 180}}>Resource</th>\n              </tr>\n            </thead>\n            <tbody>\n              {nestedResources.map((resource) => {\n                const resourceEntry =\n                  resource.type === 'TOP_LEVEL' && resource.resource ? (\n                    <ResourceEntry\n                      key={resource.name}\n                      url={workspacePathFromAddress(repoAddress, `/resources/${resource.name}`)}\n                      name={resourceDisplayName(resource.resource) || ''}\n                      description={resource.resource.description || undefined}\n                    />\n                  ) : (\n                    <ResourceEntry key={resource.name} name={resource.name} />\n                  );\n\n                return (\n                  <tr key={resource.name}>\n                    <td>\n                      <strong>{resource.name}</strong>\n                    </td>\n                    <td colSpan={2}>{resourceEntry}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </Box>\n      )}\n      <Box>\n        <SectionHeader>\n          <Subheading>Configuration</Subheading>\n        </SectionHeader>\n        <Table>\n          <thead>\n            <tr>\n              <th style={{width: 120}}>Key</th>\n              <th style={{width: 90}}>Type</th>\n              <th style={{width: 90}}>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {resourceDetails.configFields.length === 0 ? (\n              <tr>\n                <td colSpan={3}>\n                  <Box padding={{vertical: 8}}>\n                    <NonIdealState\n                      icon=\"settings\"\n                      title=\"No configuration\"\n                      description=\"This resource has no configuration fields.\"\n                    />\n                  </Box>\n                </td>\n              </tr>\n            ) : (\n              resourceDetails.configFields.map((field) => {\n                const defaultValue = field.defaultValueAsJson;\n                const type = configuredValues.hasOwnProperty(field.name)\n                  ? configuredValues[field.name]!.type\n                  : null;\n                const actualValue = configuredValues.hasOwnProperty(field.name)\n                  ? configuredValues[field.name]!.value\n                  : defaultValue;\n\n                const isDefault = type === 'VALUE' && defaultValue === actualValue;\n                return (\n                  <tr key={field.name}>\n                    <td>\n                      <Box flex={{direction: 'column', gap: 4, alignItems: 'flex-start'}}>\n                        <strong>{field.name}</strong>\n                        <div style={{fontSize: 12, color: Colors.textLight()}}>\n                          {field.description}\n                        </div>\n                      </Box>\n                    </td>\n                    <td>{remapName(field.configTypeKey)}</td>\n                    <td>\n                      <Box flex={{direction: 'row', gap: 16}}>\n                        <Tooltip\n                          content={<>Default: {defaultValue}</>}\n                          canShow={!isDefault && !!defaultValue}\n                        >\n                          {type === 'ENV_VAR' ? <Tag>{actualValue}</Tag> : actualValue}\n                        </Tooltip>\n                        {isDefault && <Tag>Default</Tag>}\n                        {type === 'ENV_VAR' && <Tag intent=\"success\">Env var</Tag>}\n                      </Box>\n                    </td>\n                  </tr>\n                );\n              })\n            )}\n          </tbody>\n        </Table>\n      </Box>\n    </>\n  );\n};\n\nconst ResourceUses = (props: {\n  resourceDetails: ResourceDetailsFragment;\n  repoAddress: RepoAddress;\n  numUses: number;\n}) => {\n  const {resourceDetails, repoAddress, numUses} = props;\n\n  if (numUses === 0) {\n    return (\n      <Box padding={{vertical: 16}}>\n        <NonIdealState\n          icon=\"list\"\n          title=\"No uses\"\n          description=\"This resource is not used by any assets or resources.\"\n        />\n      </Box>\n    );\n  }\n\n  const parentResources = resourceDetails.parentResources;\n  return (\n    <>\n      {parentResources.length > 0 && (\n        <Box>\n          <SectionHeader>\n            <Subheading>Parent resources</Subheading>\n          </SectionHeader>\n          <Table>\n            <thead>\n              <tr>\n                <th>Resource</th>\n              </tr>\n            </thead>\n            <tbody>\n              {parentResources.map((ref) => {\n                return (\n                  ref.resource && (\n                    <tr key={ref.resource.name}>\n                      <td>\n                        <ResourceEntry\n                          url={workspacePathFromAddress(\n                            repoAddress,\n                            `/resources/${ref.resource.name}`,\n                          )}\n                          name={resourceDisplayName(ref.resource) || ''}\n                          description={ref.resource.description || undefined}\n                        />\n                      </td>\n                    </tr>\n                  )\n                );\n              })}\n            </tbody>\n          </Table>\n        </Box>\n      )}\n      {resourceDetails.assetKeysUsing.length > 0 && (\n        <Box>\n          <SectionHeader>\n            <Subheading>Assets</Subheading>\n          </SectionHeader>\n          <Table>\n            <thead>\n              <tr>\n                <th>Asset key</th>\n              </tr>\n            </thead>\n            <tbody>\n              {resourceDetails.assetKeysUsing.map((assetKey) => {\n                return (\n                  <tr key={assetKey.path.join('/')}>\n                    <td>\n                      <AssetLink key={assetKey.path.join('/')} path={assetKey.path} icon=\"asset\" />\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </Box>\n      )}\n      {resourceDetails.jobsOpsUsing.length > 0 && (\n        <Box>\n          <SectionHeader>\n            <Subheading>Jobs</Subheading>\n          </SectionHeader>\n          <Table>\n            <thead>\n              <tr>\n                <th>Job name</th>\n                <th>Ops</th>\n              </tr>\n            </thead>\n            <tbody>\n              {resourceDetails.jobsOpsUsing.map((jobOps) => {\n                return (\n                  <tr key={jobOps.jobName}>\n                    <td>\n                      <Box\n                        flex={{\n                          direction: 'row',\n                          alignItems: 'center',\n                          display: 'inline-flex',\n                          gap: 8,\n                        }}\n                        style={{maxWidth: '100%'}}\n                      >\n                        <Icon name=\"job\" color={Colors.accentGray()} />\n\n                        <Link to={workspacePathFromAddress(repoAddress, `/jobs/${jobOps.jobName}`)}>\n                          <MiddleTruncate text={jobOps.jobName} />\n                        </Link>\n                      </Box>\n                    </td>\n                    <td>\n                      <Box\n                        flex={{\n                          direction: 'row',\n                          alignItems: 'center',\n                          display: 'inline-flex',\n                          gap: 8,\n                        }}\n                        style={{maxWidth: '100%'}}\n                      >\n                        {jobOps.opHandleIDs.map((opHandleID) => (\n                          <Box\n                            flex={{\n                              direction: 'row',\n                              alignItems: 'center',\n                              display: 'inline-flex',\n                              gap: 8,\n                            }}\n                            style={{maxWidth: '100%'}}\n                            key={opHandleID}\n                          >\n                            <Icon name=\"op\" color={Colors.accentGray()} />\n\n                            <Link\n                              to={workspacePathFromAddress(\n                                repoAddress,\n                                `/jobs/${jobOps.jobName}/${opHandleID.split('.').join('/')}`,\n                              )}\n                            >\n                              <MiddleTruncate text={opHandleID} />\n                            </Link>\n                          </Box>\n                        ))}\n                      </Box>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </Box>\n      )}\n      {[\n        {\n          name: 'Schedules',\n          objects: resourceDetails.schedulesUsing,\n          icon: <Icon name=\"schedule\" color={Colors.accentGray()} />,\n        },\n        {\n          name: 'Sensors',\n          objects: resourceDetails.sensorsUsing,\n          icon: <Icon name=\"sensors\" color={Colors.accentGray()} />,\n        },\n      ]\n        .filter(({objects}) => objects.length > 0)\n        .map(({name, objects, icon}) => (\n          <div key={name}>\n            <SectionHeader>\n              <Subheading>{name}</Subheading>\n            </SectionHeader>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {objects.map((itemName) => {\n                  return (\n                    <tr key={name + ':' + itemName}>\n                      <td>\n                        <Box\n                          flex={{\n                            direction: 'row',\n                            alignItems: 'center',\n                            display: 'inline-flex',\n                            gap: 8,\n                          }}\n                          style={{maxWidth: '100%'}}\n                        >\n                          {icon}\n\n                          <Link\n                            to={workspacePathFromAddress(\n                              repoAddress,\n                              `/${name.toLowerCase()}/${itemName}`,\n                            )}\n                          >\n                            <MiddleTruncate text={itemName} />\n                          </Link>\n                        </Box>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n        ))}\n    </>\n  );\n};\n\nconst ResourceEntry = (props: {name: string; url?: string; description?: string}) => {\n  const {url, name, description} = props;\n\n  return (\n    <Box flex={{direction: 'column'}}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}} style={{maxWidth: '100%'}}>\n        <Icon name=\"resource\" color={Colors.accentBlue()} />\n        <div style={{maxWidth: '100%', whiteSpace: 'nowrap', fontWeight: 500}}>\n          {url ? (\n            <Link to={url} style={{overflow: 'hidden'}}>\n              <MiddleTruncate text={name} />\n            </Link>\n          ) : (\n            <MiddleTruncate text={name} />\n          )}\n        </div>\n      </Box>\n      <CaptionMono>{description}</CaptionMono>\n    </Box>\n  );\n};\n\nconst RESOURCE_DETAILS_FRAGMENT = gql`\n  fragment ResourceDetailsFragment on ResourceDetails {\n    name\n    description\n    configFields {\n      name\n      description\n      configTypeKey\n      isRequired\n      defaultValueAsJson\n    }\n    configuredValues {\n      key\n      value\n      type\n    }\n    nestedResources {\n      name\n      type\n      resource {\n        name\n        resourceType\n        description\n      }\n    }\n    parentResources {\n      name\n      resource {\n        name\n        resourceType\n        description\n      }\n    }\n    assetKeysUsing {\n      path\n    }\n    schedulesUsing\n    sensorsUsing\n    jobsOpsUsing {\n      jobName\n      opHandleIDs\n    }\n    resourceType\n  }\n`;\nconst RESOURCE_ROOT_QUERY = gql`\n  query ResourceRootQuery($resourceSelector: ResourceSelector!) {\n    topLevelResourceDetailsOrError(resourceSelector: $resourceSelector) {\n      ...ResourceDetailsFragment\n      ...PythonErrorFragment\n    }\n  }\n  ${RESOURCE_DETAILS_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n"],"names":["titles","configuration","uses","ResourceTabs","repoAddress","resourceName","numUses","props","match","useRouteMatch","active","params","tab","jsx_runtime","jsx","Fragment","jsxs","Tabs","size","selectedTabId","TabLink","id","title","to","workspacePathFromAddress","concat","Box","flex","gap","alignItems","Tag","intent","minimal","remapName","inName","succinctType","resourceType","split","pop","resourceDisplayName","resource","name","startsWith","SectionHeader","padding","left","vertical","background","Colors","border","children","removeLeadingTabs","lines","map","line","replace","join","ResourceRoot","queryResult","useTrackPageView","useParams","useDocumentTitle","resourceSelector","repoAddressToSelector","useQuery","RESOURCE_ROOT_QUERY","variables","displayName","data","topLevelResourceDetailsOrError","__typename","parentResources","length","assetKeysUsing","jobsOpsUsing","schedulesUsing","sensorsUsing","Page","style","height","overflow","PageHeader","Heading","tags","icon","RepositoryLink","tabs","Loading","allowStaleData","param","message","Alert","Group","direction","spacing","div","ButtonLink","color","underline","onClick","showCustomAlert","body","resourceTypeSuccinct","display","SplitPanelContainer","identifier","firstInitialPercent","firstMinSize","first","bottom","overflowY","ResourceUses","resourceDetails","ResourceConfig","second","margin","right","Tooltip","content","Mono","horizontal","fontSize","fontWeight","description","Markdown","configuredValues","Object","fromEntries","cv","key","value","type","nestedResources","Subheading","Table","thead","tr","th","width","tbody","resourceEntry","ResourceEntry","url","undefined","td","strong","colSpan","configFields","NonIdealState","defaultValue","field","defaultValueAsJson","hasOwnProperty","actualValue","isDefault","configTypeKey","canShow","ref","AssetLink","path","assetKey","maxWidth","Icon","Link","jobOps","jobName","MiddleTruncate","text","opHandleIDs","opHandleID","objects","filter","itemName","toLowerCase","whiteSpace","CaptionMono","RESOURCE_DETAILS_FRAGMENT","gql","PYTHON_ERROR_FRAGMENT"],"sourceRoot":""}